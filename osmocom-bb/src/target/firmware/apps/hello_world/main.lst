   1              		.file	"main.c"
   9              	.Ltext0:
  10              		.global	hr
  11              		.section	.rodata.str1.4,"aMS",%progbits,1
  12              		.align	2
  13              	.LC0:
  14 0000 3D3D3D3D 		.ascii	"==================================================="
  14      3D3D3D3D 
  14      3D3D3D3D 
  14      3D3D3D3D 
  14      3D3D3D3D 
  15 0033 3D3D3D3D 		.ascii	"===================\012\000"
  15      3D3D3D3D 
  15      3D3D3D3D 
  15      3D3D3D3D 
  15      3D3D3D0A 
  16              		.data
  17              		.align	2
  20              	hr:
  21 0000 00000000 		.word	.LC0
  22              		.align	2
  25              	write_battery_info_timer:
  26 0004 00000000 		.space	16
  26      00000000 
  26      00000000 
  26      00000000 
  27 0014 00000000 		.word	write_battery_info
  28 0018 04000000 		.word	write_battery_info_timer
  29              		.section	.text.fb_putstr,"ax",%progbits
  30              		.align	2
  32              	fb_putstr:
  33              	.LFB56:
  34              		.file 1 "include/fb/framebuffer.h"
   1:include/fb/framebuffer.h **** #ifndef _FB_FRAMEBUFFER_H
   2:include/fb/framebuffer.h **** #define _FB_FRAMEBUFFER_H
   3:include/fb/framebuffer.h **** 
   4:include/fb/framebuffer.h **** #include <fb/font.h>
   5:include/fb/framebuffer.h **** #include <stdint.h>
   6:include/fb/framebuffer.h **** 
   7:include/fb/framebuffer.h **** /* color is encoded as <special><red><green><blue> */
   8:include/fb/framebuffer.h **** /* if a color is "special", then the RGB components most likely
   9:include/fb/framebuffer.h ****    don't make sense. Use "special" colours when you have to
  10:include/fb/framebuffer.h ****    mask out bits with transparency or you have to encode
  11:include/fb/framebuffer.h ****    colours in a fixed color palette ... */
  12:include/fb/framebuffer.h **** 
  13:include/fb/framebuffer.h **** #define FB_COLOR_WHITE		0x00ffffffU
  14:include/fb/framebuffer.h **** #define FB_COLOR_BLACK		0x00000000U
  15:include/fb/framebuffer.h **** #define FB_COLOR_TRANSP		0x01ffffffU
  16:include/fb/framebuffer.h **** 
  17:include/fb/framebuffer.h **** #define FB_COLOR_RGB(r,g,b) ((((r) & 0xff)<<16)|(((g)&0xff)<<8)|((b)&0xff))
  18:include/fb/framebuffer.h **** #define FB_COLOR_RED		FB_COLOR_RGB(0xff,0x00,0x00)
  19:include/fb/framebuffer.h **** #define FB_COLOR_GREEN		FB_COLOR_RGB(0x00,0xff,0x00)
  20:include/fb/framebuffer.h **** #define FB_COLOR_BLUE		FB_COLOR_RGB(0x00,0x00,0xff)
  21:include/fb/framebuffer.h **** 
  22:include/fb/framebuffer.h **** /* encode */
  23:include/fb/framebuffer.h **** 
  24:include/fb/framebuffer.h **** /* decode */
  25:include/fb/framebuffer.h **** #define FB_COLOR_IS_SPECIAL(v)     (!!((v) & 0xff000000U))
  26:include/fb/framebuffer.h **** #define FB_COLOR_TO_R(v)		(((v)>>16) & 0xff)
  27:include/fb/framebuffer.h **** #define FB_COLOR_TO_G(v)		(((v)>> 8) & 0xff)
  28:include/fb/framebuffer.h **** #define FB_COLOR_TO_B(v)		( (v)      & 0xff)
  29:include/fb/framebuffer.h **** 
  30:include/fb/framebuffer.h **** struct framebuffer {
  31:include/fb/framebuffer.h **** 	char name[8];				// keep it short!
  32:include/fb/framebuffer.h **** 	void (*init)();				// (re)initialize
  33:include/fb/framebuffer.h **** 	void (*clear)();			// clear display
  34:include/fb/framebuffer.h **** 	void (*set_p)(uint16_t x,uint16_t y);	// set pixel to fg color
  35:include/fb/framebuffer.h **** 	void (*boxto)(uint16_t x,uint16_t y);	// draw box to xy
  36:include/fb/framebuffer.h **** 	void (*lineto)(uint16_t x,uint16_t y);	// draw line to xy
  37:include/fb/framebuffer.h **** 	int (*putstr)(char *c,int maxwidth);	// put text in current font to fb
  38:include/fb/framebuffer.h **** 	void (*flush)();			// flush changes
  39:include/fb/framebuffer.h **** 
  40:include/fb/framebuffer.h **** 	uint16_t width,height;			// width/height of fb
  41:include/fb/framebuffer.h **** 	uint16_t cursor_x,cursor_y;		// current cursor
  42:include/fb/framebuffer.h **** 	uint32_t fg_color,bg_color;		// current fg/bg color
  43:include/fb/framebuffer.h **** 	enum fb_font_id font;			// current font
  44:include/fb/framebuffer.h **** };
  45:include/fb/framebuffer.h **** 
  46:include/fb/framebuffer.h **** /* there is a single framebuffer, the specific driver defines
  47:include/fb/framebuffer.h ****    the "framebuffer" symbol */
  48:include/fb/framebuffer.h **** extern struct framebuffer *framebuffer;
  49:include/fb/framebuffer.h **** 
  50:include/fb/framebuffer.h **** static inline void
  51:include/fb/framebuffer.h **** fb_init(){
  52:include/fb/framebuffer.h **** 	framebuffer->init();
  53:include/fb/framebuffer.h **** }
  54:include/fb/framebuffer.h **** 
  55:include/fb/framebuffer.h **** static inline void
  56:include/fb/framebuffer.h **** fb_clear(){
  57:include/fb/framebuffer.h **** 	framebuffer->clear();
  58:include/fb/framebuffer.h **** }
  59:include/fb/framebuffer.h **** 
  60:include/fb/framebuffer.h **** static inline void
  61:include/fb/framebuffer.h **** fb_boxto(uint16_t x,uint16_t y){
  62:include/fb/framebuffer.h **** 	framebuffer->boxto(x,y);
  63:include/fb/framebuffer.h **** }
  64:include/fb/framebuffer.h **** 
  65:include/fb/framebuffer.h **** static inline void
  66:include/fb/framebuffer.h **** fb_lineto(uint16_t x,uint16_t y){
  67:include/fb/framebuffer.h **** 	framebuffer->lineto(x,y);
  68:include/fb/framebuffer.h **** }
  69:include/fb/framebuffer.h **** 
  70:include/fb/framebuffer.h **** static inline void
  71:include/fb/framebuffer.h **** fb_set_p(uint16_t x,uint16_t y){
  72:include/fb/framebuffer.h **** 	framebuffer->set_p(x,y);
  73:include/fb/framebuffer.h **** }
  74:include/fb/framebuffer.h **** 
  75:include/fb/framebuffer.h **** static inline int
  76:include/fb/framebuffer.h **** fb_putstr(char *str,int maxwidth){
  35              		.loc 1 76 0
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 0, uses_anonymous_args = 0
  38              	.LVL0:
  39 0000 04E02DE5 		str	lr, [sp, #-4]!
  40              	.LCFI0:
  77:include/fb/framebuffer.h **** 	return framebuffer->putstr(str,maxwidth);
  41              		.loc 1 77 0
  42 0004 0C309FE5 		ldr	r3, .L3
  43 0008 003093E5 		ldr	r3, [r3, #0]
  44 000c 0FE0A0E1 		mov	lr, pc
  45 0010 1CF093E5 		ldr	pc, [r3, #28]
  46              	.LVL1:
  78:include/fb/framebuffer.h **** }
  47              		.loc 1 78 0
  48 0014 04F09DE4 		ldr	pc, [sp], #4
  49              	.L4:
  50              		.align	2
  51              	.L3:
  52 0018 00000000 		.word	framebuffer
  53              	.LFE56:
  55              		.section	.text.fb_flush,"ax",%progbits
  56              		.align	2
  58              	fb_flush:
  59              	.LFB57:
  79:include/fb/framebuffer.h **** 
  80:include/fb/framebuffer.h **** static inline void
  81:include/fb/framebuffer.h **** fb_flush(){
  60              		.loc 1 81 0
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              	.LVL2:
  64 0000 04E02DE5 		str	lr, [sp, #-4]!
  65              	.LCFI1:
  82:include/fb/framebuffer.h **** 	framebuffer->flush();
  66              		.loc 1 82 0
  67 0004 0C309FE5 		ldr	r3, .L7
  68 0008 003093E5 		ldr	r3, [r3, #0]
  69 000c 0FE0A0E1 		mov	lr, pc
  70 0010 20F093E5 		ldr	pc, [r3, #32]
  83:include/fb/framebuffer.h **** }
  71              		.loc 1 83 0
  72 0014 04F09DE4 		ldr	pc, [sp], #4
  73              	.L8:
  74              		.align	2
  75              	.L7:
  76 0018 00000000 		.word	framebuffer
  77              	.LFE57:
  79              		.section	.rodata.str1.4
  80              		.align	2
  81              	.LC1:
  82 0048 4D657373 		.ascii	"Message for unknown DLCI %u\012\000"
  82      61676520 
  82      666F7220 
  82      756E6B6E 
  82      6F776E20 
  83 0065 000000   		.align	2
  84              	.LC2:
  85 0068 4D657373 		.ascii	"Message on console DLCI: '%s'\012\000"
  85      61676520 
  85      6F6E2063 
  85      6F6E736F 
  85      6C652044 
  86              		.section	.text.console_rx_cb,"ax",%progbits
  87              		.align	2
  89              	console_rx_cb:
  90              	.LFB64:
  91              		.file 2 "apps/hello_world/main.c"
   1:apps/hello_world/main.c **** /* main program of Free Software for Calypso Phone */
   2:apps/hello_world/main.c **** 
   3:apps/hello_world/main.c **** /* (C) 2010 by Harald Welte <laforge@gnumonks.org>
   4:apps/hello_world/main.c ****  *
   5:apps/hello_world/main.c ****  * All Rights Reserved
   6:apps/hello_world/main.c ****  *
   7:apps/hello_world/main.c ****  * This program is free software; you can redistribute it and/or modify
   8:apps/hello_world/main.c ****  * it under the terms of the GNU General Public License as published by
   9:apps/hello_world/main.c ****  * the Free Software Foundation; either version 2 of the License, or
  10:apps/hello_world/main.c ****  * (at your option) any later version.
  11:apps/hello_world/main.c ****  *
  12:apps/hello_world/main.c ****  * This program is distributed in the hope that it will be useful,
  13:apps/hello_world/main.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:apps/hello_world/main.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:apps/hello_world/main.c ****  * GNU General Public License for more details.
  16:apps/hello_world/main.c ****  *
  17:apps/hello_world/main.c ****  * You should have received a copy of the GNU General Public License along
  18:apps/hello_world/main.c ****  * with this program; if not, write to the Free Software Foundation, Inc.,
  19:apps/hello_world/main.c ****  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  20:apps/hello_world/main.c ****  *
  21:apps/hello_world/main.c ****  */
  22:apps/hello_world/main.c **** 
  23:apps/hello_world/main.c **** #include <stdint.h>
  24:apps/hello_world/main.c **** #include <stdio.h>
  25:apps/hello_world/main.c **** #include <string.h>
  26:apps/hello_world/main.c **** 
  27:apps/hello_world/main.c **** #include <debug.h>
  28:apps/hello_world/main.c **** #include <memory.h>
  29:apps/hello_world/main.c **** #include <delay.h>
  30:apps/hello_world/main.c **** #include <rffe.h>
  31:apps/hello_world/main.c **** #include <keypad.h>
  32:apps/hello_world/main.c **** #include <board.h>
  33:apps/hello_world/main.c **** #include <abb/twl3025.h>
  34:apps/hello_world/main.c **** #include <rf/trf6151.h>
  35:apps/hello_world/main.c **** #include <calypso/clock.h>
  36:apps/hello_world/main.c **** #include <calypso/tpu.h>
  37:apps/hello_world/main.c **** #include <calypso/tsp.h>
  38:apps/hello_world/main.c **** #include <calypso/dsp.h>
  39:apps/hello_world/main.c **** #include <calypso/irq.h>
  40:apps/hello_world/main.c **** #include <calypso/misc.h>
  41:apps/hello_world/main.c **** #include <comm/sercomm.h>
  42:apps/hello_world/main.c **** #include <comm/timer.h>
  43:apps/hello_world/main.c **** #include <fb/framebuffer.h>
  44:apps/hello_world/main.c **** #include <battery/battery.h>
  45:apps/hello_world/main.c **** 
  46:apps/hello_world/main.c **** /* Main Program */
  47:apps/hello_world/main.c **** const char *hr = "======================================================================\n";
  48:apps/hello_world/main.c **** 
  49:apps/hello_world/main.c **** void key_handler(enum key_codes code, enum key_states state);
  50:apps/hello_world/main.c **** 
  51:apps/hello_world/main.c **** static void console_rx_cb(uint8_t dlci, struct msgb *msg)
  52:apps/hello_world/main.c **** {
  92              		.loc 2 52 0
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              	.LVL3:
  96 0000 0030A0E1 		mov	r3, r0
  97 0004 FF3003E2 		and	r3, r3, #255
  53:apps/hello_world/main.c **** 	if (dlci != SC_DLCI_CONSOLE) {
  98              		.loc 2 53 0
  99 0008 0A0053E3 		cmp	r3, #10
 100              		.loc 2 52 0
 101 000c 10402DE9 		stmfd	sp!, {r4, lr}
 102              	.LCFI2:
  54:apps/hello_world/main.c **** 		printf("Message for unknown DLCI %u\n", dlci);
  55:apps/hello_world/main.c **** 		return;
  56:apps/hello_world/main.c **** 	}
  57:apps/hello_world/main.c **** 
  58:apps/hello_world/main.c **** 	printf("Message on console DLCI: '%s'\n", msg->data);
 103              		.loc 2 58 0
 104 0010 28009FE5 		ldr	r0, .L14
 105              	.LVL4:
 106              		.loc 2 52 0
 107 0014 0140A0E1 		mov	r4, r1
 108              		.loc 2 54 0
 109 0018 0310A0E1 		mov	r1, r3
 110              	.LVL5:
 111              		.loc 2 53 0
 112 001c 0900000A 		beq	.L10
 113              	.LVL6:
 114              		.loc 2 54 0
 115 0020 1C009FE5 		ldr	r0, .L14+4
  59:apps/hello_world/main.c **** 	msgb_free(msg);
  60:apps/hello_world/main.c **** }
 116              		.loc 2 60 0
 117 0024 1040BDE8 		ldmfd	sp!, {r4, lr}
 118              		.loc 2 54 0
 119 0028 FEFFFFEA 		b	printf
 120              	.LVL7:
 121              	.L10:
 122              		.loc 2 58 0
 123 002c 401094E5 		ldr	r1, [r4, #64]
 124              	.LVL8:
 125 0030 FEFFFFEB 		bl	printf
 126              	.LVL9:
 127              		.loc 2 59 0
 128 0034 0400A0E1 		mov	r0, r4
 129              		.loc 2 60 0
 130 0038 1040BDE8 		ldmfd	sp!, {r4, lr}
 131              		.loc 2 59 0
 132 003c FEFFFFEA 		b	msgb_free
 133              	.L15:
 134              		.align	2
 135              	.L14:
 136 0040 68000000 		.word	.LC2
 137 0044 48000000 		.word	.LC1
 138              	.LFE64:
 140              		.section	.rodata.str1.4
 141 0087 00       		.align	2
 142              	.LC3:
 143 0088 6C31615F 		.ascii	"l1a_l23_rx_cb: \000"
 143      6C32335F 
 143      72785F63 
 143      623A2000 
 144              		.align	2
 145              	.LC4:
 146 0098 25303278 		.ascii	"%02x \000"
 146      2000
 147 009e 0000     		.align	2
 148              	.LC5:
 149 00a0 0A00     		.ascii	"\012\000"
 150              		.section	.text.l1a_l23_rx_cb,"ax",%progbits
 151              		.align	2
 153              	l1a_l23_rx_cb:
 154              	.LFB65:
  61:apps/hello_world/main.c **** 
  62:apps/hello_world/main.c **** static void l1a_l23_rx_cb(uint8_t dlci, struct msgb *msg)
  63:apps/hello_world/main.c **** {
 155              		.loc 2 63 0
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              	.LVL10:
 159 0000 30402DE9 		stmfd	sp!, {r4, r5, lr}
 160              	.LCFI3:
  64:apps/hello_world/main.c **** 	int i;
  65:apps/hello_world/main.c **** 	puts("l1a_l23_rx_cb: ");
 161              		.loc 2 65 0
 162 0004 38009FE5 		ldr	r0, .L21
 163              	.LVL11:
 164              		.loc 2 63 0
 165 0008 0150A0E1 		mov	r5, r1
 166              		.loc 2 65 0
 167 000c FEFFFFEB 		bl	puts
 168              	.LVL12:
 169 0010 0040A0E3 		mov	r4, #0
 170              	.LVL13:
 171 0014 080000EA 		b	.L17
 172              	.L18:
  66:apps/hello_world/main.c **** 	for (i = 0; i < msg->len; i++)
  67:apps/hello_world/main.c **** 		printf("%02x ", msg->data[i]);
 173              		.loc 2 67 0
 174 0018 403095E5 		ldr	r3, [r5, #64]
 175 001c 0410D3E7 		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 176 0020 FEFFFFEB 		bl	printf
 177              		.loc 2 66 0
 178 0024 014084E2 		add	r4, r4, #1
 179              	.L17:
 180 0028 B633D5E1 		ldrh	r3, [r5, #54]
 181 002c 030054E1 		cmp	r4, r3
 182              		.loc 2 67 0
 183 0030 10009FE5 		ldr	r0, .L21+4
 184              		.loc 2 66 0
 185 0034 040000BA 		blt	.L18
  68:apps/hello_world/main.c **** 	puts("\n");
 186              		.loc 2 68 0
 187 0038 0C009FE5 		ldr	r0, .L21+8
  69:apps/hello_world/main.c **** }
 188              		.loc 2 69 0
 189 003c 3040BDE8 		ldmfd	sp!, {r4, r5, lr}
 190              		.loc 2 68 0
 191 0040 FEFFFFEA 		b	puts
 192              	.L22:
 193              		.align	2
 194              	.L21:
 195 0044 88000000 		.word	.LC3
 196 0048 98000000 		.word	.LC4
 197 004c A0000000 		.word	.LC5
 198              	.LFE65:
 200              		.section	.text.key_handler,"ax",%progbits
 201              		.align	2
 202              		.global	key_handler
 204              	key_handler:
 205              	.LFB68:
  70:apps/hello_world/main.c **** 
  71:apps/hello_world/main.c **** void
  72:apps/hello_world/main.c **** write_battery_info(void *p){
  73:apps/hello_world/main.c **** 	char buf[128];
  74:apps/hello_world/main.c **** 
  75:apps/hello_world/main.c **** 	fb_setfg(FB_COLOR_WHITE);
  76:apps/hello_world/main.c **** 	fb_setfont(FB_FONT_C64);
  77:apps/hello_world/main.c **** 
  78:apps/hello_world/main.c **** 	snprintf(buf,sizeof(buf),"B: %04d mV",battery_info.bat_volt_mV);
  79:apps/hello_world/main.c **** 	fb_gotoxy(8,41);
  80:apps/hello_world/main.c **** 	fb_putstr(buf,framebuffer->width-8);
  81:apps/hello_world/main.c **** 
  82:apps/hello_world/main.c **** 	snprintf(buf,sizeof(buf),"C: %04d mV",battery_info.charger_volt_mV);
  83:apps/hello_world/main.c **** 	fb_gotoxy(8,49);
  84:apps/hello_world/main.c **** 	fb_putstr(buf,framebuffer->width-8);
  85:apps/hello_world/main.c **** 
  86:apps/hello_world/main.c **** 	snprintf(buf,sizeof(buf),"F: %08x",battery_info.flags);
  87:apps/hello_world/main.c **** 	fb_gotoxy(8,57);
  88:apps/hello_world/main.c **** 	fb_putstr(buf,framebuffer->width-8);
  89:apps/hello_world/main.c **** 
  90:apps/hello_world/main.c **** 	fb_flush();
  91:apps/hello_world/main.c **** 	osmo_timer_schedule((struct osmo_timer_list*)p,100);
  92:apps/hello_world/main.c **** 
  93:apps/hello_world/main.c **** }
  94:apps/hello_world/main.c **** 
  95:apps/hello_world/main.c **** /* timer that fires the charging loop regularly */
  96:apps/hello_world/main.c **** static struct osmo_timer_list write_battery_info_timer = {
  97:apps/hello_world/main.c **** 	.cb = &write_battery_info,
  98:apps/hello_world/main.c **** 	.data = &write_battery_info_timer
  99:apps/hello_world/main.c **** };
 100:apps/hello_world/main.c **** 
 101:apps/hello_world/main.c **** int main(void)
 102:apps/hello_world/main.c **** {
 103:apps/hello_world/main.c **** 	board_init(1);
 104:apps/hello_world/main.c **** 
 105:apps/hello_world/main.c **** 	puts("\n\nOsmocomBB Hello World (revision " GIT_REVISION ")\n");
 106:apps/hello_world/main.c **** 	puts(hr);
 107:apps/hello_world/main.c **** 
 108:apps/hello_world/main.c **** 	/* Dump device identification */
 109:apps/hello_world/main.c **** 	dump_dev_id();
 110:apps/hello_world/main.c **** 	puts(hr);
 111:apps/hello_world/main.c **** 
 112:apps/hello_world/main.c **** 	/* Dump clock config before PLL set */
 113:apps/hello_world/main.c **** 	calypso_clk_dump();
 114:apps/hello_world/main.c **** 	puts(hr);
 115:apps/hello_world/main.c **** 
 116:apps/hello_world/main.c **** 	keypad_set_handler(&key_handler);
 117:apps/hello_world/main.c **** 
 118:apps/hello_world/main.c **** 	/* Dump clock config after PLL set */
 119:apps/hello_world/main.c **** 	calypso_clk_dump();
 120:apps/hello_world/main.c **** 	puts(hr);
 121:apps/hello_world/main.c **** 
 122:apps/hello_world/main.c **** 	fb_clear();
 123:apps/hello_world/main.c **** 
 124:apps/hello_world/main.c **** 	fb_setfg(FB_COLOR_BLACK);
 125:apps/hello_world/main.c **** 	fb_setbg(FB_COLOR_WHITE);
 126:apps/hello_world/main.c **** 	fb_setfont(FB_FONT_HELVB14);
 127:apps/hello_world/main.c **** 
 128:apps/hello_world/main.c **** 	fb_gotoxy(2,20);
 129:apps/hello_world/main.c **** 	fb_putstr("Hello World!",framebuffer->width-4);
 130:apps/hello_world/main.c **** 
 131:apps/hello_world/main.c **** 	fb_setfg(FB_COLOR_RED);
 132:apps/hello_world/main.c **** 	fb_setbg(FB_COLOR_BLUE);
 133:apps/hello_world/main.c **** 
 134:apps/hello_world/main.c **** 	fb_gotoxy(2,25);
 135:apps/hello_world/main.c **** 	fb_boxto(framebuffer->width-3,38);
 136:apps/hello_world/main.c **** 
 137:apps/hello_world/main.c **** 	fb_setfg(FB_COLOR_WHITE);
 138:apps/hello_world/main.c **** 	fb_setfont(FB_FONT_HELVR08);
 139:apps/hello_world/main.c **** 	fb_gotoxy(8,33);
 140:apps/hello_world/main.c **** 	fb_putstr("osmocom-bb",framebuffer->width-4);
 141:apps/hello_world/main.c **** 
 142:apps/hello_world/main.c **** 	fb_flush();
 143:apps/hello_world/main.c **** 
 144:apps/hello_world/main.c **** 
 145:apps/hello_world/main.c **** 
 146:apps/hello_world/main.c **** 	/* Dump all memory */
 147:apps/hello_world/main.c **** 	//dump_mem();
 148:apps/hello_world/main.c **** #if 0
 149:apps/hello_world/main.c **** 	/* Dump Bootloader */
 150:apps/hello_world/main.c **** 	memdump_range((void *)0x00000000, 0x2000);
 151:apps/hello_world/main.c **** 	puts(hr);
 152:apps/hello_world/main.c **** #endif
 153:apps/hello_world/main.c **** 
 154:apps/hello_world/main.c **** 	sercomm_register_rx_cb(SC_DLCI_CONSOLE, console_rx_cb);
 155:apps/hello_world/main.c **** 	sercomm_register_rx_cb(SC_DLCI_L1A_L23, l1a_l23_rx_cb);
 156:apps/hello_world/main.c **** 
 157:apps/hello_world/main.c **** 	osmo_timer_schedule(&write_battery_info_timer,100);
 158:apps/hello_world/main.c **** 
 159:apps/hello_world/main.c **** 	/* beyond this point we only react to interrupts */
 160:apps/hello_world/main.c **** 	puts("entering interrupt loop\n");
 161:apps/hello_world/main.c **** 	while (1) {
 162:apps/hello_world/main.c **** 		osmo_timers_update();
 163:apps/hello_world/main.c **** 	}
 164:apps/hello_world/main.c **** 
 165:apps/hello_world/main.c **** 	twl3025_power_off();
 166:apps/hello_world/main.c **** 
 167:apps/hello_world/main.c **** 	while (1) {}
 168:apps/hello_world/main.c **** }
 169:apps/hello_world/main.c **** 
 170:apps/hello_world/main.c **** void key_handler(enum key_codes code, enum key_states state)
 171:apps/hello_world/main.c **** {
 206              		.loc 2 171 0
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 210              	.LVL14:
 211              		@ lr needed for prologue
 172:apps/hello_world/main.c **** 	char test[16];
 173:apps/hello_world/main.c **** 
 174:apps/hello_world/main.c **** 	if (state != PRESSED)
 175:apps/hello_world/main.c **** 		return;
 176:apps/hello_world/main.c **** 
 177:apps/hello_world/main.c **** 	switch (code) {
 178:apps/hello_world/main.c **** 	case KEY_0:
 179:apps/hello_world/main.c **** 	case KEY_1:
 180:apps/hello_world/main.c **** 	case KEY_2:
 181:apps/hello_world/main.c **** 	case KEY_3:
 182:apps/hello_world/main.c **** 	case KEY_4:
 183:apps/hello_world/main.c **** 	case KEY_5:
 184:apps/hello_world/main.c **** 	case KEY_6:
 185:apps/hello_world/main.c **** 	case KEY_7:
 186:apps/hello_world/main.c **** 	case KEY_8:
 187:apps/hello_world/main.c **** 	case KEY_9:
 188:apps/hello_world/main.c **** 		// used to be display_puts...
 189:apps/hello_world/main.c **** 		break;
 190:apps/hello_world/main.c **** 	case KEY_STAR:
 191:apps/hello_world/main.c **** 		// used to be display puts...
 192:apps/hello_world/main.c **** 		break;
 193:apps/hello_world/main.c **** 	case KEY_HASH:
 194:apps/hello_world/main.c **** 		// used to be display puts...
 195:apps/hello_world/main.c **** 		break;
 196:apps/hello_world/main.c **** 	default:
 197:apps/hello_world/main.c **** 		break;
 198:apps/hello_world/main.c **** 	}
 199:apps/hello_world/main.c **** }
 212              		.loc 2 199 0
 213 0000 1EFF2FE1 		bx	lr
 214              	.LFE68:
 216              		.section	.rodata.str1.4
 217 00a2 0000     		.align	2
 218              	.LC6:
 219 00a4 423A2025 		.ascii	"B: %04d mV\000"
 219      30346420 
 219      6D5600
 220 00af 00       		.align	2
 221              	.LC7:
 222 00b0 433A2025 		.ascii	"C: %04d mV\000"
 222      30346420 
 222      6D5600
 223 00bb 00       		.align	2
 224              	.LC8:
 225 00bc 463A2025 		.ascii	"F: %08x\000"
 225      30387800 
 226              		.section	.text.write_battery_info,"ax",%progbits
 227              		.align	2
 228              		.global	write_battery_info
 230              	write_battery_info:
 231              	.LFB66:
 232              		.loc 2 72 0
 233              		@ args = 0, pretend = 0, frame = 128
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              	.LVL15:
 236 0000 F0412DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, lr}
 237              	.LCFI4:
 238              	.LBB2:
 239              	.LBB3:
  84:include/fb/framebuffer.h **** 
  85:include/fb/framebuffer.h **** static inline void
  86:include/fb/framebuffer.h **** fb_gotoxy(uint16_t x,uint16_t y){
  87:include/fb/framebuffer.h **** 	framebuffer->cursor_x = x;
  88:include/fb/framebuffer.h **** 	framebuffer->cursor_y = y;
  89:include/fb/framebuffer.h **** }
  90:include/fb/framebuffer.h **** 
  91:include/fb/framebuffer.h **** static inline void
  92:include/fb/framebuffer.h **** fb_setfg(uint32_t color){
  93:include/fb/framebuffer.h **** 	framebuffer->fg_color = color;
 240              		.loc 1 93 0
 241 0004 D8609FE5 		ldr	r6, .L27
 242 0008 002096E5 		ldr	r2, [r6, #0]
 243              	.LBE3:
 244              	.LBE2:
 245              		.loc 2 78 0
 246 000c D4709FE5 		ldr	r7, .L27+4
 247              	.LBB4:
 248              	.LBB5:
  94:include/fb/framebuffer.h **** }
  95:include/fb/framebuffer.h **** 
  96:include/fb/framebuffer.h **** static inline void
  97:include/fb/framebuffer.h **** fb_setbg(uint32_t color){
  98:include/fb/framebuffer.h **** 	framebuffer->bg_color = color;
  99:include/fb/framebuffer.h **** }
 100:include/fb/framebuffer.h **** 
 101:include/fb/framebuffer.h **** static inline void
 102:include/fb/framebuffer.h **** fb_setfont(enum fb_font_id fid){
 103:include/fb/framebuffer.h **** 	framebuffer->font = fid;
 249              		.loc 1 103 0
 250 0010 0230A0E3 		mov	r3, #2
 251              	.LBE5:
 252              	.LBE4:
 253              		.loc 2 72 0
 254 0014 80D04DE2 		sub	sp, sp, #128
 255              	.LCFI5:
 256              	.LVL16:
 257              	.LBB6:
 258              	.LBB7:
 259              		.loc 1 103 0
 260 0018 343082E5 		str	r3, [r2, #52]
 261              	.LBE7:
 262              	.LBE6:
 263              	.LBB8:
 264              	.LBB9:
 265              		.loc 1 93 0
 266 001c FF34E0E3 		mvn	r3, #-16777216
 267 0020 2C3082E5 		str	r3, [r2, #44]
 268              	.LBE9:
 269              	.LBE8:
 270              		.loc 2 72 0
 271 0024 0080A0E1 		mov	r8, r0
 272              		.loc 2 78 0
 273 0028 083097E5 		ldr	r3, [r7, #8]
 274 002c B8209FE5 		ldr	r2, .L27+8
 275 0030 8010A0E3 		mov	r1, #128
 276 0034 0D00A0E1 		mov	r0, sp
 277              	.LVL17:
 278 0038 FEFFFFEB 		bl	snprintf
 279              	.LBB10:
 280              	.LBB11:
 281              		.loc 1 87 0
 282 003c 003096E5 		ldr	r3, [r6, #0]
 283              	.LBE11:
 284              	.LBE10:
 285              		.loc 2 80 0
 286 0040 B412D3E1 		ldrh	r1, [r3, #36]
 287              	.LBB12:
 288              	.LBB13:
 289              		.loc 1 87 0
 290 0044 0850A0E3 		mov	r5, #8
 291              		.loc 1 88 0
 292 0048 2920A0E3 		mov	r2, #41	@ movhi
 293              		.loc 1 87 0
 294 004c B852C3E1 		strh	r5, [r3, #40]	@ movhi
 295              		.loc 1 88 0
 296 0050 BA22C3E1 		strh	r2, [r3, #42]	@ movhi
 297              	.LBE13:
 298              	.LBE12:
 299              		.loc 2 80 0
 300 0054 081041E2 		sub	r1, r1, #8
 301 0058 0D00A0E1 		mov	r0, sp
 302 005c FEFFFFEB 		bl	fb_putstr
 303              		.loc 2 82 0
 304 0060 043097E5 		ldr	r3, [r7, #4]
 305 0064 0D00A0E1 		mov	r0, sp
 306 0068 80209FE5 		ldr	r2, .L27+12
 307 006c 8010A0E3 		mov	r1, #128
 308 0070 FEFFFFEB 		bl	snprintf
 309              	.LBB14:
 310              	.LBB15:
 311              		.loc 1 87 0
 312 0074 003096E5 		ldr	r3, [r6, #0]
 313              	.LBE15:
 314              	.LBE14:
 315              		.loc 2 84 0
 316 0078 B412D3E1 		ldrh	r1, [r3, #36]
 317              	.LBB16:
 318              	.LBB17:
 319              		.loc 1 88 0
 320 007c 3120A0E3 		mov	r2, #49	@ movhi
 321              		.loc 1 87 0
 322 0080 B852C3E1 		strh	r5, [r3, #40]	@ movhi
 323              		.loc 1 88 0
 324 0084 BA22C3E1 		strh	r2, [r3, #42]	@ movhi
 325              	.LBE17:
 326              	.LBE16:
 327              		.loc 2 84 0
 328 0088 081041E2 		sub	r1, r1, #8
 329 008c 0D00A0E1 		mov	r0, sp
 330 0090 FEFFFFEB 		bl	fb_putstr
 331              		.loc 2 86 0
 332 0094 003097E5 		ldr	r3, [r7, #0]
 333 0098 0D00A0E1 		mov	r0, sp
 334 009c 50209FE5 		ldr	r2, .L27+16
 335 00a0 8010A0E3 		mov	r1, #128
 336 00a4 FEFFFFEB 		bl	snprintf
 337              	.LBB18:
 338              	.LBB19:
 339              		.loc 1 87 0
 340 00a8 003096E5 		ldr	r3, [r6, #0]
 341              	.LBE19:
 342              	.LBE18:
 343              		.loc 2 88 0
 344 00ac B412D3E1 		ldrh	r1, [r3, #36]
 345              	.LBB20:
 346              	.LBB21:
 347              		.loc 1 88 0
 348 00b0 3920A0E3 		mov	r2, #57	@ movhi
 349              		.loc 1 87 0
 350 00b4 B852C3E1 		strh	r5, [r3, #40]	@ movhi
 351              	.LBE21:
 352              	.LBE20:
 353              		.loc 2 88 0
 354 00b8 081041E2 		sub	r1, r1, #8
 355              	.LBB22:
 356              	.LBB23:
 357              		.loc 1 88 0
 358 00bc BA22C3E1 		strh	r2, [r3, #42]	@ movhi
 359              	.LBE23:
 360              	.LBE22:
 361              		.loc 2 88 0
 362 00c0 0D00A0E1 		mov	r0, sp
 363 00c4 FEFFFFEB 		bl	fb_putstr
 364              		.loc 2 90 0
 365 00c8 FEFFFFEB 		bl	fb_flush
 366              		.loc 2 91 0
 367 00cc 0800A0E1 		mov	r0, r8
 368 00d0 6410A0E3 		mov	r1, #100
 369              		.loc 2 78 0
 370 00d4 0D40A0E1 		mov	r4, sp
 371              		.loc 2 91 0
 372 00d8 FEFFFFEB 		bl	osmo_timer_schedule
 373              		.loc 2 93 0
 374 00dc 80D08DE2 		add	sp, sp, #128
 375 00e0 F081BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, pc}
 376              	.L28:
 377              		.align	2
 378              	.L27:
 379 00e4 00000000 		.word	framebuffer
 380 00e8 00000000 		.word	battery_info
 381 00ec A4000000 		.word	.LC6
 382 00f0 B0000000 		.word	.LC7
 383 00f4 BC000000 		.word	.LC8
 384              	.LFE66:
 386              		.section	.rodata.str1.4
 387              		.align	2
 388              	.LC9:
 389 00c4 0A0A4F73 		.ascii	"\012\012OsmocomBB Hello World (revision osmocon_v0."
 389      6D6F636F 
 389      6D424220 
 389      48656C6C 
 389      6F20576F 
 390 00f1 302E302D 		.ascii	"0.0-2613-g2308b582)\012\000"
 390      32363133 
 390      2D673233 
 390      30386235 
 390      3832290A 
 391 0106 0000     		.align	2
 392              	.LC10:
 393 0108 48656C6C 		.ascii	"Hello World!\000"
 393      6F20576F 
 393      726C6421 
 393      00
 394 0115 000000   		.align	2
 395              	.LC11:
 396 0118 6F736D6F 		.ascii	"osmocom-bb\000"
 396      636F6D2D 
 396      626200
 397 0123 00       		.align	2
 398              	.LC12:
 399 0124 656E7465 		.ascii	"entering interrupt loop\012\000"
 399      72696E67 
 399      20696E74 
 399      65727275 
 399      7074206C 
 400 013d 000000   		.section	.text.main,"ax",%progbits
 401              		.align	2
 402              		.global	main
 404              	main:
 405              	.LFB67:
 406              		.loc 2 102 0
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409              	.LVL18:
 410 0000 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
 411              	.LCFI6:
 412              		.loc 2 103 0
 413 0004 0100A0E3 		mov	r0, #1
 414              		.loc 2 106 0
 415 0008 2C419FE5 		ldr	r4, .L32
 416              		.loc 2 103 0
 417 000c FEFFFFEB 		bl	board_init
 418              		.loc 2 105 0
 419 0010 28019FE5 		ldr	r0, .L32+4
 420 0014 FEFFFFEB 		bl	puts
 421              		.loc 2 106 0
 422 0018 000094E5 		ldr	r0, [r4, #0]
 423 001c FEFFFFEB 		bl	puts
 424              		.loc 2 109 0
 425 0020 FEFFFFEB 		bl	dump_dev_id
 426              		.loc 2 110 0
 427 0024 000094E5 		ldr	r0, [r4, #0]
 428 0028 FEFFFFEB 		bl	puts
 429              		.loc 2 113 0
 430 002c FEFFFFEB 		bl	calypso_clk_dump
 431              		.loc 2 114 0
 432 0030 000094E5 		ldr	r0, [r4, #0]
 433 0034 FEFFFFEB 		bl	puts
 434              	.LBB24:
 435              	.LBB25:
 436              		.loc 1 57 0
 437 0038 04519FE5 		ldr	r5, .L32+8
 438              	.LBE25:
 439              	.LBE24:
 440              		.loc 2 116 0
 441 003c 04019FE5 		ldr	r0, .L32+12
 442 0040 FEFFFFEB 		bl	keypad_set_handler
 443              		.loc 2 119 0
 444 0044 FEFFFFEB 		bl	calypso_clk_dump
 445              		.loc 2 120 0
 446 0048 000094E5 		ldr	r0, [r4, #0]
 447 004c FEFFFFEB 		bl	puts
 448              	.LBB26:
 449              	.LBB27:
 450              		.loc 1 57 0
 451 0050 003095E5 		ldr	r3, [r5, #0]
 452 0054 0FE0A0E1 		mov	lr, pc
 453 0058 0CF093E5 		ldr	pc, [r3, #12]
 454              	.LBE27:
 455              	.LBE26:
 456              	.LBB28:
 457              	.LBB29:
 458              		.loc 1 93 0
 459 005c 002095E5 		ldr	r2, [r5, #0]
 460              	.LBE29:
 461              	.LBE28:
 462              	.LBB30:
 463              	.LBB31:
 464              		.loc 1 103 0
 465 0060 0130A0E3 		mov	r3, #1
 466              	.LBE31:
 467              	.LBE30:
 468              		.loc 2 129 0
 469 0064 B412D2E1 		ldrh	r1, [r2, #36]
 470              	.LBB32:
 471              	.LBB33:
 472              		.loc 1 103 0
 473 0068 343082E5 		str	r3, [r2, #52]
 474              	.LBE33:
 475              	.LBE32:
 476              	.LBB34:
 477              	.LBB35:
 478              		.loc 1 87 0
 479 006c 0230A0E3 		mov	r3, #2	@ movhi
 480 0070 B832C2E1 		strh	r3, [r2, #40]	@ movhi
 481              	.LBE35:
 482              	.LBE34:
 483              	.LBB36:
 484              	.LBB37:
 485              		.loc 1 93 0
 486 0074 0060A0E3 		mov	r6, #0
 487              	.LBE37:
 488              	.LBE36:
 489              	.LBB38:
 490              	.LBB39:
 491              		.loc 1 88 0
 492 0078 1430A0E3 		mov	r3, #20	@ movhi
 493              	.LBE39:
 494              	.LBE38:
 495              	.LBB40:
 496              	.LBB41:
 497              		.loc 1 98 0
 498 007c FF44E0E3 		mvn	r4, #-16777216
 499              	.LBE41:
 500              	.LBE40:
 501              	.LBB42:
 502              	.LBB43:
 503              		.loc 1 88 0
 504 0080 BA32C2E1 		strh	r3, [r2, #42]	@ movhi
 505              	.LBE43:
 506              	.LBE42:
 507              		.loc 2 129 0
 508 0084 041041E2 		sub	r1, r1, #4
 509              	.LBB44:
 510              	.LBB45:
 511              		.loc 1 93 0
 512 0088 2C6082E5 		str	r6, [r2, #44]
 513              	.LBE45:
 514              	.LBE44:
 515              	.LBB46:
 516              	.LBB47:
 517              		.loc 1 98 0
 518 008c 304082E5 		str	r4, [r2, #48]
 519              	.LBE47:
 520              	.LBE46:
 521              		.loc 2 129 0
 522 0090 B4009FE5 		ldr	r0, .L32+16
 523 0094 FEFFFFEB 		bl	fb_putstr
 524              	.LBB48:
 525              	.LBB49:
 526              		.loc 1 93 0
 527 0098 002095E5 		ldr	r2, [r5, #0]
 528 009c FF38A0E3 		mov	r3, #16711680
 529              	.LBE49:
 530              	.LBE48:
 531              	.LBB50:
 532              	.LBB51:
 533              		.loc 1 62 0
 534 00a0 B402D2E1 		ldrh	r0, [r2, #36]
 535              	.LBE51:
 536              	.LBE50:
 537              	.LBB52:
 538              	.LBB53:
 539              		.loc 1 93 0
 540 00a4 2C3082E5 		str	r3, [r2, #44]
 541              	.LBE53:
 542              	.LBE52:
 543              	.LBB54:
 544              	.LBB55:
 545              		.loc 1 98 0
 546 00a8 FF30A0E3 		mov	r3, #255
 547 00ac 303082E5 		str	r3, [r2, #48]
 548              	.LBE55:
 549              	.LBE54:
 550              	.LBB56:
 551              	.LBB57:
 552              		.loc 1 62 0
 553 00b0 030040E2 		sub	r0, r0, #3
 554              	.LBE57:
 555              	.LBE56:
 556              	.LBB58:
 557              	.LBB59:
 558              		.loc 1 87 0
 559 00b4 0230A0E3 		mov	r3, #2	@ movhi
 560 00b8 B832C2E1 		strh	r3, [r2, #40]	@ movhi
 561              	.LBE59:
 562              	.LBE58:
 563              	.LBB60:
 564              	.LBB61:
 565              		.loc 1 62 0
 566 00bc 0008A0E1 		mov	r0, r0, asl #16
 567              	.LBE61:
 568              	.LBE60:
 569              	.LBB62:
 570              	.LBB63:
 571              		.loc 1 88 0
 572 00c0 1930A0E3 		mov	r3, #25	@ movhi
 573 00c4 BA32C2E1 		strh	r3, [r2, #42]	@ movhi
 574              	.LBE63:
 575              	.LBE62:
 576              	.LBB64:
 577              	.LBB65:
 578              		.loc 1 62 0
 579 00c8 2008A0E1 		mov	r0, r0, lsr #16
 580 00cc 2610A0E3 		mov	r1, #38
 581 00d0 0FE0A0E1 		mov	lr, pc
 582 00d4 14F092E5 		ldr	pc, [r2, #20]
 583              	.LBE65:
 584              	.LBE64:
 585              	.LBB66:
 586              	.LBB67:
 587              		.loc 1 93 0
 588 00d8 003095E5 		ldr	r3, [r5, #0]
 589              	.LBE67:
 590              	.LBE66:
 591              	.LBB68:
 592              	.LBB69:
 593              		.loc 1 87 0
 594 00dc 0820A0E3 		mov	r2, #8	@ movhi
 595              	.LBE69:
 596              	.LBE68:
 597              		.loc 2 140 0
 598 00e0 B412D3E1 		ldrh	r1, [r3, #36]
 599              	.LBB70:
 600              	.LBB71:
 601              		.loc 1 87 0
 602 00e4 B822C3E1 		strh	r2, [r3, #40]	@ movhi
 603              		.loc 1 88 0
 604 00e8 2120A0E3 		mov	r2, #33	@ movhi
 605              	.LBE71:
 606              	.LBE70:
 607              	.LBB72:
 608              	.LBB73:
 609              		.loc 1 93 0
 610 00ec 2C4083E5 		str	r4, [r3, #44]
 611              	.LBE73:
 612              	.LBE72:
 613              	.LBB74:
 614              	.LBB75:
 615              		.loc 1 103 0
 616 00f0 346083E5 		str	r6, [r3, #52]
 617              	.LBE75:
 618              	.LBE74:
 619              	.LBB76:
 620              	.LBB77:
 621              		.loc 1 88 0
 622 00f4 BA22C3E1 		strh	r2, [r3, #42]	@ movhi
 623              	.LBE77:
 624              	.LBE76:
 625              		.loc 2 140 0
 626 00f8 041041E2 		sub	r1, r1, #4
 627 00fc 4C009FE5 		ldr	r0, .L32+20
 628 0100 FEFFFFEB 		bl	fb_putstr
 629              		.loc 2 142 0
 630 0104 FEFFFFEB 		bl	fb_flush
 631              		.loc 2 154 0
 632 0108 44109FE5 		ldr	r1, .L32+24
 633 010c 0A00A0E3 		mov	r0, #10
 634 0110 FEFFFFEB 		bl	sercomm_register_rx_cb
 635              		.loc 2 155 0
 636 0114 3C109FE5 		ldr	r1, .L32+28
 637 0118 0500A0E3 		mov	r0, #5
 638 011c FEFFFFEB 		bl	sercomm_register_rx_cb
 639              		.loc 2 157 0
 640 0120 34009FE5 		ldr	r0, .L32+32
 641 0124 6410A0E3 		mov	r1, #100
 642 0128 FEFFFFEB 		bl	osmo_timer_schedule
 643              		.loc 2 160 0
 644 012c 2C009FE5 		ldr	r0, .L32+36
 645 0130 FEFFFFEB 		bl	puts
 646              	.L30:
 647              		.loc 2 162 0
 648 0134 FEFFFFEB 		bl	osmo_timers_update
 649 0138 4B0000EA 		b	.L30
 650              	.L33:
 651              		.align	2
 652              	.L32:
 653 013c 00000000 		.word	hr
 654 0140 C4000000 		.word	.LC9
 655 0144 00000000 		.word	framebuffer
 656 0148 00000000 		.word	key_handler
 657 014c 08010000 		.word	.LC10
 658 0150 18010000 		.word	.LC11
 659 0154 00000000 		.word	console_rx_cb
 660 0158 00000000 		.word	l1a_l23_rx_cb
 661 015c 04000000 		.word	write_battery_info_timer
 662 0160 24010000 		.word	.LC12
 663              	.LFE67:
 806              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccgDJIV9.s:20     .data:0000000000000000 hr
     /tmp/ccgDJIV9.s:21     .data:0000000000000000 $d
     /tmp/ccgDJIV9.s:25     .data:0000000000000004 write_battery_info_timer
     /tmp/ccgDJIV9.s:230    .text.write_battery_info:0000000000000000 write_battery_info
     /tmp/ccgDJIV9.s:32     .text.fb_putstr:0000000000000000 fb_putstr
     /tmp/ccgDJIV9.s:39     .text.fb_putstr:0000000000000000 $a
     /tmp/ccgDJIV9.s:52     .text.fb_putstr:0000000000000018 $d
     /tmp/ccgDJIV9.s:58     .text.fb_flush:0000000000000000 fb_flush
     /tmp/ccgDJIV9.s:64     .text.fb_flush:0000000000000000 $a
     /tmp/ccgDJIV9.s:76     .text.fb_flush:0000000000000018 $d
     /tmp/ccgDJIV9.s:89     .text.console_rx_cb:0000000000000000 console_rx_cb
     /tmp/ccgDJIV9.s:96     .text.console_rx_cb:0000000000000000 $a
     /tmp/ccgDJIV9.s:136    .text.console_rx_cb:0000000000000040 $d
     /tmp/ccgDJIV9.s:153    .text.l1a_l23_rx_cb:0000000000000000 l1a_l23_rx_cb
     /tmp/ccgDJIV9.s:159    .text.l1a_l23_rx_cb:0000000000000000 $a
     /tmp/ccgDJIV9.s:195    .text.l1a_l23_rx_cb:0000000000000044 $d
     /tmp/ccgDJIV9.s:204    .text.key_handler:0000000000000000 key_handler
     /tmp/ccgDJIV9.s:213    .text.key_handler:0000000000000000 $a
     /tmp/ccgDJIV9.s:236    .text.write_battery_info:0000000000000000 $a
     /tmp/ccgDJIV9.s:379    .text.write_battery_info:00000000000000e4 $d
     /tmp/ccgDJIV9.s:404    .text.main:0000000000000000 main
     /tmp/ccgDJIV9.s:410    .text.main:0000000000000000 $a
     /tmp/ccgDJIV9.s:653    .text.main:000000000000013c $d

UNDEFINED SYMBOLS
framebuffer
printf
msgb_free
puts
snprintf
osmo_timer_schedule
battery_info
board_init
dump_dev_id
calypso_clk_dump
keypad_set_handler
sercomm_register_rx_cb
osmo_timers_update
