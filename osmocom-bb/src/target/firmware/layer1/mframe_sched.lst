   1              		.file	"mframe_sched.c"
   9              	.Ltext0:
  10              		.data
  11              		.align	2
  14              	sched_set_for_task:
  15 0000 44070000 		.word	mf_bcch_norm
  16 0004 2C070000 		.word	mf_bcch_ext
  17 0008 B4060000 		.word	mf_ccch
  18 000c 84060000 		.word	mf_ccch_comb
  19 0010 48060000 		.word	mf_sdcch4_0
  20 0014 0C060000 		.word	mf_sdcch4_1
  21 0018 D0050000 		.word	mf_sdcch4_2
  22 001c 94050000 		.word	mf_sdcch4_3
  23 0020 58050000 		.word	mf_sdcch8_0
  24 0024 1C050000 		.word	mf_sdcch8_1
  25 0028 E0040000 		.word	mf_sdcch8_2
  26 002c A4040000 		.word	mf_sdcch8_3
  27 0030 68040000 		.word	mf_sdcch8_4
  28 0034 2C040000 		.word	mf_sdcch8_5
  29 0038 F0030000 		.word	mf_sdcch8_6
  30 003c B4030000 		.word	mf_sdcch8_7
  31 0040 9C030000 		.word	mf_sdcch4_cbch
  32 0044 84030000 		.word	mf_sdcch8_cbch
  33 0048 DC020000 		.word	mf_tch_f_even
  34 004c 34020000 		.word	mf_tch_f_odd
  35 0050 8C010000 		.word	mf_tch_h_0
  36 0054 E4000000 		.word	mf_tch_h_1
  37 0058 B4000000 		.word	mf_gprs_pdtch
  38 005c A8000000 		.word	mf_gprs_ptcch
  39 0060 60000000 		.word	mf_neigh_pm51_c0t0
  40 0064 48000000 		.word	mf_neigh_pm51
  41 0068 30000000 		.word	mf_neigh_pm26_even
  42 006c 18000000 		.word	mf_neigh_pm26_odd
  43 0070 00000000 		.word	mf_tx_all_nb
  44 0074 00000000 		.space	12
  44      00000000 
  44      00000000 
  45              		.section	.rodata
  46              		.align	2
  49              	mf_tx_all_nb:
  50 0000 00000000 		.word	nb_sched_set_ul
  51 0004 0400     		.short	4
  52 0006 0000     		.short	0
  53 0008 00000000 		.space	4
  54 000c 00000000 		.word	0
  55 0010 00000000 		.space	8
  55      00000000 
  56              		.align	2
  59              	mf_neigh_pm26_odd:
  60 0018 00000000 		.word	neigh_pm_sched_set
  61 001c 1A00     		.short	26
  62 001e 0C00     		.short	12
  63 0020 00000000 		.space	4
  64 0024 00000000 		.word	0
  65 0028 00000000 		.space	8
  65      00000000 
  66              		.align	2
  69              	mf_neigh_pm26_even:
  70 0030 00000000 		.word	neigh_pm_sched_set
  71 0034 1A00     		.short	26
  72 0036 1900     		.short	25
  73 0038 00000000 		.space	4
  74 003c 00000000 		.word	0
  75 0040 00000000 		.space	8
  75      00000000 
  76              		.align	2
  79              	mf_neigh_pm51:
  80 0048 00000000 		.word	neigh_pm_sched_set
  81 004c 3300     		.short	51
  82 004e 3200     		.short	50
  83 0050 00000000 		.space	4
  84 0054 00000000 		.word	0
  85 0058 00000000 		.space	8
  85      00000000 
  86              		.align	2
  89              	mf_neigh_pm51_c0t0:
  90 0060 00000000 		.word	neigh_pm_sched_set
  91 0064 3300     		.short	51
  92 0066 0000     		.short	0
  93 0068 00000000 		.space	4
  94 006c 00000000 		.word	neigh_pm_sched_set
  95 0070 3300     		.short	51
  96 0072 0A00     		.short	10
  97 0074 00000000 		.space	4
  98 0078 00000000 		.word	neigh_pm_sched_set
  99 007c 3300     		.short	51
 100 007e 1400     		.short	20
 101 0080 00000000 		.space	4
 102 0084 00000000 		.word	neigh_pm_sched_set
 103 0088 3300     		.short	51
 104 008a 1E00     		.short	30
 105 008c 00000000 		.space	4
 106 0090 00000000 		.word	neigh_pm_sched_set
 107 0094 3300     		.short	51
 108 0096 2800     		.short	40
 109 0098 00000000 		.space	4
 110 009c 00000000 		.word	0
 111 00a0 00000000 		.space	8
 111      00000000 
 112              		.align	2
 115              	mf_gprs_ptcch:
 116 00a8 00000000 		.space	12
 116      00000000 
 116      00000000 
 117              		.align	2
 120              	mf_gprs_pdtch:
 121 00b4 00000000 		.word	nb_sched_set
 122 00b8 0D00     		.short	13
 123 00ba 0000     		.short	0
 124 00bc 00000000 		.space	4
 125 00c0 00000000 		.word	nb_sched_set
 126 00c4 0D00     		.short	13
 127 00c6 0400     		.short	4
 128 00c8 00000000 		.space	4
 129 00cc 00000000 		.word	nb_sched_set
 130 00d0 0D00     		.short	13
 131 00d2 0800     		.short	8
 132 00d4 00000000 		.space	4
 133 00d8 00000000 		.word	0
 134 00dc 00000000 		.space	8
 134      00000000 
 135              		.align	2
 138              	mf_tch_h_1:
 139 00e4 00000000 		.word	tch_d_sched_set
 140 00e8 0D00     		.short	13
 141 00ea 0000     		.short	0
 142 00ec 00000000 		.space	4
 143 00f0 00000000 		.word	tch_sched_set
 144 00f4 0D00     		.short	13
 145 00f6 0100     		.short	1
 146 00f8 00000000 		.space	4
 147 00fc 00000000 		.word	tch_d_sched_set
 148 0100 0D00     		.short	13
 149 0102 0200     		.short	2
 150 0104 00000000 		.space	4
 151 0108 00000000 		.word	tch_sched_set
 152 010c 0D00     		.short	13
 153 010e 0300     		.short	3
 154 0110 00000000 		.space	4
 155 0114 00000000 		.word	tch_d_sched_set
 156 0118 0D00     		.short	13
 157 011a 0400     		.short	4
 158 011c 00000000 		.space	4
 159 0120 00000000 		.word	tch_sched_set
 160 0124 0D00     		.short	13
 161 0126 0500     		.short	5
 162 0128 00000000 		.space	4
 163 012c 00000000 		.word	tch_d_sched_set
 164 0130 0D00     		.short	13
 165 0132 0600     		.short	6
 166 0134 00000000 		.space	4
 167 0138 00000000 		.word	tch_sched_set
 168 013c 0D00     		.short	13
 169 013e 0700     		.short	7
 170 0140 00000000 		.space	4
 171 0144 00000000 		.word	tch_d_sched_set
 172 0148 0D00     		.short	13
 173 014a 0800     		.short	8
 174 014c 00000000 		.space	4
 175 0150 00000000 		.word	tch_sched_set
 176 0154 0D00     		.short	13
 177 0156 0900     		.short	9
 178 0158 00000000 		.space	4
 179 015c 00000000 		.word	tch_d_sched_set
 180 0160 0D00     		.short	13
 181 0162 0A00     		.short	10
 182 0164 00000000 		.space	4
 183 0168 00000000 		.word	tch_sched_set
 184 016c 0D00     		.short	13
 185 016e 0B00     		.short	11
 186 0170 00000000 		.space	4
 187 0174 00000000 		.word	tch_a_sched_set
 188 0178 1A00     		.short	26
 189 017a 1900     		.short	25
 190 017c 0100     		.short	1
 191 017e 0000     		.space	2
 192 0180 00000000 		.word	0
 193 0184 00000000 		.space	8
 193      00000000 
 194              		.align	2
 197              	mf_tch_h_0:
 198 018c 00000000 		.word	tch_sched_set
 199 0190 0D00     		.short	13
 200 0192 0000     		.short	0
 201 0194 00000000 		.space	4
 202 0198 00000000 		.word	tch_d_sched_set
 203 019c 0D00     		.short	13
 204 019e 0100     		.short	1
 205 01a0 00000000 		.space	4
 206 01a4 00000000 		.word	tch_sched_set
 207 01a8 0D00     		.short	13
 208 01aa 0200     		.short	2
 209 01ac 00000000 		.space	4
 210 01b0 00000000 		.word	tch_d_sched_set
 211 01b4 0D00     		.short	13
 212 01b6 0300     		.short	3
 213 01b8 00000000 		.space	4
 214 01bc 00000000 		.word	tch_sched_set
 215 01c0 0D00     		.short	13
 216 01c2 0400     		.short	4
 217 01c4 00000000 		.space	4
 218 01c8 00000000 		.word	tch_d_sched_set
 219 01cc 0D00     		.short	13
 220 01ce 0500     		.short	5
 221 01d0 00000000 		.space	4
 222 01d4 00000000 		.word	tch_sched_set
 223 01d8 0D00     		.short	13
 224 01da 0600     		.short	6
 225 01dc 00000000 		.space	4
 226 01e0 00000000 		.word	tch_d_sched_set
 227 01e4 0D00     		.short	13
 228 01e6 0700     		.short	7
 229 01e8 00000000 		.space	4
 230 01ec 00000000 		.word	tch_sched_set
 231 01f0 0D00     		.short	13
 232 01f2 0800     		.short	8
 233 01f4 00000000 		.space	4
 234 01f8 00000000 		.word	tch_d_sched_set
 235 01fc 0D00     		.short	13
 236 01fe 0900     		.short	9
 237 0200 00000000 		.space	4
 238 0204 00000000 		.word	tch_sched_set
 239 0208 0D00     		.short	13
 240 020a 0A00     		.short	10
 241 020c 00000000 		.space	4
 242 0210 00000000 		.word	tch_d_sched_set
 243 0214 0D00     		.short	13
 244 0216 0B00     		.short	11
 245 0218 00000000 		.space	4
 246 021c 00000000 		.word	tch_a_sched_set
 247 0220 1A00     		.short	26
 248 0222 0C00     		.short	12
 249 0224 0100     		.short	1
 250 0226 0000     		.space	2
 251 0228 00000000 		.word	0
 252 022c 00000000 		.space	8
 252      00000000 
 253              		.align	2
 256              	mf_tch_f_odd:
 257 0234 00000000 		.word	tch_sched_set
 258 0238 0D00     		.short	13
 259 023a 0000     		.short	0
 260 023c 00000000 		.space	4
 261 0240 00000000 		.word	tch_sched_set
 262 0244 0D00     		.short	13
 263 0246 0100     		.short	1
 264 0248 00000000 		.space	4
 265 024c 00000000 		.word	tch_sched_set
 266 0250 0D00     		.short	13
 267 0252 0200     		.short	2
 268 0254 00000000 		.space	4
 269 0258 00000000 		.word	tch_sched_set
 270 025c 0D00     		.short	13
 271 025e 0300     		.short	3
 272 0260 00000000 		.space	4
 273 0264 00000000 		.word	tch_sched_set
 274 0268 0D00     		.short	13
 275 026a 0400     		.short	4
 276 026c 00000000 		.space	4
 277 0270 00000000 		.word	tch_sched_set
 278 0274 0D00     		.short	13
 279 0276 0500     		.short	5
 280 0278 00000000 		.space	4
 281 027c 00000000 		.word	tch_sched_set
 282 0280 0D00     		.short	13
 283 0282 0600     		.short	6
 284 0284 00000000 		.space	4
 285 0288 00000000 		.word	tch_sched_set
 286 028c 0D00     		.short	13
 287 028e 0700     		.short	7
 288 0290 00000000 		.space	4
 289 0294 00000000 		.word	tch_sched_set
 290 0298 0D00     		.short	13
 291 029a 0800     		.short	8
 292 029c 00000000 		.space	4
 293 02a0 00000000 		.word	tch_sched_set
 294 02a4 0D00     		.short	13
 295 02a6 0900     		.short	9
 296 02a8 00000000 		.space	4
 297 02ac 00000000 		.word	tch_sched_set
 298 02b0 0D00     		.short	13
 299 02b2 0A00     		.short	10
 300 02b4 00000000 		.space	4
 301 02b8 00000000 		.word	tch_sched_set
 302 02bc 0D00     		.short	13
 303 02be 0B00     		.short	11
 304 02c0 00000000 		.space	4
 305 02c4 00000000 		.word	tch_a_sched_set
 306 02c8 1A00     		.short	26
 307 02ca 1900     		.short	25
 308 02cc 0100     		.short	1
 309 02ce 0000     		.space	2
 310 02d0 00000000 		.word	0
 311 02d4 00000000 		.space	8
 311      00000000 
 312              		.align	2
 315              	mf_tch_f_even:
 316 02dc 00000000 		.word	tch_sched_set
 317 02e0 0D00     		.short	13
 318 02e2 0000     		.short	0
 319 02e4 00000000 		.space	4
 320 02e8 00000000 		.word	tch_sched_set
 321 02ec 0D00     		.short	13
 322 02ee 0100     		.short	1
 323 02f0 00000000 		.space	4
 324 02f4 00000000 		.word	tch_sched_set
 325 02f8 0D00     		.short	13
 326 02fa 0200     		.short	2
 327 02fc 00000000 		.space	4
 328 0300 00000000 		.word	tch_sched_set
 329 0304 0D00     		.short	13
 330 0306 0300     		.short	3
 331 0308 00000000 		.space	4
 332 030c 00000000 		.word	tch_sched_set
 333 0310 0D00     		.short	13
 334 0312 0400     		.short	4
 335 0314 00000000 		.space	4
 336 0318 00000000 		.word	tch_sched_set
 337 031c 0D00     		.short	13
 338 031e 0500     		.short	5
 339 0320 00000000 		.space	4
 340 0324 00000000 		.word	tch_sched_set
 341 0328 0D00     		.short	13
 342 032a 0600     		.short	6
 343 032c 00000000 		.space	4
 344 0330 00000000 		.word	tch_sched_set
 345 0334 0D00     		.short	13
 346 0336 0700     		.short	7
 347 0338 00000000 		.space	4
 348 033c 00000000 		.word	tch_sched_set
 349 0340 0D00     		.short	13
 350 0342 0800     		.short	8
 351 0344 00000000 		.space	4
 352 0348 00000000 		.word	tch_sched_set
 353 034c 0D00     		.short	13
 354 034e 0900     		.short	9
 355 0350 00000000 		.space	4
 356 0354 00000000 		.word	tch_sched_set
 357 0358 0D00     		.short	13
 358 035a 0A00     		.short	10
 359 035c 00000000 		.space	4
 360 0360 00000000 		.word	tch_sched_set
 361 0364 0D00     		.short	13
 362 0366 0B00     		.short	11
 363 0368 00000000 		.space	4
 364 036c 00000000 		.word	tch_a_sched_set
 365 0370 1A00     		.short	26
 366 0372 0C00     		.short	12
 367 0374 0100     		.short	1
 368 0376 0000     		.space	2
 369 0378 00000000 		.word	0
 370 037c 00000000 		.space	8
 370      00000000 
 371              		.align	2
 374              	mf_sdcch8_cbch:
 375 0384 00000000 		.word	nb_sched_set
 376 0388 3300     		.short	51
 377 038a 0800     		.short	8
 378 038c 00000000 		.space	4
 379 0390 00000000 		.word	0
 380 0394 00000000 		.space	8
 380      00000000 
 381              		.align	2
 384              	mf_sdcch4_cbch:
 385 039c 00000000 		.word	nb_sched_set
 386 03a0 3300     		.short	51
 387 03a2 2000     		.short	32
 388 03a4 00000000 		.space	4
 389 03a8 00000000 		.word	0
 390 03ac 00000000 		.space	8
 390      00000000 
 391              		.align	2
 394              	mf_sdcch8_7:
 395 03b4 00000000 		.word	nb_sched_set
 396 03b8 3300     		.short	51
 397 03ba 1C00     		.short	28
 398 03bc 00000000 		.space	4
 399 03c0 00000000 		.word	nb_sched_set_ul
 400 03c4 3300     		.short	51
 401 03c6 2B00     		.short	43
 402 03c8 00000000 		.space	4
 403 03cc 00000000 		.word	nb_sched_set
 404 03d0 6600     		.short	102
 405 03d2 5F00     		.short	95
 406 03d4 0100     		.short	1
 407 03d6 0000     		.space	2
 408 03d8 00000000 		.word	nb_sched_set_ul
 409 03dc 6600     		.short	102
 410 03de 6E00     		.short	110
 411 03e0 0100     		.short	1
 412 03e2 0000     		.space	2
 413 03e4 00000000 		.word	0
 414 03e8 00000000 		.space	8
 414      00000000 
 415              		.align	2
 418              	mf_sdcch8_6:
 419 03f0 00000000 		.word	nb_sched_set
 420 03f4 3300     		.short	51
 421 03f6 1800     		.short	24
 422 03f8 00000000 		.space	4
 423 03fc 00000000 		.word	nb_sched_set_ul
 424 0400 3300     		.short	51
 425 0402 2700     		.short	39
 426 0404 00000000 		.space	4
 427 0408 00000000 		.word	nb_sched_set
 428 040c 6600     		.short	102
 429 040e 5B00     		.short	91
 430 0410 0100     		.short	1
 431 0412 0000     		.space	2
 432 0414 00000000 		.word	nb_sched_set_ul
 433 0418 6600     		.short	102
 434 041a 6A00     		.short	106
 435 041c 0100     		.short	1
 436 041e 0000     		.space	2
 437 0420 00000000 		.word	0
 438 0424 00000000 		.space	8
 438      00000000 
 439              		.align	2
 442              	mf_sdcch8_5:
 443 042c 00000000 		.word	nb_sched_set
 444 0430 3300     		.short	51
 445 0432 1400     		.short	20
 446 0434 00000000 		.space	4
 447 0438 00000000 		.word	nb_sched_set_ul
 448 043c 3300     		.short	51
 449 043e 2300     		.short	35
 450 0440 00000000 		.space	4
 451 0444 00000000 		.word	nb_sched_set
 452 0448 6600     		.short	102
 453 044a 5700     		.short	87
 454 044c 0100     		.short	1
 455 044e 0000     		.space	2
 456 0450 00000000 		.word	nb_sched_set_ul
 457 0454 6600     		.short	102
 458 0456 6600     		.short	102
 459 0458 0100     		.short	1
 460 045a 0000     		.space	2
 461 045c 00000000 		.word	0
 462 0460 00000000 		.space	8
 462      00000000 
 463              		.align	2
 466              	mf_sdcch8_4:
 467 0468 00000000 		.word	nb_sched_set
 468 046c 3300     		.short	51
 469 046e 1000     		.short	16
 470 0470 00000000 		.space	4
 471 0474 00000000 		.word	nb_sched_set_ul
 472 0478 3300     		.short	51
 473 047a 1F00     		.short	31
 474 047c 00000000 		.space	4
 475 0480 00000000 		.word	nb_sched_set
 476 0484 6600     		.short	102
 477 0486 5300     		.short	83
 478 0488 0100     		.short	1
 479 048a 0000     		.space	2
 480 048c 00000000 		.word	nb_sched_set_ul
 481 0490 6600     		.short	102
 482 0492 6200     		.short	98
 483 0494 0100     		.short	1
 484 0496 0000     		.space	2
 485 0498 00000000 		.word	0
 486 049c 00000000 		.space	8
 486      00000000 
 487              		.align	2
 490              	mf_sdcch8_3:
 491 04a4 00000000 		.word	nb_sched_set
 492 04a8 3300     		.short	51
 493 04aa 0C00     		.short	12
 494 04ac 00000000 		.space	4
 495 04b0 00000000 		.word	nb_sched_set_ul
 496 04b4 3300     		.short	51
 497 04b6 1B00     		.short	27
 498 04b8 00000000 		.space	4
 499 04bc 00000000 		.word	nb_sched_set
 500 04c0 6600     		.short	102
 501 04c2 2C00     		.short	44
 502 04c4 0100     		.short	1
 503 04c6 0000     		.space	2
 504 04c8 00000000 		.word	nb_sched_set_ul
 505 04cc 6600     		.short	102
 506 04ce 3B00     		.short	59
 507 04d0 0100     		.short	1
 508 04d2 0000     		.space	2
 509 04d4 00000000 		.word	0
 510 04d8 00000000 		.space	8
 510      00000000 
 511              		.align	2
 514              	mf_sdcch8_2:
 515 04e0 00000000 		.word	nb_sched_set
 516 04e4 3300     		.short	51
 517 04e6 0800     		.short	8
 518 04e8 00000000 		.space	4
 519 04ec 00000000 		.word	nb_sched_set_ul
 520 04f0 3300     		.short	51
 521 04f2 1700     		.short	23
 522 04f4 00000000 		.space	4
 523 04f8 00000000 		.word	nb_sched_set
 524 04fc 6600     		.short	102
 525 04fe 2800     		.short	40
 526 0500 0100     		.short	1
 527 0502 0000     		.space	2
 528 0504 00000000 		.word	nb_sched_set_ul
 529 0508 6600     		.short	102
 530 050a 3700     		.short	55
 531 050c 0100     		.short	1
 532 050e 0000     		.space	2
 533 0510 00000000 		.word	0
 534 0514 00000000 		.space	8
 534      00000000 
 535              		.align	2
 538              	mf_sdcch8_1:
 539 051c 00000000 		.word	nb_sched_set
 540 0520 3300     		.short	51
 541 0522 0400     		.short	4
 542 0524 00000000 		.space	4
 543 0528 00000000 		.word	nb_sched_set_ul
 544 052c 3300     		.short	51
 545 052e 1300     		.short	19
 546 0530 00000000 		.space	4
 547 0534 00000000 		.word	nb_sched_set
 548 0538 6600     		.short	102
 549 053a 2400     		.short	36
 550 053c 0100     		.short	1
 551 053e 0000     		.space	2
 552 0540 00000000 		.word	nb_sched_set_ul
 553 0544 6600     		.short	102
 554 0546 3300     		.short	51
 555 0548 0100     		.short	1
 556 054a 0000     		.space	2
 557 054c 00000000 		.word	0
 558 0550 00000000 		.space	8
 558      00000000 
 559              		.align	2
 562              	mf_sdcch8_0:
 563 0558 00000000 		.word	nb_sched_set
 564 055c 3300     		.short	51
 565 055e 0000     		.short	0
 566 0560 00000000 		.space	4
 567 0564 00000000 		.word	nb_sched_set_ul
 568 0568 3300     		.short	51
 569 056a 0F00     		.short	15
 570 056c 00000000 		.space	4
 571 0570 00000000 		.word	nb_sched_set
 572 0574 6600     		.short	102
 573 0576 2000     		.short	32
 574 0578 0100     		.short	1
 575 057a 0000     		.space	2
 576 057c 00000000 		.word	nb_sched_set_ul
 577 0580 6600     		.short	102
 578 0582 2F00     		.short	47
 579 0584 0100     		.short	1
 580 0586 0000     		.space	2
 581 0588 00000000 		.word	0
 582 058c 00000000 		.space	8
 582      00000000 
 583              		.align	2
 586              	mf_sdcch4_3:
 587 0594 00000000 		.word	nb_sched_set
 588 0598 3300     		.short	51
 589 059a 2400     		.short	36
 590 059c 00000000 		.space	4
 591 05a0 00000000 		.word	nb_sched_set_ul
 592 05a4 3300     		.short	51
 593 05a6 3300     		.short	51
 594 05a8 00000000 		.space	4
 595 05ac 00000000 		.word	nb_sched_set
 596 05b0 6600     		.short	102
 597 05b2 6100     		.short	97
 598 05b4 0100     		.short	1
 599 05b6 0000     		.space	2
 600 05b8 00000000 		.word	nb_sched_set_ul
 601 05bc 6600     		.short	102
 602 05be 7000     		.short	112
 603 05c0 0100     		.short	1
 604 05c2 0000     		.space	2
 605 05c4 00000000 		.word	0
 606 05c8 00000000 		.space	8
 606      00000000 
 607              		.align	2
 610              	mf_sdcch4_2:
 611 05d0 00000000 		.word	nb_sched_set
 612 05d4 3300     		.short	51
 613 05d6 2000     		.short	32
 614 05d8 00000000 		.space	4
 615 05dc 00000000 		.word	nb_sched_set_ul
 616 05e0 3300     		.short	51
 617 05e2 2F00     		.short	47
 618 05e4 00000000 		.space	4
 619 05e8 00000000 		.word	nb_sched_set
 620 05ec 6600     		.short	102
 621 05ee 5D00     		.short	93
 622 05f0 0100     		.short	1
 623 05f2 0000     		.space	2
 624 05f4 00000000 		.word	nb_sched_set_ul
 625 05f8 6600     		.short	102
 626 05fa 6C00     		.short	108
 627 05fc 0100     		.short	1
 628 05fe 0000     		.space	2
 629 0600 00000000 		.word	0
 630 0604 00000000 		.space	8
 630      00000000 
 631              		.align	2
 634              	mf_sdcch4_1:
 635 060c 00000000 		.word	nb_sched_set
 636 0610 3300     		.short	51
 637 0612 1A00     		.short	26
 638 0614 00000000 		.space	4
 639 0618 00000000 		.word	nb_sched_set_ul
 640 061c 3300     		.short	51
 641 061e 2900     		.short	41
 642 0620 00000000 		.space	4
 643 0624 00000000 		.word	nb_sched_set
 644 0628 6600     		.short	102
 645 062a 2E00     		.short	46
 646 062c 0100     		.short	1
 647 062e 0000     		.space	2
 648 0630 00000000 		.word	nb_sched_set_ul
 649 0634 6600     		.short	102
 650 0636 3D00     		.short	61
 651 0638 0100     		.short	1
 652 063a 0000     		.space	2
 653 063c 00000000 		.word	0
 654 0640 00000000 		.space	8
 654      00000000 
 655              		.align	2
 658              	mf_sdcch4_0:
 659 0648 00000000 		.word	nb_sched_set
 660 064c 3300     		.short	51
 661 064e 1600     		.short	22
 662 0650 00000000 		.space	4
 663 0654 00000000 		.word	nb_sched_set_ul
 664 0658 3300     		.short	51
 665 065a 2500     		.short	37
 666 065c 00000000 		.space	4
 667 0660 00000000 		.word	nb_sched_set
 668 0664 6600     		.short	102
 669 0666 2A00     		.short	42
 670 0668 0100     		.short	1
 671 066a 0000     		.space	2
 672 066c 00000000 		.word	nb_sched_set_ul
 673 0670 6600     		.short	102
 674 0672 3900     		.short	57
 675 0674 0100     		.short	1
 676 0676 0000     		.space	2
 677 0678 00000000 		.word	0
 678 067c 00000000 		.space	8
 678      00000000 
 679              		.align	2
 682              	mf_ccch_comb:
 683 0684 00000000 		.word	nb_sched_set
 684 0688 3300     		.short	51
 685 068a 0600     		.short	6
 686 068c 00000000 		.space	4
 687 0690 00000000 		.word	nb_sched_set
 688 0694 3300     		.short	51
 689 0696 0C00     		.short	12
 690 0698 00000000 		.space	4
 691 069c 00000000 		.word	nb_sched_set
 692 06a0 3300     		.short	51
 693 06a2 1000     		.short	16
 694 06a4 00000000 		.space	4
 695 06a8 00000000 		.word	0
 696 06ac 00000000 		.space	8
 696      00000000 
 697              		.align	2
 700              	mf_ccch:
 701 06b4 00000000 		.word	nb_sched_set
 702 06b8 3300     		.short	51
 703 06ba 0600     		.short	6
 704 06bc 00000000 		.space	4
 705 06c0 00000000 		.word	nb_sched_set
 706 06c4 3300     		.short	51
 707 06c6 0C00     		.short	12
 708 06c8 00000000 		.space	4
 709 06cc 00000000 		.word	nb_sched_set
 710 06d0 3300     		.short	51
 711 06d2 1000     		.short	16
 712 06d4 00000000 		.space	4
 713 06d8 00000000 		.word	nb_sched_set
 714 06dc 3300     		.short	51
 715 06de 1600     		.short	22
 716 06e0 00000000 		.space	4
 717 06e4 00000000 		.word	nb_sched_set
 718 06e8 3300     		.short	51
 719 06ea 1A00     		.short	26
 720 06ec 00000000 		.space	4
 721 06f0 00000000 		.word	nb_sched_set
 722 06f4 3300     		.short	51
 723 06f6 2000     		.short	32
 724 06f8 00000000 		.space	4
 725 06fc 00000000 		.word	nb_sched_set
 726 0700 3300     		.short	51
 727 0702 2400     		.short	36
 728 0704 00000000 		.space	4
 729 0708 00000000 		.word	nb_sched_set
 730 070c 3300     		.short	51
 731 070e 2A00     		.short	42
 732 0710 00000000 		.space	4
 733 0714 00000000 		.word	nb_sched_set
 734 0718 3300     		.short	51
 735 071a 2E00     		.short	46
 736 071c 00000000 		.space	4
 737 0720 00000000 		.word	0
 738 0724 00000000 		.space	8
 738      00000000 
 739              		.align	2
 742              	mf_bcch_ext:
 743 072c 00000000 		.word	nb_sched_set
 744 0730 3300     		.short	51
 745 0732 0600     		.short	6
 746 0734 00000000 		.space	4
 747 0738 00000000 		.word	0
 748 073c 00000000 		.space	8
 748      00000000 
 749              		.align	2
 752              	mf_bcch_norm:
 753 0744 00000000 		.word	nb_sched_set
 754 0748 3300     		.short	51
 755 074a 0200     		.short	2
 756 074c 00000000 		.space	4
 757 0750 00000000 		.word	0
 758 0754 00000000 		.space	8
 758      00000000 
 759              		.section	.text.mframe_task2chan_nr,"ax",%progbits
 760              		.align	2
 761              		.global	mframe_task2chan_nr
 763              	mframe_task2chan_nr:
 764              	.LFB18:
 765              		.file 1 "layer1/mframe_sched.c"
   1:layer1/mframe_sched.c **** /* GSM Multiframe Scheduler Implementation (on top of TDMA sched) */
   2:layer1/mframe_sched.c **** 
   3:layer1/mframe_sched.c **** /* (C) 2010 by Harald Welte <laforge@gnumonks.org>
   4:layer1/mframe_sched.c ****  *
   5:layer1/mframe_sched.c ****  * All Rights Reserved
   6:layer1/mframe_sched.c ****  *
   7:layer1/mframe_sched.c ****  * This program is free software; you can redistribute it and/or modify
   8:layer1/mframe_sched.c ****  * it under the terms of the GNU General Public License as published by
   9:layer1/mframe_sched.c ****  * the Free Software Foundation; either version 2 of the License, or
  10:layer1/mframe_sched.c ****  * (at your option) any later version.
  11:layer1/mframe_sched.c ****  *
  12:layer1/mframe_sched.c ****  * This program is distributed in the hope that it will be useful,
  13:layer1/mframe_sched.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:layer1/mframe_sched.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:layer1/mframe_sched.c ****  * GNU General Public License for more details.
  16:layer1/mframe_sched.c ****  *
  17:layer1/mframe_sched.c ****  * You should have received a copy of the GNU General Public License along
  18:layer1/mframe_sched.c ****  * with this program; if not, write to the Free Software Foundation, Inc.,
  19:layer1/mframe_sched.c ****  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  20:layer1/mframe_sched.c ****  *
  21:layer1/mframe_sched.c ****  */
  22:layer1/mframe_sched.c **** 
  23:layer1/mframe_sched.c **** #include <stdint.h>
  24:layer1/mframe_sched.c **** #include <stdio.h>
  25:layer1/mframe_sched.c **** #include <string.h>
  26:layer1/mframe_sched.c **** 
  27:layer1/mframe_sched.c **** #include <debug.h>
  28:layer1/mframe_sched.c **** 
  29:layer1/mframe_sched.c **** #include <osmocom/gsm/gsm_utils.h>
  30:layer1/mframe_sched.c **** 
  31:layer1/mframe_sched.c **** #include <layer1/prim.h>
  32:layer1/mframe_sched.c **** #include <layer1/sync.h>
  33:layer1/mframe_sched.c **** #include <layer1/tdma_sched.h>
  34:layer1/mframe_sched.c **** #include <layer1/mframe_sched.h>
  35:layer1/mframe_sched.c **** 
  36:layer1/mframe_sched.c **** /* A multiframe operation which can be scheduled for a multiframe */
  37:layer1/mframe_sched.c **** struct mframe_sched_item {
  38:layer1/mframe_sched.c **** 	/* The TDMA scheduler item that shall be scheduled */
  39:layer1/mframe_sched.c **** 	const struct tdma_sched_item *sched_set;
  40:layer1/mframe_sched.c **** 	/* Which modulo shall be used on the frame number */
  41:layer1/mframe_sched.c **** 	uint16_t modulo;
  42:layer1/mframe_sched.c **** 	/* At which number inside the modulo shall we be scheduled */
  43:layer1/mframe_sched.c **** 	uint16_t frame_nr;
  44:layer1/mframe_sched.c **** 	/* bit-mask of flags */
  45:layer1/mframe_sched.c **** 	uint16_t flags;
  46:layer1/mframe_sched.c **** };
  47:layer1/mframe_sched.c **** 
  48:layer1/mframe_sched.c **** /* FIXME: properly clean this up */
  49:layer1/mframe_sched.c **** #define NB_QUAD_DL	nb_sched_set
  50:layer1/mframe_sched.c **** #define NB_QUAD_FH_DL	NB_QUAD_DL
  51:layer1/mframe_sched.c **** #define NB_QUAD_UL	nb_sched_set_ul
  52:layer1/mframe_sched.c **** #define NB_QUAD_FH_UL	NB_QUAD_UL
  53:layer1/mframe_sched.c **** #define NEIGH_PM	neigh_pm_sched_set
  54:layer1/mframe_sched.c **** 
  55:layer1/mframe_sched.c **** /* BCCH Normal */
  56:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_bcch_norm[] = {
  57:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 51, .frame_nr = 2 },
  58:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
  59:layer1/mframe_sched.c **** };
  60:layer1/mframe_sched.c **** 
  61:layer1/mframe_sched.c **** /* BCCH Extended */
  62:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_bcch_ext[] = {
  63:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 51, .frame_nr = 6 },
  64:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
  65:layer1/mframe_sched.c **** };
  66:layer1/mframe_sched.c **** 
  67:layer1/mframe_sched.c **** /* Full CCCH in a pure BCCH + CCCH C0T0 */
  68:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_ccch[] = {
  69:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 51, .frame_nr = 6 },
  70:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 51, .frame_nr = 12 },
  71:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 51, .frame_nr = 16 },
  72:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 51, .frame_nr = 22 },
  73:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 51, .frame_nr = 26 },
  74:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 51, .frame_nr = 32 },
  75:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 51, .frame_nr = 36 },
  76:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 51, .frame_nr = 42 },
  77:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 51, .frame_nr = 46 },
  78:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
  79:layer1/mframe_sched.c **** };
  80:layer1/mframe_sched.c **** 
  81:layer1/mframe_sched.c **** /* Full CCCH in a combined CCCH on C0T0 */
  82:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_ccch_comb[] = {
  83:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 51, .frame_nr = 6 },
  84:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 51, .frame_nr = 12 },
  85:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 51, .frame_nr = 16 },
  86:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
  87:layer1/mframe_sched.c **** };
  88:layer1/mframe_sched.c **** 
  89:layer1/mframe_sched.c **** /* SDCCH/4 in a combined CCCH on C0T0, cannot be FH */
  90:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_sdcch4_0[] = {
  91:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 51, .frame_nr = 22 },
  92:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_UL, .modulo = 51, .frame_nr = 22+15 },
  93:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 2*51, .frame_nr = 42,
  94:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
  95:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_UL, .modulo = 2*51, .frame_nr = 42+15,
  96:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
  97:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
  98:layer1/mframe_sched.c **** };
  99:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_sdcch4_1[] = {
 100:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 51, .frame_nr = 26 },
 101:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_UL, .modulo = 51, .frame_nr = 26+15 },
 102:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 2*51, .frame_nr = 46,
 103:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 104:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_UL, .modulo = 2*51, .frame_nr = 46+15,
 105:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 106:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 107:layer1/mframe_sched.c **** };
 108:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_sdcch4_2[] = {
 109:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 51, .frame_nr = 32 },
 110:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_UL, .modulo = 51, .frame_nr = 32+15 },
 111:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 2*51, .frame_nr = 51+42,
 112:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 113:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_UL, .modulo = 2*51, .frame_nr = 51+42+15,
 114:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 115:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 116:layer1/mframe_sched.c **** };
 117:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_sdcch4_3[] = {
 118:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 51, .frame_nr = 36 },
 119:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_UL, .modulo = 51, .frame_nr = 36+15 },
 120:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 2*51, .frame_nr = 51+46,
 121:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 122:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_UL, .modulo = 2*51, .frame_nr = 51+46+15,
 123:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 124:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 125:layer1/mframe_sched.c **** };
 126:layer1/mframe_sched.c **** 
 127:layer1/mframe_sched.c **** /* SDCCH/8, can be frequency hopping (FH) */
 128:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_sdcch8_0[] = {
 129:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_DL, .modulo = 51, .frame_nr = 0 },
 130:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_UL, .modulo = 51, .frame_nr = 0+15 },
 131:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_DL, .modulo = 2*51, .frame_nr = 32,
 132:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 133:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_UL, .modulo = 2*51, .frame_nr = 32+15,
 134:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 135:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 136:layer1/mframe_sched.c **** };
 137:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_sdcch8_1[] = {
 138:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_DL, .modulo = 51, .frame_nr = 4 },
 139:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_UL, .modulo = 51, .frame_nr = 4+15 },
 140:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_DL, .modulo = 2*51, .frame_nr = 36,
 141:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 142:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_UL, .modulo = 2*51, .frame_nr = 36+15,
 143:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 144:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 145:layer1/mframe_sched.c **** };
 146:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_sdcch8_2[] = {
 147:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_DL, .modulo = 51, .frame_nr = 8 },
 148:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_UL, .modulo = 51, .frame_nr = 8+15 },
 149:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_DL, .modulo = 2*51, .frame_nr = 40,
 150:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 151:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_UL, .modulo = 2*51, .frame_nr = 40+15,
 152:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 153:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 154:layer1/mframe_sched.c **** };
 155:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_sdcch8_3[] = {
 156:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_DL, .modulo = 51, .frame_nr = 12 },
 157:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_UL, .modulo = 51, .frame_nr = 12+15 },
 158:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_DL, .modulo = 2*51, .frame_nr = 44,
 159:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 160:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_UL, .modulo = 2*51, .frame_nr = 44+15,
 161:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 162:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 163:layer1/mframe_sched.c **** };
 164:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_sdcch8_4[] = {
 165:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_DL, .modulo = 51, .frame_nr = 16 },
 166:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_UL, .modulo = 51, .frame_nr = 16+15 },
 167:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_DL, .modulo = 2*51, .frame_nr = 51+32,
 168:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 169:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_UL, .modulo = 2*51, .frame_nr = 51+32+15,
 170:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 171:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 172:layer1/mframe_sched.c **** };
 173:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_sdcch8_5[] = {
 174:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_DL, .modulo = 51, .frame_nr = 20 },
 175:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_UL, .modulo = 51, .frame_nr = 20+15 },
 176:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_DL, .modulo = 2*51, .frame_nr = 51+36,
 177:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 178:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_UL, .modulo = 2*51, .frame_nr = 51+36+15,
 179:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 180:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 181:layer1/mframe_sched.c **** };
 182:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_sdcch8_6[] = {
 183:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_DL, .modulo = 51, .frame_nr = 24 },
 184:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_UL, .modulo = 51, .frame_nr = 24+15 },
 185:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_DL, .modulo = 2*51, .frame_nr = 51+40,
 186:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 187:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_UL, .modulo = 2*51, .frame_nr = 51+40+15,
 188:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 189:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 190:layer1/mframe_sched.c **** };
 191:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_sdcch8_7[] = {
 192:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_DL, .modulo = 51, .frame_nr = 28 },
 193:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_UL, .modulo = 51, .frame_nr = 28+15 },
 194:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_DL, .modulo = 2*51, .frame_nr = 51+44,
 195:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 196:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_UL, .modulo = 2*51, .frame_nr = 51+44+15,
 197:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 198:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 199:layer1/mframe_sched.c **** };
 200:layer1/mframe_sched.c **** 
 201:layer1/mframe_sched.c **** /* CBCH replaces sub-slot 2 of SDCCH, see GSM 05.02, section 6.4 */
 202:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_sdcch8_cbch[] = {
 203:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_DL, .modulo = 51, .frame_nr = 8 },
 204:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 205:layer1/mframe_sched.c **** };
 206:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_sdcch4_cbch[] = {
 207:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 51, .frame_nr = 32 },
 208:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 209:layer1/mframe_sched.c **** };
 210:layer1/mframe_sched.c **** 
 211:layer1/mframe_sched.c **** /* Measurement for MF 51 C0 */
 212:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_neigh_pm51_c0t0[] = {
 213:layer1/mframe_sched.c **** 	{ .sched_set = NEIGH_PM   , .modulo = 51, .frame_nr = 0 },
 214:layer1/mframe_sched.c **** 	{ .sched_set = NEIGH_PM   , .modulo = 51, .frame_nr = 10 },
 215:layer1/mframe_sched.c **** 	{ .sched_set = NEIGH_PM   , .modulo = 51, .frame_nr = 20 },
 216:layer1/mframe_sched.c **** 	{ .sched_set = NEIGH_PM   , .modulo = 51, .frame_nr = 30 },
 217:layer1/mframe_sched.c **** 	{ .sched_set = NEIGH_PM   , .modulo = 51, .frame_nr = 40 },
 218:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 219:layer1/mframe_sched.c **** };
 220:layer1/mframe_sched.c **** 
 221:layer1/mframe_sched.c **** /* Measurement for MF 51 */
 222:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_neigh_pm51[] = {
 223:layer1/mframe_sched.c **** 	{ .sched_set = NEIGH_PM   , .modulo = 51, .frame_nr = 50 },
 224:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 225:layer1/mframe_sched.c **** };
 226:layer1/mframe_sched.c **** 
 227:layer1/mframe_sched.c **** /* TCH */
 228:layer1/mframe_sched.c **** #define TCH	tch_sched_set
 229:layer1/mframe_sched.c **** #define TCH_A	tch_a_sched_set
 230:layer1/mframe_sched.c **** #define TCH_D	tch_d_sched_set
 231:layer1/mframe_sched.c **** 
 232:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_tch_f_even[] = {
 233:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  0 },
 234:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  1 },
 235:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  2 },
 236:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  3 },
 237:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  4 },
 238:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  5 },
 239:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  6 },
 240:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  7 },
 241:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  8 },
 242:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  9 },
 243:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr = 10 },
 244:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr = 11 },
 245:layer1/mframe_sched.c **** 	{ .sched_set = TCH_A, .modulo = 26, .frame_nr = 12,
 246:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 247:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 248:layer1/mframe_sched.c **** };
 249:layer1/mframe_sched.c **** 
 250:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_tch_f_odd[] = {
 251:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  0 },
 252:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  1 },
 253:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  2 },
 254:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  3 },
 255:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  4 },
 256:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  5 },
 257:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  6 },
 258:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  7 },
 259:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  8 },
 260:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  9 },
 261:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr = 10 },
 262:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr = 11 },
 263:layer1/mframe_sched.c **** 	{ .sched_set = TCH_A, .modulo = 26, .frame_nr = 25,
 264:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 265:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 266:layer1/mframe_sched.c **** };
 267:layer1/mframe_sched.c **** 
 268:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_tch_h_0[] = {
 269:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  0 },
 270:layer1/mframe_sched.c **** 	{ .sched_set = TCH_D, .modulo = 13, .frame_nr =  1 },
 271:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  2 },
 272:layer1/mframe_sched.c **** 	{ .sched_set = TCH_D, .modulo = 13, .frame_nr =  3 },
 273:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  4 },
 274:layer1/mframe_sched.c **** 	{ .sched_set = TCH_D, .modulo = 13, .frame_nr =  5 },
 275:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  6 },
 276:layer1/mframe_sched.c **** 	{ .sched_set = TCH_D, .modulo = 13, .frame_nr =  7 },
 277:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  8 },
 278:layer1/mframe_sched.c **** 	{ .sched_set = TCH_D, .modulo = 13, .frame_nr =  9 },
 279:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr = 10 },
 280:layer1/mframe_sched.c **** 	{ .sched_set = TCH_D, .modulo = 13, .frame_nr = 11 },
 281:layer1/mframe_sched.c **** 	{ .sched_set = TCH_A, .modulo = 26, .frame_nr = 12,
 282:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 283:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 284:layer1/mframe_sched.c **** };
 285:layer1/mframe_sched.c **** 
 286:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_tch_h_1[] = {
 287:layer1/mframe_sched.c **** 	{ .sched_set = TCH_D, .modulo = 13, .frame_nr =  0 },
 288:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  1 },
 289:layer1/mframe_sched.c **** 	{ .sched_set = TCH_D, .modulo = 13, .frame_nr =  2 },
 290:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  3 },
 291:layer1/mframe_sched.c **** 	{ .sched_set = TCH_D, .modulo = 13, .frame_nr =  4 },
 292:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  5 },
 293:layer1/mframe_sched.c **** 	{ .sched_set = TCH_D, .modulo = 13, .frame_nr =  6 },
 294:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  7 },
 295:layer1/mframe_sched.c **** 	{ .sched_set = TCH_D, .modulo = 13, .frame_nr =  8 },
 296:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr =  9 },
 297:layer1/mframe_sched.c **** 	{ .sched_set = TCH_D, .modulo = 13, .frame_nr = 10 },
 298:layer1/mframe_sched.c **** 	{ .sched_set = TCH,   .modulo = 13, .frame_nr = 11 },
 299:layer1/mframe_sched.c **** 	{ .sched_set = TCH_A, .modulo = 26, .frame_nr = 25,
 300:layer1/mframe_sched.c **** 	  .flags = MF_F_SACCH },
 301:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 302:layer1/mframe_sched.c **** };
 303:layer1/mframe_sched.c **** 
 304:layer1/mframe_sched.c **** /* Measurement for MF 26 */
 305:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_neigh_pm26_even[] = {
 306:layer1/mframe_sched.c **** 	{ .sched_set = NEIGH_PM   , .modulo = 26, .frame_nr = 25 },
 307:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 308:layer1/mframe_sched.c **** };
 309:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_neigh_pm26_odd[] = {
 310:layer1/mframe_sched.c **** 	{ .sched_set = NEIGH_PM   , .modulo = 26, .frame_nr = 12 },
 311:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 312:layer1/mframe_sched.c **** };
 313:layer1/mframe_sched.c **** 
 314:layer1/mframe_sched.c **** /* See 3GPP TS 45.002, table 6 */
 315:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_gprs_pdtch[] = {
 316:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 13, .frame_nr = 0 },
 317:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 13, .frame_nr = 4 },
 318:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_DL, .modulo = 13, .frame_nr = 8 },
 319:layer1/mframe_sched.c **** 	/* NOTE: receive only task */
 320:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 321:layer1/mframe_sched.c **** };
 322:layer1/mframe_sched.c **** 
 323:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_gprs_ptcch[] = {
 324:layer1/mframe_sched.c **** 	/* TODO: implement AB_PTCCH_UL for PTCCH/U */
 325:layer1/mframe_sched.c **** 	/* TODO: implement NB_PTCCH_DL for PTCCH/D */
 326:layer1/mframe_sched.c **** #if 0
 327:layer1/mframe_sched.c **** 	/* PTCCH/D */
 328:layer1/mframe_sched.c **** 	{ .sched_set = NB_PTCCH_DL, .modulo = 104, .frame_nr = 12, .flags = MF_F_PTCCH },
 329:layer1/mframe_sched.c **** 	{ .sched_set = NB_PTCCH_DL, .modulo = 104, .frame_nr = 38, .flags = MF_F_PTCCH },
 330:layer1/mframe_sched.c **** 	{ .sched_set = NB_PTCCH_DL, .modulo = 104, .frame_nr = 64, .flags = MF_F_PTCCH },
 331:layer1/mframe_sched.c **** 	{ .sched_set = NB_PTCCH_DL, .modulo = 104, .frame_nr = 90, .flags = MF_F_PTCCH },
 332:layer1/mframe_sched.c **** 
 333:layer1/mframe_sched.c **** 	/* PTCCH/U for TAI 0 .. 3 */
 334:layer1/mframe_sched.c **** 	{ .sched_set = AB_PTCCH_UL, .modulo = 416, .frame_nr = 12 },
 335:layer1/mframe_sched.c **** 	{ .sched_set = AB_PTCCH_UL, .modulo = 416, .frame_nr = 38 },
 336:layer1/mframe_sched.c **** 	{ .sched_set = AB_PTCCH_UL, .modulo = 416, .frame_nr = 64 },
 337:layer1/mframe_sched.c **** 	{ .sched_set = AB_PTCCH_UL, .modulo = 416, .frame_nr = 90 },
 338:layer1/mframe_sched.c **** 
 339:layer1/mframe_sched.c **** 	/* PTCCH/U for TAI 4 .. 7 */
 340:layer1/mframe_sched.c **** 	{ .sched_set = AB_PTCCH_UL, .modulo = 416, .frame_nr = 116 },
 341:layer1/mframe_sched.c **** 	{ .sched_set = AB_PTCCH_UL, .modulo = 416, .frame_nr = 142 },
 342:layer1/mframe_sched.c **** 	{ .sched_set = AB_PTCCH_UL, .modulo = 416, .frame_nr = 168 },
 343:layer1/mframe_sched.c **** 	{ .sched_set = AB_PTCCH_UL, .modulo = 416, .frame_nr = 194 },
 344:layer1/mframe_sched.c **** 
 345:layer1/mframe_sched.c **** 	/* PTCCH/U for TAI 8 .. 11 */
 346:layer1/mframe_sched.c **** 	{ .sched_set = AB_PTCCH_UL, .modulo = 416, .frame_nr = 220 },
 347:layer1/mframe_sched.c **** 	{ .sched_set = AB_PTCCH_UL, .modulo = 416, .frame_nr = 246 },
 348:layer1/mframe_sched.c **** 	{ .sched_set = AB_PTCCH_UL, .modulo = 416, .frame_nr = 272 },
 349:layer1/mframe_sched.c **** 	{ .sched_set = AB_PTCCH_UL, .modulo = 416, .frame_nr = 298 },
 350:layer1/mframe_sched.c **** 
 351:layer1/mframe_sched.c **** 	/* PTCCH/U for TAI 12 .. 15 */
 352:layer1/mframe_sched.c **** 	{ .sched_set = AB_PTCCH_UL, .modulo = 416, .frame_nr = 324 },
 353:layer1/mframe_sched.c **** 	{ .sched_set = AB_PTCCH_UL, .modulo = 416, .frame_nr = 350 },
 354:layer1/mframe_sched.c **** 	{ .sched_set = AB_PTCCH_UL, .modulo = 416, .frame_nr = 376 },
 355:layer1/mframe_sched.c **** 	{ .sched_set = AB_PTCCH_UL, .modulo = 416, .frame_nr = 402 },
 356:layer1/mframe_sched.c **** #endif
 357:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 358:layer1/mframe_sched.c **** };
 359:layer1/mframe_sched.c **** 
 360:layer1/mframe_sched.c **** /* Test TX */
 361:layer1/mframe_sched.c **** static const struct mframe_sched_item mf_tx_all_nb[] = {
 362:layer1/mframe_sched.c **** 	{ .sched_set = NB_QUAD_FH_UL, .modulo = 4, .frame_nr = 0 },
 363:layer1/mframe_sched.c **** 	{ .sched_set = NULL }
 364:layer1/mframe_sched.c **** };
 365:layer1/mframe_sched.c **** 
 366:layer1/mframe_sched.c **** static const struct mframe_sched_item *sched_set_for_task[32] = {
 367:layer1/mframe_sched.c **** 	[MF_TASK_BCCH_NORM] = mf_bcch_norm,
 368:layer1/mframe_sched.c **** 	[MF_TASK_BCCH_EXT] = mf_bcch_ext,
 369:layer1/mframe_sched.c **** 	[MF_TASK_CCCH] = mf_ccch,
 370:layer1/mframe_sched.c **** 	[MF_TASK_CCCH_COMB] = mf_ccch_comb,
 371:layer1/mframe_sched.c **** 
 372:layer1/mframe_sched.c **** 	[MF_TASK_SDCCH4_0] = mf_sdcch4_0,
 373:layer1/mframe_sched.c **** 	[MF_TASK_SDCCH4_1] = mf_sdcch4_1,
 374:layer1/mframe_sched.c **** 	[MF_TASK_SDCCH4_2] = mf_sdcch4_2,
 375:layer1/mframe_sched.c **** 	[MF_TASK_SDCCH4_3] = mf_sdcch4_3,
 376:layer1/mframe_sched.c **** 
 377:layer1/mframe_sched.c **** 	[MF_TASK_SDCCH8_0] = mf_sdcch8_0,
 378:layer1/mframe_sched.c **** 	[MF_TASK_SDCCH8_1] = mf_sdcch8_1,
 379:layer1/mframe_sched.c **** 	[MF_TASK_SDCCH8_2] = mf_sdcch8_2,
 380:layer1/mframe_sched.c **** 	[MF_TASK_SDCCH8_3] = mf_sdcch8_3,
 381:layer1/mframe_sched.c **** 	[MF_TASK_SDCCH8_4] = mf_sdcch8_4,
 382:layer1/mframe_sched.c **** 	[MF_TASK_SDCCH8_5] = mf_sdcch8_5,
 383:layer1/mframe_sched.c **** 	[MF_TASK_SDCCH8_6] = mf_sdcch8_6,
 384:layer1/mframe_sched.c **** 	[MF_TASK_SDCCH8_7] = mf_sdcch8_7,
 385:layer1/mframe_sched.c **** 
 386:layer1/mframe_sched.c **** 	[MF_TASK_SDCCH4_CBCH] = mf_sdcch4_cbch,
 387:layer1/mframe_sched.c **** 	[MF_TASK_SDCCH8_CBCH] = mf_sdcch8_cbch,
 388:layer1/mframe_sched.c **** 
 389:layer1/mframe_sched.c **** 	[MF_TASK_TCH_F_EVEN] = mf_tch_f_even,
 390:layer1/mframe_sched.c **** 	[MF_TASK_TCH_F_ODD]  = mf_tch_f_odd,
 391:layer1/mframe_sched.c **** 	[MF_TASK_TCH_H_0]    = mf_tch_h_0,
 392:layer1/mframe_sched.c **** 	[MF_TASK_TCH_H_1]    = mf_tch_h_1,
 393:layer1/mframe_sched.c **** 
 394:layer1/mframe_sched.c **** 	[MF_TASK_GPRS_PDTCH] = mf_gprs_pdtch,
 395:layer1/mframe_sched.c **** 	[MF_TASK_GPRS_PTCCH] = mf_gprs_ptcch,
 396:layer1/mframe_sched.c **** 
 397:layer1/mframe_sched.c **** 	[MF_TASK_NEIGH_PM51_C0T0] = mf_neigh_pm51_c0t0,
 398:layer1/mframe_sched.c **** 	[MF_TASK_NEIGH_PM51] = mf_neigh_pm51,
 399:layer1/mframe_sched.c **** 	[MF_TASK_NEIGH_PM26E] = mf_neigh_pm26_even,
 400:layer1/mframe_sched.c **** 	[MF_TASK_NEIGH_PM26O] = mf_neigh_pm26_odd,
 401:layer1/mframe_sched.c **** 
 402:layer1/mframe_sched.c **** 	[MF_TASK_UL_ALL_NB] = mf_tx_all_nb,
 403:layer1/mframe_sched.c **** };
 404:layer1/mframe_sched.c **** 
 405:layer1/mframe_sched.c **** /* encodes a channel number according to 08.58 Chapter 9.3.1 */
 406:layer1/mframe_sched.c **** uint8_t mframe_task2chan_nr(enum mframe_task mft, uint8_t ts)
 407:layer1/mframe_sched.c **** {
 766              		.loc 1 407 0
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769              		@ link register save eliminated.
 770              	.LVL0:
 771              		@ lr needed for prologue
 772              		.loc 1 407 0
 773 0000 FF1001E2 		and	r1, r1, #255
 408:layer1/mframe_sched.c **** 	uint8_t cbits;
 409:layer1/mframe_sched.c **** 
 410:layer1/mframe_sched.c **** 	switch (mft) {
 774              		.loc 1 410 0
 775 0004 170050E3 		cmp	r0, #23
 776 0008 00F19F97 		ldrls	pc, [pc, r0, asl #2]
 777 000c 1C0000EA 		b	.L2
 778              		.p2align 2
 779              	.L23:
 780 0010 80000000 		.word	.L3
 781 0014 80000000 		.word	.L3
 782 0018 88000000 		.word	.L4
 783 001c 88000000 		.word	.L4
 784 0020 90000000 		.word	.L5
 785 0024 98000000 		.word	.L6
 786 0028 A0000000 		.word	.L7
 787 002c A8000000 		.word	.L8
 788 0030 B0000000 		.word	.L9
 789 0034 B8000000 		.word	.L10
 790 0038 C0000000 		.word	.L11
 791 003c C8000000 		.word	.L12
 792 0040 D0000000 		.word	.L13
 793 0044 D8000000 		.word	.L14
 794 0048 E0000000 		.word	.L15
 795 004c E8000000 		.word	.L16
 796 0050 10010000 		.word	.L17
 797 0054 70000000 		.word	.L18
 798 0058 F0000000 		.word	.L19
 799 005c F0000000 		.word	.L19
 800 0060 F8000000 		.word	.L20
 801 0064 00010000 		.word	.L21
 802 0068 08010000 		.word	.L22
 803 006c 08010000 		.word	.L22
 804              	.L18:
 805 0070 1A30A0E3 		mov	r3, #26
 806              	.LVL1:
 807 0074 430000EA 		b	.L24
 808              	.LVL2:
 809              	.L2:
 810 0078 0030A0E3 		mov	r3, #0
 811              	.LVL3:
 812 007c 430000EA 		b	.L24
 813              	.LVL4:
 814              	.L3:
 815 0080 1030A0E3 		mov	r3, #16
 816              	.LVL5:
 817 0084 430000EA 		b	.L24
 818              	.LVL6:
 819              	.L4:
 411:layer1/mframe_sched.c **** 	case MF_TASK_BCCH_NORM:
 412:layer1/mframe_sched.c **** 	case MF_TASK_BCCH_EXT:
 413:layer1/mframe_sched.c **** 		cbits = 0x10;
 414:layer1/mframe_sched.c **** 		break;
 820              		.loc 1 414 0
 821 0088 1230A0E3 		mov	r3, #18
 822              	.LVL7:
 823 008c 430000EA 		b	.L24
 824              	.LVL8:
 825              	.L5:
 415:layer1/mframe_sched.c **** 	case MF_TASK_CCCH:
 416:layer1/mframe_sched.c **** 	case MF_TASK_CCCH_COMB:
 417:layer1/mframe_sched.c **** 		cbits = 0x12;
 418:layer1/mframe_sched.c **** 		break;
 826              		.loc 1 418 0
 827 0090 0430A0E3 		mov	r3, #4
 828              	.LVL9:
 829 0094 430000EA 		b	.L24
 830              	.LVL10:
 831              	.L6:
 419:layer1/mframe_sched.c **** 	case MF_TASK_SDCCH4_0:
 420:layer1/mframe_sched.c **** 		cbits = 0x04 + 0;
 421:layer1/mframe_sched.c **** 		break;
 832              		.loc 1 421 0
 833 0098 0530A0E3 		mov	r3, #5
 834              	.LVL11:
 835 009c 430000EA 		b	.L24
 836              	.LVL12:
 837              	.L7:
 422:layer1/mframe_sched.c **** 	case MF_TASK_SDCCH4_1:
 423:layer1/mframe_sched.c **** 		cbits = 0x04 + 1;
 424:layer1/mframe_sched.c **** 		break;
 838              		.loc 1 424 0
 839 00a0 0630A0E3 		mov	r3, #6
 840              	.LVL13:
 841 00a4 430000EA 		b	.L24
 842              	.LVL14:
 843              	.L8:
 425:layer1/mframe_sched.c **** 	case MF_TASK_SDCCH4_2:
 426:layer1/mframe_sched.c **** 		cbits = 0x04 + 2;
 427:layer1/mframe_sched.c **** 		break;
 844              		.loc 1 427 0
 845 00a8 0730A0E3 		mov	r3, #7
 846              	.LVL15:
 847 00ac 430000EA 		b	.L24
 848              	.LVL16:
 849              	.L9:
 428:layer1/mframe_sched.c **** 	case MF_TASK_SDCCH4_3:
 429:layer1/mframe_sched.c **** 		cbits = 0x04 + 3;
 430:layer1/mframe_sched.c **** 		break;
 850              		.loc 1 430 0
 851 00b0 0830A0E3 		mov	r3, #8
 852              	.LVL17:
 853 00b4 430000EA 		b	.L24
 854              	.LVL18:
 855              	.L10:
 431:layer1/mframe_sched.c **** 	case MF_TASK_SDCCH8_0:
 432:layer1/mframe_sched.c **** 		cbits = 0x08 + 0;
 433:layer1/mframe_sched.c **** 		break;
 856              		.loc 1 433 0
 857 00b8 0930A0E3 		mov	r3, #9
 858              	.LVL19:
 859 00bc 430000EA 		b	.L24
 860              	.LVL20:
 861              	.L11:
 434:layer1/mframe_sched.c **** 	case MF_TASK_SDCCH8_1:
 435:layer1/mframe_sched.c **** 		cbits = 0x08 + 1;
 436:layer1/mframe_sched.c **** 		break;
 862              		.loc 1 436 0
 863 00c0 0A30A0E3 		mov	r3, #10
 864              	.LVL21:
 865 00c4 430000EA 		b	.L24
 866              	.LVL22:
 867              	.L12:
 437:layer1/mframe_sched.c **** 	case MF_TASK_SDCCH8_2:
 438:layer1/mframe_sched.c **** 		cbits = 0x08 + 2;
 439:layer1/mframe_sched.c **** 		break;
 868              		.loc 1 439 0
 869 00c8 0B30A0E3 		mov	r3, #11
 870              	.LVL23:
 871 00cc 430000EA 		b	.L24
 872              	.LVL24:
 873              	.L13:
 440:layer1/mframe_sched.c **** 	case MF_TASK_SDCCH8_3:
 441:layer1/mframe_sched.c **** 		cbits = 0x08 + 3;
 442:layer1/mframe_sched.c **** 		break;
 874              		.loc 1 442 0
 875 00d0 0C30A0E3 		mov	r3, #12
 876              	.LVL25:
 877 00d4 430000EA 		b	.L24
 878              	.LVL26:
 879              	.L14:
 443:layer1/mframe_sched.c **** 	case MF_TASK_SDCCH8_4:
 444:layer1/mframe_sched.c **** 		cbits = 0x08 + 4;
 445:layer1/mframe_sched.c **** 		break;
 880              		.loc 1 445 0
 881 00d8 0D30A0E3 		mov	r3, #13
 882              	.LVL27:
 883 00dc 430000EA 		b	.L24
 884              	.LVL28:
 885              	.L15:
 446:layer1/mframe_sched.c **** 	case MF_TASK_SDCCH8_5:
 447:layer1/mframe_sched.c **** 		cbits = 0x08 + 5;
 448:layer1/mframe_sched.c **** 		break;
 886              		.loc 1 448 0
 887 00e0 0E30A0E3 		mov	r3, #14
 888              	.LVL29:
 889 00e4 430000EA 		b	.L24
 890              	.LVL30:
 891              	.L16:
 449:layer1/mframe_sched.c **** 	case MF_TASK_SDCCH8_6:
 450:layer1/mframe_sched.c **** 		cbits = 0x08 + 6;
 451:layer1/mframe_sched.c **** 		break;
 892              		.loc 1 451 0
 893 00e8 0F30A0E3 		mov	r3, #15
 894              	.LVL31:
 895 00ec 430000EA 		b	.L24
 896              	.LVL32:
 897              	.L19:
 452:layer1/mframe_sched.c **** 	case MF_TASK_SDCCH8_7:
 453:layer1/mframe_sched.c **** 		cbits = 0x08 + 7;
 454:layer1/mframe_sched.c **** 		break;
 898              		.loc 1 454 0
 899 00f0 0130A0E3 		mov	r3, #1
 900              	.LVL33:
 901 00f4 430000EA 		b	.L24
 902              	.LVL34:
 903              	.L20:
 455:layer1/mframe_sched.c **** 	case MF_TASK_TCH_F_EVEN:
 456:layer1/mframe_sched.c **** 	case MF_TASK_TCH_F_ODD:
 457:layer1/mframe_sched.c **** 		cbits = 0x01;
 458:layer1/mframe_sched.c **** 		break;
 904              		.loc 1 458 0
 905 00f8 0230A0E3 		mov	r3, #2
 906              	.LVL35:
 907 00fc 430000EA 		b	.L24
 908              	.LVL36:
 909              	.L21:
 459:layer1/mframe_sched.c **** 	case MF_TASK_TCH_H_0:
 460:layer1/mframe_sched.c **** 		cbits = 0x02 + 0;
 461:layer1/mframe_sched.c **** 		break;
 910              		.loc 1 461 0
 911 0100 0330A0E3 		mov	r3, #3
 912              	.LVL37:
 913 0104 430000EA 		b	.L24
 914              	.LVL38:
 915              	.L22:
 462:layer1/mframe_sched.c **** 	case MF_TASK_TCH_H_1:
 463:layer1/mframe_sched.c **** 		cbits = 0x02 + 1;
 464:layer1/mframe_sched.c **** 		break;
 916              		.loc 1 464 0
 917 0108 1830A0E3 		mov	r3, #24
 918              	.LVL39:
 919 010c 430000EA 		b	.L24
 920              	.LVL40:
 921              	.L17:
 465:layer1/mframe_sched.c **** 
 466:layer1/mframe_sched.c **** 	/* Osmocom specific extensions */
 467:layer1/mframe_sched.c **** 	case MF_TASK_GPRS_PDTCH:
 468:layer1/mframe_sched.c **** 	case MF_TASK_GPRS_PTCCH:
 469:layer1/mframe_sched.c **** 		cbits = 0x18;
 470:layer1/mframe_sched.c **** 		break;
 922              		.loc 1 470 0
 923 0110 1930A0E3 		mov	r3, #25
 924              	.LVL41:
 925              	.L24:
 926 0114 070001E2 		and	r0, r1, #7
 927              	.LVL42:
 471:layer1/mframe_sched.c **** 	case MF_TASK_SDCCH4_CBCH:
 472:layer1/mframe_sched.c **** 		cbits = 0x19;
 473:layer1/mframe_sched.c **** 		break;
 474:layer1/mframe_sched.c **** 	case MF_TASK_SDCCH8_CBCH:
 475:layer1/mframe_sched.c **** 		cbits = 0x1a;
 476:layer1/mframe_sched.c **** 		break;
 477:layer1/mframe_sched.c **** 
 478:layer1/mframe_sched.c **** 	case MF_TASK_UL_ALL_NB:
 479:layer1/mframe_sched.c **** 	default:
 480:layer1/mframe_sched.c **** 		printd("ERROR: cannot express mf_task=%d as "
 481:layer1/mframe_sched.c **** 			"channel number, using 0x00\n", mft);
 482:layer1/mframe_sched.c **** 		cbits = 0x00;
 483:layer1/mframe_sched.c **** 	}
 484:layer1/mframe_sched.c **** 
 485:layer1/mframe_sched.c **** 	return (cbits << 3) | (ts & 0x7);
 486:layer1/mframe_sched.c **** }
 928              		.loc 1 486 0
 929 0118 830180E1 		orr	r0, r0, r3, asl #3
 930 011c 1EFF2FE1 		bx	lr
 931              	.LFE18:
 933              		.section	.text.mframe_enable,"ax",%progbits
 934              		.align	2
 935              		.global	mframe_enable
 937              	mframe_enable:
 938              	.LFB20:
 487:layer1/mframe_sched.c **** 
 488:layer1/mframe_sched.c **** /* how many TDMA frame ticks should we schedule events ahead? */
 489:layer1/mframe_sched.c **** #define SCHEDULE_AHEAD	2
 490:layer1/mframe_sched.c **** 
 491:layer1/mframe_sched.c **** /* how long do we need to tell the DSP in advance what we want to do? */
 492:layer1/mframe_sched.c **** #define SCHEDULE_LATENCY	1
 493:layer1/mframe_sched.c **** 
 494:layer1/mframe_sched.c **** /* (test and) schedule one particular sched_item_set by means of the TDMA scheduler */
 495:layer1/mframe_sched.c **** static void mframe_schedule_set(enum mframe_task task_id)
 496:layer1/mframe_sched.c **** {
 497:layer1/mframe_sched.c **** 	const struct mframe_sched_item *set = sched_set_for_task[task_id];
 498:layer1/mframe_sched.c **** 	const struct mframe_sched_item *si;
 499:layer1/mframe_sched.c **** 
 500:layer1/mframe_sched.c **** 	for (si = set; si->sched_set != NULL; si++) {
 501:layer1/mframe_sched.c **** 		unsigned int trigger = si->frame_nr % si->modulo;
 502:layer1/mframe_sched.c **** 		unsigned int current = (l1s.current_time.fn + SCHEDULE_AHEAD) % si->modulo;
 503:layer1/mframe_sched.c **** 		if (current == trigger) {
 504:layer1/mframe_sched.c **** 			uint32_t fn;
 505:layer1/mframe_sched.c **** 			int rv;
 506:layer1/mframe_sched.c **** 
 507:layer1/mframe_sched.c **** 			/* Schedule the set */
 508:layer1/mframe_sched.c **** 			/* FIXME: what to do with SACCH Flag etc? */
 509:layer1/mframe_sched.c **** 			rv = tdma_schedule_set(SCHEDULE_AHEAD-SCHEDULE_LATENCY,
 510:layer1/mframe_sched.c **** 					  si->sched_set, task_id | (si->flags<<8));
 511:layer1/mframe_sched.c **** 
 512:layer1/mframe_sched.c **** 			/* Compute the next safe time to queue a DSP command */
 513:layer1/mframe_sched.c **** 			fn = l1s.current_time.fn;
 514:layer1/mframe_sched.c **** 			ADD_MODULO(fn, rv - 2, GSM_MAX_FN); /* -2 = worst case last dsp command */
 515:layer1/mframe_sched.c **** 			if ((fn > l1s.mframe_sched.safe_fn) ||
 516:layer1/mframe_sched.c **** 			    (l1s.mframe_sched.safe_fn >= GSM_MAX_FN))
 517:layer1/mframe_sched.c **** 				l1s.mframe_sched.safe_fn = fn;
 518:layer1/mframe_sched.c **** 		}
 519:layer1/mframe_sched.c **** 	}
 520:layer1/mframe_sched.c **** }
 521:layer1/mframe_sched.c **** 
 522:layer1/mframe_sched.c **** /* Enable a specific task */
 523:layer1/mframe_sched.c **** void mframe_enable(enum mframe_task task_id)
 524:layer1/mframe_sched.c **** {
 939              		.loc 1 524 0
 940              		@ args = 0, pretend = 0, frame = 0
 941              		@ frame_needed = 0, uses_anonymous_args = 0
 942              		@ link register save eliminated.
 943              	.LVL43:
 525:layer1/mframe_sched.c **** 	l1s.mframe_sched.tasks_tgt |= (1 << task_id);
 944              		.loc 1 525 0
 945 0000 10309FE5 		ldr	r3, .L28
 946 0004 382A93E5 		ldr	r2, [r3, #2616]
 947 0008 0110A0E3 		mov	r1, #1
 948 000c 112082E1 		orr	r2, r2, r1, asl r0
 949              		.loc 1 524 0
 950              		@ lr needed for prologue
 951              		.loc 1 525 0
 952 0010 382A83E5 		str	r2, [r3, #2616]
 526:layer1/mframe_sched.c **** }
 953              		.loc 1 526 0
 954 0014 1EFF2FE1 		bx	lr
 955              	.L29:
 956              		.align	2
 957              	.L28:
 958 0018 00000000 		.word	l1s
 959              	.LFE20:
 961              		.section	.text.mframe_disable,"ax",%progbits
 962              		.align	2
 963              		.global	mframe_disable
 965              	mframe_disable:
 966              	.LFB21:
 527:layer1/mframe_sched.c **** 
 528:layer1/mframe_sched.c **** /* Disable a specific task */
 529:layer1/mframe_sched.c **** void mframe_disable(enum mframe_task task_id)
 530:layer1/mframe_sched.c **** {
 967              		.loc 1 530 0
 968              		@ args = 0, pretend = 0, frame = 0
 969              		@ frame_needed = 0, uses_anonymous_args = 0
 970              		@ link register save eliminated.
 971              	.LVL44:
 531:layer1/mframe_sched.c **** 	l1s.mframe_sched.tasks_tgt &= ~(1 << task_id);
 972              		.loc 1 531 0
 973 0000 10309FE5 		ldr	r3, .L32
 974 0004 382A93E5 		ldr	r2, [r3, #2616]
 975 0008 0110A0E3 		mov	r1, #1
 976 000c 1120C2E1 		bic	r2, r2, r1, asl r0
 977              		.loc 1 530 0
 978              		@ lr needed for prologue
 979              		.loc 1 531 0
 980 0010 382A83E5 		str	r2, [r3, #2616]
 532:layer1/mframe_sched.c **** }
 981              		.loc 1 532 0
 982 0014 1EFF2FE1 		bx	lr
 983              	.L33:
 984              		.align	2
 985              	.L32:
 986 0018 00000000 		.word	l1s
 987              	.LFE21:
 989              		.section	.text.mframe_set,"ax",%progbits
 990              		.align	2
 991              		.global	mframe_set
 993              	mframe_set:
 994              	.LFB22:
 533:layer1/mframe_sched.c **** 
 534:layer1/mframe_sched.c **** /* Replace the current active set by the new one */
 535:layer1/mframe_sched.c **** void mframe_set(uint32_t tasks)
 536:layer1/mframe_sched.c **** {
 995              		.loc 1 536 0
 996              		@ args = 0, pretend = 0, frame = 0
 997              		@ frame_needed = 0, uses_anonymous_args = 0
 998              		@ link register save eliminated.
 999              	.LVL45:
 537:layer1/mframe_sched.c **** 	l1s.mframe_sched.tasks_tgt = tasks;
 1000              		.loc 1 537 0
 1001 0000 04309FE5 		ldr	r3, .L36
 1002              		.loc 1 536 0
 1003              		@ lr needed for prologue
 1004              		.loc 1 537 0
 1005 0004 380A83E5 		str	r0, [r3, #2616]
 538:layer1/mframe_sched.c **** }
 1006              		.loc 1 538 0
 1007 0008 1EFF2FE1 		bx	lr
 1008              	.L37:
 1009              		.align	2
 1010              	.L36:
 1011 000c 00000000 		.word	l1s
 1012              	.LFE22:
 1014              		.global	__umodsi3
 1015              		.section	.text.mframe_schedule,"ax",%progbits
 1016              		.align	2
 1017              		.global	mframe_schedule
 1019              	mframe_schedule:
 1020              	.LFB23:
 539:layer1/mframe_sched.c **** 
 540:layer1/mframe_sched.c **** /* Schedule mframe_sched_items according to current MF TASK list */
 541:layer1/mframe_sched.c **** void mframe_schedule(void)
 542:layer1/mframe_sched.c **** {
 1021              		.loc 1 542 0
 1022              		@ args = 0, pretend = 0, frame = 0
 1023              		@ frame_needed = 0, uses_anonymous_args = 0
 1024              	.LVL46:
 1025 0000 F0472DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 1026              	.LCFI0:
 543:layer1/mframe_sched.c **** 	unsigned int i;
 544:layer1/mframe_sched.c **** 	int fn_diff;
 545:layer1/mframe_sched.c **** 
 546:layer1/mframe_sched.c **** 	/* Try to enable/disable task to meet target bitmap */
 547:layer1/mframe_sched.c **** 	fn_diff = l1s.mframe_sched.safe_fn - l1s.current_time.fn;
 1027              		.loc 1 547 0
 1028 0004 08119FE5 		ldr	r1, .L59
 1029 0008 3C0A91E5 		ldr	r0, [r1, #2620]
 548:layer1/mframe_sched.c **** 	if ((fn_diff <= 0) || (fn_diff >= (GSM_MAX_FN>>1)) ||
 1030              		.loc 1 548 0
 1031 000c 003091E5 		ldr	r3, [r1, #0]
 1032 0010 00219FE5 		ldr	r2, .L59+4
 1033 0014 003063E0 		rsb	r3, r3, r0
 1034 0018 013043E2 		sub	r3, r3, #1
 1035 001c 020053E1 		cmp	r3, r2
 1036 0020 0E00008A 		bhi	.L39
 1037 0024 F0309FE5 		ldr	r3, .L59+8
 1038 0028 030050E1 		cmp	r0, r3
 549:layer1/mframe_sched.c **** 	    (l1s.mframe_sched.safe_fn >= GSM_MAX_FN))
 550:layer1/mframe_sched.c **** 		/* If nothing is in the way, enable new tasks */
 551:layer1/mframe_sched.c **** 		l1s.mframe_sched.tasks = l1s.mframe_sched.tasks_tgt;
 552:layer1/mframe_sched.c **** 	else
 553:layer1/mframe_sched.c **** 		/* Else, Disable only */
 554:layer1/mframe_sched.c **** 		l1s.mframe_sched.tasks &= l1s.mframe_sched.tasks_tgt;
 1039              		.loc 1 554 0
 1040 002c 8D2F8192 		addls	r2, r1, #564
 1041 0030 022B8292 		addls	r2, r2, #2048
 1042 0034 0C009298 		ldmlsia	r2, {r2, r3}
 1043 0038 03300290 		andls	r3, r2, r3
 1044              		.loc 1 548 0
 1045 003c 0F00009A 		bls	.L58
 1046              	.L39:
 1047              		.loc 1 551 0
 1048 0040 383A91E5 		ldr	r3, [r1, #2616]
 1049              	.L58:
 1050              		.loc 1 554 0
 1051 0044 343A81E5 		str	r3, [r1, #2612]
 1052 0048 D0909FE5 		ldr	r9, .L59+12
 1053 004c 00A0A0E3 		mov	sl, #0
 1054              	.LVL47:
 1055              	.LVL48:
 1056              	.L43:
 555:layer1/mframe_sched.c **** 
 556:layer1/mframe_sched.c **** 	/* Schedule any active pending set */
 557:layer1/mframe_sched.c **** 	for (i = 0; i < 32; i++) {
 558:layer1/mframe_sched.c **** 		if (l1s.mframe_sched.tasks & (1 << i))
 1057              		.loc 1 558 0
 1058 0050 BC309FE5 		ldr	r3, .L59
 1059 0054 342A93E5 		ldr	r2, [r3, #2612]
 1060              	.LVL49:
 1061 0058 0130A0E3 		mov	r3, #1
 1062 005c 133A12E0 		ands	r3, r2, r3, asl sl
 1063              	.LBB2:
 1064              	.LBB3:
 1065              		.loc 1 497 0
 1066 0060 00609915 		ldrne	r6, [r9, #0]
 1067              	.LBE3:
 1068              	.LBE2:
 1069              		.loc 1 558 0
 1070 0064 3A00001A 		bne	.L46
 1071 0068 3E0000EA 		b	.L44
 1072              	.LVL50:
 1073              	.L47:
 1074              	.LBB4:
 1075              	.LBB5:
 1076              	.LBB6:
 1077              		.loc 1 501 0
 1078 006c B440D6E1 		ldrh	r4, [r6, #4]
 1079              		.loc 1 503 0
 1080 0070 000098E5 		ldr	r0, [r8, #0]
 1081 0074 0410A0E1 		mov	r1, r4
 1082 0078 020080E2 		add	r0, r0, #2
 1083 007c FEFFFFEB 		bl	__umodsi3
 1084              	.LVL51:
 1085 0080 0410A0E1 		mov	r1, r4
 1086 0084 0050A0E1 		mov	r5, r0
 1087 0088 B600D6E1 		ldrh	r0, [r6, #6]
 1088 008c FEFFFFEB 		bl	__umodsi3
 1089 0090 0038A0E1 		mov	r3, r0, asl #16
 1090 0094 230855E1 		cmp	r5, r3, lsr #16
 1091              	.LBB7:
 1092              		.loc 1 509 0
 1093 0098 0710A0E1 		mov	r1, r7
 1094 009c 0100A0E3 		mov	r0, #1
 1095              	.LBE7:
 1096              		.loc 1 503 0
 1097 00a0 3900001A 		bne	.L48
 1098              	.LBB8:
 1099              		.loc 1 509 0
 1100 00a4 B820D6E1 		ldrh	r2, [r6, #8]
 1101 00a8 02248AE1 		orr	r2, sl, r2, asl #8
 1102 00ac 0228A0E1 		mov	r2, r2, asl #16
 1103 00b0 2228A0E1 		mov	r2, r2, lsr #16
 1104 00b4 FEFFFFEB 		bl	tdma_schedule_set
 1105              		.loc 1 514 0
 1106 00b8 003098E5 		ldr	r3, [r8, #0]
 1107 00bc 58109FE5 		ldr	r1, .L59+8
 1108 00c0 003083E0 		add	r3, r3, r0
 1109 00c4 022043E2 		sub	r2, r3, #2
 1110              	.LVL52:
 1111 00c8 010052E1 		cmp	r2, r1
 1112 00cc 50209F85 		ldrhi	r2, .L59+16
 1113 00d0 02208380 		addhi	r2, r3, r2
 1114              		.loc 1 515 0
 1115 00d4 3C3A98E5 		ldr	r3, [r8, #2620]
 1116 00d8 030052E1 		cmp	r2, r3
 1117 00dc 3800008A 		bhi	.L52
 1118 00e0 010053E1 		cmp	r3, r1
 1119 00e4 3900009A 		bls	.L48
 1120              	.L52:
 1121              		.loc 1 517 0
 1122 00e8 3C2A88E5 		str	r2, [r8, #2620]
 1123              	.L48:
 1124              	.LBE8:
 1125              	.LBE6:
 1126              		.loc 1 500 0
 1127 00ec 0C6086E2 		add	r6, r6, #12
 1128              	.L46:
 1129 00f0 007096E5 		ldr	r7, [r6, #0]
 1130 00f4 000057E3 		cmp	r7, #0
 1131              	.LBB9:
 1132              		.loc 1 503 0
 1133 00f8 14809FE5 		ldr	r8, .L59
 1134              	.LBE9:
 1135              		.loc 1 500 0
 1136 00fc 1900001A 		bne	.L47
 1137              	.L44:
 1138              	.LBE5:
 1139              	.LBE4:
 1140              		.loc 1 557 0
 1141 0100 01A08AE2 		add	sl, sl, #1
 1142 0104 20005AE3 		cmp	sl, #32
 1143 0108 049089E2 		add	r9, r9, #4
 1144 010c 1200001A 		bne	.L43
 559:layer1/mframe_sched.c **** 			mframe_schedule_set(i);
 560:layer1/mframe_sched.c **** 	}
 561:layer1/mframe_sched.c **** }
 1145              		.loc 1 561 0
 1146 0110 F087BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 1147              	.L60:
 1148              		.align	2
 1149              	.L59:
 1150 0114 00000000 		.word	l1s
 1151 0118 FEB71400 		.word	1357822
 1152 011c FF6F2900 		.word	2715647
 1153 0120 00000000 		.word	sched_set_for_task
 1154 0124 FE8FD6FF 		.word	-2715650
 1155              	.LFE23:
 1157              		.section	.text.mframe_reset,"ax",%progbits
 1158              		.align	2
 1159              		.global	mframe_reset
 1161              	mframe_reset:
 1162              	.LFB24:
 562:layer1/mframe_sched.c **** 
 563:layer1/mframe_sched.c **** /* reset the scheduler, disabling all tasks */
 564:layer1/mframe_sched.c **** void mframe_reset(void)
 565:layer1/mframe_sched.c **** {
 1163              		.loc 1 565 0
 1164              		@ args = 0, pretend = 0, frame = 0
 1165              		@ frame_needed = 0, uses_anonymous_args = 0
 1166              		@ link register save eliminated.
 1167              	.LVL53:
 566:layer1/mframe_sched.c **** 	l1s.mframe_sched.tasks = 0;
 1168              		.loc 1 566 0
 1169 0000 14309FE5 		ldr	r3, .L63
 1170 0004 0010A0E3 		mov	r1, #0
 567:layer1/mframe_sched.c **** 	l1s.mframe_sched.tasks_tgt = 0;
 568:layer1/mframe_sched.c **** 	l1s.mframe_sched.safe_fn = -1UL;	/* Force safe */
 1171              		.loc 1 568 0
 1172 0008 0020E0E3 		mvn	r2, #0
 1173              		.loc 1 565 0
 1174              		@ lr needed for prologue
 1175              		.loc 1 568 0
 1176 000c 3C2A83E5 		str	r2, [r3, #2620]
 1177              		.loc 1 567 0
 1178 0010 381A83E5 		str	r1, [r3, #2616]
 1179              		.loc 1 566 0
 1180 0014 341A83E5 		str	r1, [r3, #2612]
 569:layer1/mframe_sched.c **** }
 1181              		.loc 1 569 0
 1182 0018 1EFF2FE1 		bx	lr
 1183              	.L64:
 1184              		.align	2
 1185              	.L63:
 1186 001c 00000000 		.word	l1s
 1187              	.LFE24:
 1281              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 mframe_sched.c
     /tmp/ccfD6e7l.s:14     .data:0000000000000000 sched_set_for_task
     /tmp/ccfD6e7l.s:15     .data:0000000000000000 $d
     /tmp/ccfD6e7l.s:752    .rodata:0000000000000744 mf_bcch_norm
     /tmp/ccfD6e7l.s:742    .rodata:000000000000072c mf_bcch_ext
     /tmp/ccfD6e7l.s:700    .rodata:00000000000006b4 mf_ccch
     /tmp/ccfD6e7l.s:682    .rodata:0000000000000684 mf_ccch_comb
     /tmp/ccfD6e7l.s:658    .rodata:0000000000000648 mf_sdcch4_0
     /tmp/ccfD6e7l.s:634    .rodata:000000000000060c mf_sdcch4_1
     /tmp/ccfD6e7l.s:610    .rodata:00000000000005d0 mf_sdcch4_2
     /tmp/ccfD6e7l.s:586    .rodata:0000000000000594 mf_sdcch4_3
     /tmp/ccfD6e7l.s:562    .rodata:0000000000000558 mf_sdcch8_0
     /tmp/ccfD6e7l.s:538    .rodata:000000000000051c mf_sdcch8_1
     /tmp/ccfD6e7l.s:514    .rodata:00000000000004e0 mf_sdcch8_2
     /tmp/ccfD6e7l.s:490    .rodata:00000000000004a4 mf_sdcch8_3
     /tmp/ccfD6e7l.s:466    .rodata:0000000000000468 mf_sdcch8_4
     /tmp/ccfD6e7l.s:442    .rodata:000000000000042c mf_sdcch8_5
     /tmp/ccfD6e7l.s:418    .rodata:00000000000003f0 mf_sdcch8_6
     /tmp/ccfD6e7l.s:394    .rodata:00000000000003b4 mf_sdcch8_7
     /tmp/ccfD6e7l.s:384    .rodata:000000000000039c mf_sdcch4_cbch
     /tmp/ccfD6e7l.s:374    .rodata:0000000000000384 mf_sdcch8_cbch
     /tmp/ccfD6e7l.s:315    .rodata:00000000000002dc mf_tch_f_even
     /tmp/ccfD6e7l.s:256    .rodata:0000000000000234 mf_tch_f_odd
     /tmp/ccfD6e7l.s:197    .rodata:000000000000018c mf_tch_h_0
     /tmp/ccfD6e7l.s:138    .rodata:00000000000000e4 mf_tch_h_1
     /tmp/ccfD6e7l.s:120    .rodata:00000000000000b4 mf_gprs_pdtch
     /tmp/ccfD6e7l.s:115    .rodata:00000000000000a8 mf_gprs_ptcch
     /tmp/ccfD6e7l.s:89     .rodata:0000000000000060 mf_neigh_pm51_c0t0
     /tmp/ccfD6e7l.s:79     .rodata:0000000000000048 mf_neigh_pm51
     /tmp/ccfD6e7l.s:69     .rodata:0000000000000030 mf_neigh_pm26_even
     /tmp/ccfD6e7l.s:59     .rodata:0000000000000018 mf_neigh_pm26_odd
     /tmp/ccfD6e7l.s:49     .rodata:0000000000000000 mf_tx_all_nb
     /tmp/ccfD6e7l.s:50     .rodata:0000000000000000 $d
     /tmp/ccfD6e7l.s:763    .text.mframe_task2chan_nr:0000000000000000 mframe_task2chan_nr
     /tmp/ccfD6e7l.s:773    .text.mframe_task2chan_nr:0000000000000000 $a
     /tmp/ccfD6e7l.s:780    .text.mframe_task2chan_nr:0000000000000010 $d
     /tmp/ccfD6e7l.s:805    .text.mframe_task2chan_nr:0000000000000070 $a
     /tmp/ccfD6e7l.s:937    .text.mframe_enable:0000000000000000 mframe_enable
     /tmp/ccfD6e7l.s:945    .text.mframe_enable:0000000000000000 $a
     /tmp/ccfD6e7l.s:958    .text.mframe_enable:0000000000000018 $d
     /tmp/ccfD6e7l.s:965    .text.mframe_disable:0000000000000000 mframe_disable
     /tmp/ccfD6e7l.s:973    .text.mframe_disable:0000000000000000 $a
     /tmp/ccfD6e7l.s:986    .text.mframe_disable:0000000000000018 $d
     /tmp/ccfD6e7l.s:993    .text.mframe_set:0000000000000000 mframe_set
     /tmp/ccfD6e7l.s:1001   .text.mframe_set:0000000000000000 $a
     /tmp/ccfD6e7l.s:1011   .text.mframe_set:000000000000000c $d
     /tmp/ccfD6e7l.s:1019   .text.mframe_schedule:0000000000000000 mframe_schedule
     /tmp/ccfD6e7l.s:1025   .text.mframe_schedule:0000000000000000 $a
     /tmp/ccfD6e7l.s:1150   .text.mframe_schedule:0000000000000114 $d
     /tmp/ccfD6e7l.s:1161   .text.mframe_reset:0000000000000000 mframe_reset
     /tmp/ccfD6e7l.s:1169   .text.mframe_reset:0000000000000000 $a
     /tmp/ccfD6e7l.s:1186   .text.mframe_reset:000000000000001c $d

UNDEFINED SYMBOLS
nb_sched_set_ul
neigh_pm_sched_set
nb_sched_set
tch_d_sched_set
tch_sched_set
tch_a_sched_set
l1s
__umodsi3
tdma_schedule_set
