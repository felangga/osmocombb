   1              		.file	"prim_freq.c"
   9              	.Ltext0:
  10              		.global	freq_sched_set
  11              		.section	.rodata
  12              		.align	2
  15              	freq_sched_set:
  16 0000 00000000 		.word	l1s_freq_cmd
  17 0004 01       		.byte	1
  18 0005 00       		.byte	0
  19 0006 0000     		.space	2
  20 0008 FDFF     		.short	-3
  21 000a 0000     		.short	0
  22 000c 00000000 		.word	tdma_end_set
  23 0010 00       		.byte	0
  24 0011 00       		.byte	0
  25 0012 00000000 		.space	6
  25      0000
  26              		.section	.rodata.str1.4,"aMS",%progbits,1
  27              		.align	2
  28              	.LC0:
  29 0000 52656163 		.ascii	"Reached starting time, altering frequency set\000"
  29      68656420 
  29      73746172 
  29      74696E67 
  29      2074696D 
  30              		.section	.text.l1s_freq_cmd,"ax",%progbits
  31              		.align	2
  33              	l1s_freq_cmd:
  34              	.LFB67:
  35              		.file 1 "layer1/prim_freq.c"
   1:layer1/prim_freq.c **** /* Layer 1 Frequency redefinition at "starting time" */
   2:layer1/prim_freq.c **** 
   3:layer1/prim_freq.c **** /* (C) 2010 by Andreas Eversverg <jolly@eversberg.eu>
   4:layer1/prim_freq.c ****  *
   5:layer1/prim_freq.c ****  * All Rights Reserved
   6:layer1/prim_freq.c ****  *
   7:layer1/prim_freq.c ****  * This program is free software; you can redistribute it and/or modify
   8:layer1/prim_freq.c ****  * it under the terms of the GNU General Public License as published by
   9:layer1/prim_freq.c ****  * the Free Software Foundation; either version 2 of the License, or
  10:layer1/prim_freq.c ****  * (at your option) any later version.
  11:layer1/prim_freq.c ****  *
  12:layer1/prim_freq.c ****  * This program is distributed in the hope that it will be useful,
  13:layer1/prim_freq.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:layer1/prim_freq.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:layer1/prim_freq.c ****  * GNU General Public License for more details.
  16:layer1/prim_freq.c ****  *
  17:layer1/prim_freq.c ****  * You should have received a copy of the GNU General Public License along
  18:layer1/prim_freq.c ****  * with this program; if not, write to the Free Software Foundation, Inc.,
  19:layer1/prim_freq.c ****  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  20:layer1/prim_freq.c ****  *
  21:layer1/prim_freq.c ****  */
  22:layer1/prim_freq.c **** 
  23:layer1/prim_freq.c **** #include <stdint.h>
  24:layer1/prim_freq.c **** #include <stdio.h>
  25:layer1/prim_freq.c **** #include <string.h>
  26:layer1/prim_freq.c **** #include <stdlib.h>
  27:layer1/prim_freq.c **** #include <inttypes.h>
  28:layer1/prim_freq.c **** #include <defines.h>
  29:layer1/prim_freq.c **** #include <debug.h>
  30:layer1/prim_freq.c **** #include <memory.h>
  31:layer1/prim_freq.c **** #include <byteorder.h>
  32:layer1/prim_freq.c **** #include <osmocom/gsm/gsm_utils.h>
  33:layer1/prim_freq.c **** #include <osmocom/core/msgb.h>
  34:layer1/prim_freq.c **** #include <calypso/dsp_api.h>
  35:layer1/prim_freq.c **** #include <calypso/irq.h>
  36:layer1/prim_freq.c **** #include <calypso/tpu.h>
  37:layer1/prim_freq.c **** #include <calypso/tsp.h>
  38:layer1/prim_freq.c **** #include <calypso/dsp.h>
  39:layer1/prim_freq.c **** #include <calypso/timer.h>
  40:layer1/prim_freq.c **** #include <comm/sercomm.h>
  41:layer1/prim_freq.c **** #include <asm/system.h>
  42:layer1/prim_freq.c **** 
  43:layer1/prim_freq.c **** #include <layer1/sync.h>
  44:layer1/prim_freq.c **** #include <layer1/async.h>
  45:layer1/prim_freq.c **** #include <layer1/tdma_sched.h>
  46:layer1/prim_freq.c **** #include <layer1/tpu_window.h>
  47:layer1/prim_freq.c **** #include <layer1/l23_api.h>
  48:layer1/prim_freq.c **** #include <layer1/sched_gsmtime.h>
  49:layer1/prim_freq.c **** 
  50:layer1/prim_freq.c **** #include <l1ctl_proto.h>
  51:layer1/prim_freq.c **** 
  52:layer1/prim_freq.c **** /* if the "starting time" is reached, use frequencies "after time" */
  53:layer1/prim_freq.c **** static int l1s_freq_cmd(__unused uint8_t p1, __unused uint8_t p2, __unused uint16_t p3)
  54:layer1/prim_freq.c **** {
  36              		.loc 1 54 0
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              	.LVL0:
  40 0000 04E02DE5 		str	lr, [sp, #-4]!
  41              	.LCFI0:
  55:layer1/prim_freq.c **** 	putchart('F');
  56:layer1/prim_freq.c **** 
  57:layer1/prim_freq.c **** 	printf("Reached starting time, altering frequency set\n");
  42              		.loc 1 57 0
  43 0004 3C009FE5 		ldr	r0, .L6
  44              	.LVL1:
  45 0008 FEFFFFEB 		bl	puts
  46              	.LVL2:
  58:layer1/prim_freq.c **** 
  59:layer1/prim_freq.c **** 	l1s.dedicated.tsc = l1s.dedicated.st_tsc;
  47              		.loc 1 59 0
  48 000c 38309FE5 		ldr	r3, .L6+4
  60:layer1/prim_freq.c **** 	l1s.dedicated.h = l1s.dedicated.st_h;
  49              		.loc 1 60 0
  50 0010 9ACBD3E5 		ldrb	ip, [r3, #2970]	@ zero_extendqisi2
  51              		.loc 1 59 0
  52 0014 980BD3E5 		ldrb	r0, [r3, #2968]	@ zero_extendqisi2
  61:layer1/prim_freq.c **** 	if (l1s.dedicated.h)
  53              		.loc 1 61 0
  54 0018 00005CE3 		cmp	ip, #0
  55              		.loc 1 60 0
  56 001c 13CBC3E5 		strb	ip, [r3, #2835]
  57 0020 28C09FE5 		ldr	ip, .L6+8
  58              		.loc 1 59 0
  59 0024 110BC3E5 		strb	r0, [r3, #2833]
  62:layer1/prim_freq.c **** 		memcpy(&l1s.dedicated.h1, &l1s.dedicated.st_h1,
  63:layer1/prim_freq.c **** 			sizeof(l1s.dedicated.h1));
  64:layer1/prim_freq.c **** 	else
  65:layer1/prim_freq.c **** 		memcpy(&l1s.dedicated.h0, &l1s.dedicated.st_h0,
  60              		.loc 1 65 0
  61 0028 88309C05 		ldreq	r3, [ip, #136]
  62              		.loc 1 62 0
  63 002c 20109FE5 		ldr	r1, .L6+12
  64 0030 8420A0E3 		mov	r2, #132
  65 0034 0C00A0E1 		mov	r0, ip
  66              		.loc 1 65 0
  67 0038 00308C05 		streq	r3, [ip, #0]
  68              		.loc 1 61 0
  69              		.loc 1 62 0
  70 003c FEFFFF1B 		blne	memcpy
  71              	.L4:
  66:layer1/prim_freq.c **** 			sizeof(l1s.dedicated.h0));
  67:layer1/prim_freq.c **** 
  68:layer1/prim_freq.c **** 	return 0;
  69:layer1/prim_freq.c **** }
  72              		.loc 1 69 0
  73 0040 0000A0E3 		mov	r0, #0
  74 0044 04F09DE4 		ldr	pc, [sp], #4
  75              	.L7:
  76              		.align	2
  77              	.L6:
  78 0048 00000000 		.word	.LC0
  79 004c 00000000 		.word	l1s
  80 0050 140B0000 		.word	l1s+2836
  81 0054 9C0B0000 		.word	l1s+2972
  82              	.LFE67:
  84              		.global	__umodsi3
  85              		.section	.rodata.str1.4
  86 002e 0000     		.align	2
  87              	.LC1:
  88 0030 53636865 		.ascii	"Scheduling frequency change at fn=%lu, currently fn"
  88      64756C69 
  88      6E672066 
  88      72657175 
  88      656E6379 
  89 0063 3D256C75 		.ascii	"=%lu\012\000"
  89      0A00
  90 0069 000000   		.section	.text.l1a_freq_req,"ax",%progbits
  91              		.align	2
  92              		.global	l1a_freq_req
  94              	l1a_freq_req:
  95              	.LFB68:
  70:layer1/prim_freq.c **** 
  71:layer1/prim_freq.c **** /* sched set for frequency change */
  72:layer1/prim_freq.c **** const struct tdma_sched_item freq_sched_set[] = {
  73:layer1/prim_freq.c **** 	SCHED_ITEM(l1s_freq_cmd, -3, 1, 0),
  74:layer1/prim_freq.c **** 	SCHED_END_SET()
  75:layer1/prim_freq.c **** };
  76:layer1/prim_freq.c **** 
  77:layer1/prim_freq.c **** /* request a frequency change at the given frame number
  78:layer1/prim_freq.c ****  * Note: The fn_sched parameter must be in range 0..42431. */
  79:layer1/prim_freq.c **** void l1a_freq_req(uint32_t fn_sched)
  80:layer1/prim_freq.c **** {
  96              		.loc 1 80 0
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              	.LVL3:
 100 0000 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
 101              	.LCFI1:
  81:layer1/prim_freq.c **** 	int32_t diff;
  82:layer1/prim_freq.c **** 	unsigned long flags;
  83:layer1/prim_freq.c **** 
  84:layer1/prim_freq.c **** 	/* We must check here, if the time already elapsed.
  85:layer1/prim_freq.c **** 	 * This is required, because we may have an undefined delay between
  86:layer1/prim_freq.c **** 	 * layer 1 and layer 3.
  87:layer1/prim_freq.c **** 	 */
  88:layer1/prim_freq.c **** 	diff = fn_sched - (l1s.current_time.fn % 42432);
 102              		.loc 1 88 0
 103 0004 A0309FE5 		ldr	r3, .L17
 104 0008 005093E5 		ldr	r5, [r3, #0]
 105              		.loc 1 80 0
 106 000c 0040A0E1 		mov	r4, r0
 107              		.loc 1 88 0
 108 0010 98109FE5 		ldr	r1, .L17+4
 109 0014 0500A0E1 		mov	r0, r5
 110              	.LVL4:
 111 0018 FEFFFFEB 		bl	__umodsi3
  89:layer1/prim_freq.c **** 	if (diff < 0)
 112              		.loc 1 89 0
 113 001c 004054E0 		subs	r4, r4, r0
 114              	.LVL5:
  90:layer1/prim_freq.c **** 		diff += 42432;
 115              		.loc 1 90 0
 116 0020 A54C8442 		addmi	r4, r4, #42240
  91:layer1/prim_freq.c **** 	/* note: 5 is used to give scheduler some time */
  92:layer1/prim_freq.c **** 	if (diff == 5 || diff >= 32024) {
 117              		.loc 1 92 0
 118 0024 88309FE5 		ldr	r3, .L17+8
 119              		.loc 1 90 0
 120 0028 C0408442 		addmi	r4, r4, #192
 121              		.loc 1 92 0
 122 002c 030054E1 		cmp	r4, r3
 123 0030 0030A0D3 		movle	r3, #0
 124 0034 0130A0C3 		movgt	r3, #1
 125 0038 050054E3 		cmp	r4, #5
 126 003c 0360A011 		movne	r6, r3
 127 0040 01608303 		orreq	r6, r3, #1
  93:layer1/prim_freq.c **** 		l1s_freq_cmd(0, 0, 0);
 128              		.loc 1 93 0
 129 0044 0000A0E3 		mov	r0, #0
 130              		.loc 1 92 0
 131 0048 000056E3 		cmp	r6, #0
  94:layer1/prim_freq.c **** 		return;
  95:layer1/prim_freq.c **** 	}
  96:layer1/prim_freq.c **** 
  97:layer1/prim_freq.c **** 	/* calculate (full range) frame number */
  98:layer1/prim_freq.c **** 	fn_sched = l1s.current_time.fn + diff;
  99:layer1/prim_freq.c **** 	if (fn_sched >= GSM_MAX_FN)
 100:layer1/prim_freq.c **** 		fn_sched -= GSM_MAX_FN;
 101:layer1/prim_freq.c **** 	printf("Scheduling frequency change at fn=%"PRIu32", currently fn=%"PRIu32"\n",
 132              		.loc 1 101 0
 133 004c 0520A0E1 		mov	r2, r5
 134              		.loc 1 93 0
 135 0050 0010A0E1 		mov	r1, r0
 136              		.loc 1 98 0
 137 0054 045085E0 		add	r5, r5, r4
 138              	.LVL6:
 139              		.loc 1 92 0
 140 0058 1800000A 		beq	.L11
 141              		.loc 1 93 0
 142 005c 0020A0E1 		mov	r2, r0
 102:layer1/prim_freq.c **** 		fn_sched, l1s.current_time.fn);
 103:layer1/prim_freq.c **** 
 104:layer1/prim_freq.c **** 	local_firq_save(flags);
 105:layer1/prim_freq.c **** 	sched_gsmtime(freq_sched_set, fn_sched, 0);
 106:layer1/prim_freq.c **** 	local_irq_restore(flags);
 107:layer1/prim_freq.c **** }
 143              		.loc 1 107 0
 144 0060 7040BDE8 		ldmfd	sp!, {r4, r5, r6, lr}
 145              		.loc 1 93 0
 146 0064 FEFFFFEA 		b	l1s_freq_cmd
 147              	.L11:
 148              		.loc 1 99 0
 149 0068 48309FE5 		ldr	r3, .L17+12
 150 006c 030055E1 		cmp	r5, r3
 151              		.loc 1 100 0
 152 0070 FF548582 		addhi	r5, r5, #-16777216
 153 0074 D6588582 		addhi	r5, r5, #14024704
 154 0078 095A8582 		addhi	r5, r5, #36864
 155              		.loc 1 101 0
 156 007c 0510A0E1 		mov	r1, r5
 157 0080 34009FE5 		ldr	r0, .L17+16
 158 0084 FEFFFFEB 		bl	printf
 159              	.LBB2:
 160              		.loc 1 104 0
 161 0088 00400FE1 		mrs	r4, cpsr		@ local_firq_save
 162 008c C03084E3 		orr	r3, r4, #0xC0
 163 0090 03F021E1 		msr	cpsr_c, r3
 164              	.LVL7:
 165              	.LBE2:
 166              		.loc 1 105 0
 167 0094 24009FE5 		ldr	r0, .L17+20
 168 0098 0510A0E1 		mov	r1, r5
 169 009c 0620A0E1 		mov	r2, r6
 170 00a0 FEFFFFEB 		bl	sched_gsmtime
 171              	.LVL8:
 172              		.loc 1 106 0
 173 00a4 04F021E1 		msr	cpsr_c, r4		@ local_irq_restore
 174              	
 175              		.loc 1 107 0
 176 00a8 7080BDE8 		ldmfd	sp!, {r4, r5, r6, pc}
 177              	.L18:
 178              		.align	2
 179              	.L17:
 180 00ac 00000000 		.word	l1s
 181 00b0 C0A50000 		.word	42432
 182 00b4 177D0000 		.word	32023
 183 00b8 FF6F2900 		.word	2715647
 184 00bc 30000000 		.word	.LC1
 185 00c0 00000000 		.word	freq_sched_set
 186              	.LFE68:
 246              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 prim_freq.c
     /tmp/cc17sj24.s:15     .rodata:0000000000000000 freq_sched_set
     /tmp/cc17sj24.s:16     .rodata:0000000000000000 $d
     /tmp/cc17sj24.s:33     .text.l1s_freq_cmd:0000000000000000 l1s_freq_cmd
     /tmp/cc17sj24.s:40     .text.l1s_freq_cmd:0000000000000000 $a
     /tmp/cc17sj24.s:78     .text.l1s_freq_cmd:0000000000000048 $d
     /tmp/cc17sj24.s:94     .text.l1a_freq_req:0000000000000000 l1a_freq_req
     /tmp/cc17sj24.s:100    .text.l1a_freq_req:0000000000000000 $a
     /tmp/cc17sj24.s:180    .text.l1a_freq_req:00000000000000ac $d

UNDEFINED SYMBOLS
tdma_end_set
puts
memcpy
l1s
__umodsi3
printf
sched_gsmtime
