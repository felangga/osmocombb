   1              		.file	"buzzer.c"
   9              	.Ltext0:
  10              		.section	.text.buzzer_mode_pwt,"ax",%progbits
  11              		.align	2
  12              		.global	buzzer_mode_pwt
  14              	buzzer_mode_pwt:
  15              	.LFB2:
  16              		.file 1 "calypso/buzzer.c"
   1:calypso/buzzer.c **** /* Calypso DBB internal PWT (Pulse Width / T) Buzzer Driver */
   2:calypso/buzzer.c **** 
   3:calypso/buzzer.c **** /* (C) 2010 by Jose Pereira <onaips@gmail.com>
   4:calypso/buzzer.c ****  *
   5:calypso/buzzer.c ****  * All Rights Reserved
   6:calypso/buzzer.c ****  *
   7:calypso/buzzer.c ****  * This program is free software; you can redistribute it and/or modify
   8:calypso/buzzer.c ****  * it under the terms of the GNU General Public License as published by
   9:calypso/buzzer.c ****  * the Free Software Foundation; either version 2 of the License, or
  10:calypso/buzzer.c ****  * (at your option) any later version.
  11:calypso/buzzer.c ****  *
  12:calypso/buzzer.c ****  * This program is distributed in the hope that it will be useful,
  13:calypso/buzzer.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:calypso/buzzer.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:calypso/buzzer.c ****  * GNU General Public License for more details.
  16:calypso/buzzer.c ****  *
  17:calypso/buzzer.c ****  * You should have received a copy of the GNU General Public License along
  18:calypso/buzzer.c ****  * with this program; if not, write to the Free Software Foundation, Inc.,
  19:calypso/buzzer.c ****  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  20:calypso/buzzer.c ****  *
  21:calypso/buzzer.c ****  */
  22:calypso/buzzer.c **** 
  23:calypso/buzzer.c **** #include <stdint.h>
  24:calypso/buzzer.c **** #include <memory.h>
  25:calypso/buzzer.c **** 
  26:calypso/buzzer.c **** #define BASE_ADDR_PWL	0xfffe8800
  27:calypso/buzzer.c **** #define PWT_REG(m)	(BASE_ADDR_PWL + (m))
  28:calypso/buzzer.c **** 
  29:calypso/buzzer.c **** #define ASIC_CONF_REG		0xfffef008
  30:calypso/buzzer.c **** #define BUZZ_LEVEL_REG		0xfffe480e
  31:calypso/buzzer.c **** 
  32:calypso/buzzer.c **** enum pwt_reg {
  33:calypso/buzzer.c **** 	FRC_REG	= 0,
  34:calypso/buzzer.c **** 	VRC_REG = 1,
  35:calypso/buzzer.c **** 	GCR_REG = 2,
  36:calypso/buzzer.c **** };
  37:calypso/buzzer.c **** 
  38:calypso/buzzer.c **** #define ASCONF_PWT_ENA	(1 << 5)
  39:calypso/buzzer.c **** 
  40:calypso/buzzer.c **** void buzzer_mode_pwt(int on)
  41:calypso/buzzer.c **** {
  17              		.loc 1 41 0
  18              		@ args = 0, pretend = 0, frame = 0
  19              		@ frame_needed = 0, uses_anonymous_args = 0
  20              		@ link register save eliminated.
  21              	.LVL0:
  42:calypso/buzzer.c **** 	uint16_t reg;
  43:calypso/buzzer.c **** 
  44:calypso/buzzer.c **** 	reg = readw(ASIC_CONF_REG);
  22              		.loc 1 44 0
  23 0000 30C09FE5 		ldr	ip, .L6
  24 0004 B030DCE1 		ldrh	r3, [ip, #0]
  45:calypso/buzzer.c **** 
  46:calypso/buzzer.c **** 	if (on) {
  25              		.loc 1 46 0
  26 0008 000050E3 		cmp	r0, #0
  27              	.LVL1:
  47:calypso/buzzer.c **** 		/* Enable pwt */
  48:calypso/buzzer.c **** 		writeb(0x01, PWT_REG(GCR_REG));
  49:calypso/buzzer.c **** 		/* Switch pin from LT to PWL */
  50:calypso/buzzer.c **** 		reg |= ASCONF_PWT_ENA;
  51:calypso/buzzer.c **** 		writew(reg, ASIC_CONF_REG);
  52:calypso/buzzer.c **** 	} else {
  53:calypso/buzzer.c **** 		/* Switch pin from PWT to BU */
  54:calypso/buzzer.c **** 		reg |= ~ASCONF_PWT_ENA;
  28              		.loc 1 54 0
  29 000c FF2C83E3 		orr	r2, r3, #65280
  30              	.LVL2:
  31              		.loc 1 50 0
  32 0010 201083E3 		orr	r1, r3, #32
  33              	.LVL3:
  34              		.loc 1 48 0
  35 0014 20309F15 		ldrne	r3, .L6+4
  36              	.LVL4:
  55:calypso/buzzer.c **** 		writew(reg, ASIC_CONF_REG);
  56:calypso/buzzer.c **** 		/* Disable pwt */
  57:calypso/buzzer.c **** 		writeb(0x00, PWT_REG(GCR_REG));
  37              		.loc 1 57 0
  38 0018 1C309F05 		ldreq	r3, .L6+4
  39              		.loc 1 54 0
  40 001c DF2082E3 		orr	r2, r2, #223
  41              		.loc 1 48 0
  42 0020 0120A013 		movne	r2, #1
  43              	.LVL5:
  44 0024 0020C315 		strneb	r2, [r3, #0]
  45              	.LVL6:
  46              		.loc 1 55 0
  47 0028 B020CC01 		streqh	r2, [ip, #0]	@ movhi
  48              		.loc 1 41 0
  49              		@ lr needed for prologue
  50              		.loc 1 51 0
  51 002c B010CC11 		strneh	r1, [ip, #0]	@ movhi
  52              		.loc 1 57 0
  53 0030 0000C305 		streqb	r0, [r3, #0]
  54 0034 1EFF2FE1 		bx	lr
  55              	.L7:
  56              		.align	2
  57              	.L6:
  58 0038 08F0FEFF 		.word	-69624
  59 003c 0288FEFF 		.word	-96254
  60              	.LFE2:
  62              		.section	.text.buzzer_volume,"ax",%progbits
  63              		.align	2
  64              		.global	buzzer_volume
  66              	buzzer_volume:
  67              	.LFB3:
  58:calypso/buzzer.c **** 	}
  59:calypso/buzzer.c **** }
  60:calypso/buzzer.c **** 
  61:calypso/buzzer.c **** void buzzer_volume(uint8_t level)
  62:calypso/buzzer.c **** {
  68              		.loc 1 62 0
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  72              	.LVL7:
  63:calypso/buzzer.c **** 
  64:calypso/buzzer.c **** 	if (readw(ASIC_CONF_REG) & ASCONF_PWT_ENA) {
  73              		.loc 1 64 0
  74 0000 30309FE5 		ldr	r3, .L15
  75 0004 B030D3E1 		ldrh	r3, [r3, #0]
  76 0008 200013E3 		tst	r3, #32
  77              		.loc 1 62 0
  78 000c FF0000E2 		and	r0, r0, #255
  65:calypso/buzzer.c **** 
  66:calypso/buzzer.c **** 	  if (level) {
  67:calypso/buzzer.c **** 		//scaling the volume as pwt only knows 0..63
  68:calypso/buzzer.c **** 		level = level >> 1;
  69:calypso/buzzer.c **** 		//if level > 0 buzzer is on
  70:calypso/buzzer.c **** 		level |= 0x01;
  71:calypso/buzzer.c **** 	  }
  72:calypso/buzzer.c **** 
  73:calypso/buzzer.c **** 	  writeb(level,PWT_REG(VRC_REG));
  74:calypso/buzzer.c **** 
  75:calypso/buzzer.c **** 	} else {
  76:calypso/buzzer.c **** 		/* we need to scale the buzz level, as the
  77:calypso/buzzer.c **** 		 * ARMIO buzz controller only knows 0..63 */
  78:calypso/buzzer.c **** 		writeb(level>>2, BUZZ_LEVEL_REG);
  79              		.loc 1 78 0
  80 0010 24309F05 		ldreq	r3, .L15+4
  81 0014 2021A0E1 		mov	r2, r0, lsr #2
  82              		.loc 1 62 0
  83              		@ lr needed for prologue
  84              		.loc 1 78 0
  85 0018 0020C305 		streqb	r2, [r3, #0]
  86              		.loc 1 64 0
  87 001c 1EFF2F01 		bxeq	lr
  88              		.loc 1 68 0
  89 0020 A030A0E1 		mov	r3, r0, lsr #1
  90              	.LVL8:
  91              		.loc 1 66 0
  92 0024 000050E3 		cmp	r0, #0
  93              		.loc 1 70 0
  94 0028 01008313 		orrne	r0, r3, #1
  95              		.loc 1 73 0
  96 002c 0C309FE5 		ldr	r3, .L15+8
  97              	.LVL9:
  98 0030 0000C3E5 		strb	r0, [r3, #0]
  99 0034 1EFF2FE1 		bx	lr
 100              	.L16:
 101              		.align	2
 102              	.L15:
 103 0038 08F0FEFF 		.word	-69624
 104 003c 0E48FEFF 		.word	-112626
 105 0040 0188FEFF 		.word	-96255
 106              	.LFE3:
 108              		.section	.text.buzzer_note,"ax",%progbits
 109              		.align	2
 110              		.global	buzzer_note
 112              	buzzer_note:
 113              	.LFB4:
  79:calypso/buzzer.c **** 	}
  80:calypso/buzzer.c **** }
  81:calypso/buzzer.c **** 
  82:calypso/buzzer.c **** void buzzer_note(uint8_t note)
  83:calypso/buzzer.c **** {
 114              		.loc 1 83 0
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118              	.LVL10:
  84:calypso/buzzer.c ****   if ( (readw(ASIC_CONF_REG) & ASCONF_PWT_ENA) )
 119              		.loc 1 84 0
 120 0000 14309FE5 		ldr	r3, .L21
 121 0004 B030D3E1 		ldrh	r3, [r3, #0]
 122 0008 200013E3 		tst	r3, #32
  85:calypso/buzzer.c ****       writeb(note,PWT_REG(FRC_REG));
 123              		.loc 1 85 0
 124 000c 0C309F15 		ldrne	r3, .L21+4
 125              		.loc 1 83 0
 126 0010 FF0000E2 		and	r0, r0, #255
 127              		@ lr needed for prologue
 128              		.loc 1 85 0
 129 0014 0000C315 		strneb	r0, [r3, #0]
 130 0018 1EFF2FE1 		bx	lr
 131              	.L22:
 132              		.align	2
 133              	.L21:
 134 001c 08F0FEFF 		.word	-69624
 135 0020 0088FEFF 		.word	-96256
 136              	.LFE4:
 179              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 buzzer.c
     /tmp/ccRuC6Ta.s:14     .text.buzzer_mode_pwt:0000000000000000 buzzer_mode_pwt
     /tmp/ccRuC6Ta.s:23     .text.buzzer_mode_pwt:0000000000000000 $a
     /tmp/ccRuC6Ta.s:58     .text.buzzer_mode_pwt:0000000000000038 $d
     /tmp/ccRuC6Ta.s:66     .text.buzzer_volume:0000000000000000 buzzer_volume
     /tmp/ccRuC6Ta.s:74     .text.buzzer_volume:0000000000000000 $a
     /tmp/ccRuC6Ta.s:103    .text.buzzer_volume:0000000000000038 $d
     /tmp/ccRuC6Ta.s:112    .text.buzzer_note:0000000000000000 buzzer_note
     /tmp/ccRuC6Ta.s:120    .text.buzzer_note:0000000000000000 $a
     /tmp/ccRuC6Ta.s:134    .text.buzzer_note:000000000000001c $d

NO UNDEFINED SYMBOLS
