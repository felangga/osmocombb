   1              		.file	"arm.c"
   9              	.Ltext0:
  10              		.section	.text.arm_enable_interrupts,"ax",%progbits
  11              		.align	2
  12              		.global	arm_enable_interrupts
  14              	arm_enable_interrupts:
  15              	.LFB2:
  16              		.file 1 "calypso/arm.c"
   1:calypso/arm.c **** 
   2:calypso/arm.c **** /* enable IRQ+FIQ interrupts */
   3:calypso/arm.c **** void arm_enable_interrupts (void)
   4:calypso/arm.c **** {
  17              		.loc 1 4 0
  18              		@ args = 0, pretend = 0, frame = 0
  19              		@ frame_needed = 0, uses_anonymous_args = 0
  20              		@ link register save eliminated.
  21              	.LVL0:
  22              		@ lr needed for prologue
   5:calypso/arm.c **** 	unsigned long temp;
   6:calypso/arm.c **** 	__asm__ __volatile__("mrs %0, cpsr\n"
  23              		.loc 1 6 0
  24 0000 00300FE1 		mrs r3, cpsr
  25 0004 C030C3E3 	bic r3, r3, #0xc0
  26 0008 03F021E1 	msr cpsr_c, r3
  27              	.LVL1:
   7:calypso/arm.c **** 			     "bic %0, %0, #0xc0\n"
   8:calypso/arm.c **** 			     "msr cpsr_c, %0"
   9:calypso/arm.c **** 			     : "=r" (temp)
  10:calypso/arm.c **** 			     :
  11:calypso/arm.c **** 			     : "memory");
  12:calypso/arm.c **** }
  28              		.loc 1 12 0
  29 000c 1EFF2FE1 		bx	lr
  30              	.LFE2:
  32              		.section	.text.arm_disable_interrupts,"ax",%progbits
  33              		.align	2
  34              		.global	arm_disable_interrupts
  36              	arm_disable_interrupts:
  37              	.LFB3:
  13:calypso/arm.c **** 
  14:calypso/arm.c **** /* disable IRQ/FIQ interrupts
  15:calypso/arm.c ****  * returns true if interrupts had been enabled before we disabled them */
  16:calypso/arm.c **** int arm_disable_interrupts(void)
  17:calypso/arm.c **** {
  38              		.loc 1 17 0
  39              		@ args = 0, pretend = 0, frame = 0
  40              		@ frame_needed = 0, uses_anonymous_args = 0
  41              		@ link register save eliminated.
  42              	.LVL2:
  43              		@ lr needed for prologue
  18:calypso/arm.c **** 	unsigned long old,temp;
  19:calypso/arm.c **** 	__asm__ __volatile__("mrs %0, cpsr\n"
  44              		.loc 1 19 0
  45 0000 00000FE1 		mrs r0, cpsr
  46 0004 C03080E3 	orr r3, r0, #0xc0
  47 0008 03F021E1 	msr cpsr_c, r3
  48              	.LVL3:
  49 000c A003A0E1 		mov	r0, r0, lsr #7
  50              	.LVL4:
  51 0010 010020E2 		eor	r0, r0, #1
  20:calypso/arm.c **** 			     "orr %1, %0, #0xc0\n"
  21:calypso/arm.c **** 			     "msr cpsr_c, %1"
  22:calypso/arm.c **** 			     : "=r" (old), "=r" (temp)
  23:calypso/arm.c **** 			     :
  24:calypso/arm.c **** 			     : "memory");
  25:calypso/arm.c **** 	return (old & 0x80) == 0;
  26:calypso/arm.c **** }
  52              		.loc 1 26 0
  53 0014 010000E2 		and	r0, r0, #1
  54 0018 1EFF2FE1 		bx	lr
  55              	.LFE3:
  89              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm.c
     /tmp/cc3MNIe8.s:14     .text.arm_enable_interrupts:0000000000000000 arm_enable_interrupts
     /tmp/cc3MNIe8.s:24     .text.arm_enable_interrupts:0000000000000000 $a
     /tmp/cc3MNIe8.s:36     .text.arm_disable_interrupts:0000000000000000 arm_disable_interrupts
     /tmp/cc3MNIe8.s:45     .text.arm_disable_interrupts:0000000000000000 $a

NO UNDEFINED SYMBOLS
