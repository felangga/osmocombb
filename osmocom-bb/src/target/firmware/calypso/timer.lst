   1              		.file	"timer.c"
   9              	.Ltext0:
  10              		.section	.rodata.str1.4,"aMS",%progbits,1
  11              		.align	2
  12              	.LC0:
  13 0000 556E6B6E 		.ascii	"Unknown timer %u\012\000"
  13      6F776E20 
  13      74696D65 
  13      72202575 
  13      0A00
  14              		.section	.text.hwtimer_enable,"ax",%progbits
  15              		.align	2
  16              		.global	hwtimer_enable
  18              	hwtimer_enable:
  19              	.LFB2:
  20              		.file 1 "calypso/timer.c"
   1:calypso/timer.c **** /* Calypso DBB internal Timer Driver */
   2:calypso/timer.c **** 
   3:calypso/timer.c **** /* (C) 2010 by Harald Welte <laforge@gnumonks.org>
   4:calypso/timer.c ****  *
   5:calypso/timer.c ****  * All Rights Reserved
   6:calypso/timer.c ****  *
   7:calypso/timer.c ****  * This program is free software; you can redistribute it and/or modify
   8:calypso/timer.c ****  * it under the terms of the GNU General Public License as published by
   9:calypso/timer.c ****  * the Free Software Foundation; either version 2 of the License, or
  10:calypso/timer.c ****  * (at your option) any later version.
  11:calypso/timer.c ****  *
  12:calypso/timer.c ****  * This program is distributed in the hope that it will be useful,
  13:calypso/timer.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:calypso/timer.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:calypso/timer.c ****  * GNU General Public License for more details.
  16:calypso/timer.c ****  *
  17:calypso/timer.c ****  * You should have received a copy of the GNU General Public License along
  18:calypso/timer.c ****  * with this program; if not, write to the Free Software Foundation, Inc.,
  19:calypso/timer.c ****  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  20:calypso/timer.c ****  *
  21:calypso/timer.c ****  */
  22:calypso/timer.c **** 
  23:calypso/timer.c **** #include <stdio.h>
  24:calypso/timer.c **** #include <memory.h>
  25:calypso/timer.c **** #include <stdint.h>
  26:calypso/timer.c **** 
  27:calypso/timer.c **** #include <defines.h>
  28:calypso/timer.c **** 
  29:calypso/timer.c **** #include <calypso/timer.h>
  30:calypso/timer.c **** #include <calypso/irq.h>
  31:calypso/timer.c **** 
  32:calypso/timer.c **** #define BASE_ADDR_TIMER		0xfffe3800
  33:calypso/timer.c **** #define TIMER2_OFFSET		0x3000
  34:calypso/timer.c **** 
  35:calypso/timer.c **** #define TIMER_REG(n, m)		(((n)-1) ? (BASE_ADDR_TIMER + TIMER2_OFFSET + (m)) : (BASE_ADDR_TIMER + (m
  36:calypso/timer.c **** 
  37:calypso/timer.c **** enum timer_reg {
  38:calypso/timer.c **** 	CNTL_TIMER	= 0x00,
  39:calypso/timer.c **** 	LOAD_TIMER	= 0x02,
  40:calypso/timer.c **** 	READ_TIMER	= 0x04,
  41:calypso/timer.c **** };
  42:calypso/timer.c **** 
  43:calypso/timer.c **** enum timer_ctl {
  44:calypso/timer.c **** 	CNTL_START		= (1 << 0),
  45:calypso/timer.c **** 	CNTL_AUTO_RELOAD	= (1 << 1),
  46:calypso/timer.c **** 	CNTL_CLOCK_ENABLE	= (1 << 5),
  47:calypso/timer.c **** };
  48:calypso/timer.c **** 
  49:calypso/timer.c **** /* Regular Timers (1 and 2) */
  50:calypso/timer.c **** 
  51:calypso/timer.c **** void hwtimer_enable(int num, int on)
  52:calypso/timer.c **** {
  21              		.loc 1 52 0
  22              		@ args = 0, pretend = 0, frame = 0
  23              		@ frame_needed = 0, uses_anonymous_args = 0
  24              	.LVL0:
  25 0000 00C0A0E1 		mov	ip, r0
  53:calypso/timer.c **** 	uint8_t ctl;
  54:calypso/timer.c **** 
  55:calypso/timer.c **** 	if (num < 1 || num > 2) {
  26              		.loc 1 55 0
  27 0004 01304CE2 		sub	r3, ip, #1
  28 0008 010053E3 		cmp	r3, #1
  29              		.loc 1 52 0
  30 000c 04E02DE5 		str	lr, [sp, #-4]!
  31              	.LCFI0:
  56:calypso/timer.c **** 		printf("Unknown timer %u\n", num);
  32              		.loc 1 56 0
  33 0010 4C009FE5 		ldr	r0, .L15
  34              	.LVL1:
  35              		.loc 1 52 0
  36 0014 01E0A0E1 		mov	lr, r1
  37              		.loc 1 56 0
  38 0018 0C10A0E1 		mov	r1, ip
  39              	.LVL2:
  40              		.loc 1 55 0
  41 001c 0800009A 		bls	.L2
  42              	.LVL3:
  43              	.LVL4:
  57:calypso/timer.c **** 		return;
  58:calypso/timer.c **** 	}
  59:calypso/timer.c **** 
  60:calypso/timer.c **** 	ctl = readb(TIMER_REG(num, CNTL_TIMER));
  61:calypso/timer.c **** 	if (on)
  62:calypso/timer.c **** 		ctl |= CNTL_START|CNTL_CLOCK_ENABLE;
  63:calypso/timer.c **** 	else
  64:calypso/timer.c **** 		ctl &= ~CNTL_START;
  65:calypso/timer.c **** 	writeb(ctl, TIMER_REG(num, CNTL_TIMER));
  66:calypso/timer.c **** }
  44              		.loc 1 66 0
  45 0020 04E09DE4 		ldr	lr, [sp], #4
  46              		.loc 1 56 0
  47 0024 FEFFFFEA 		b	printf
  48              	.LVL5:
  49              	.L2:
  50              		.loc 1 60 0
  51 0028 38209FE5 		ldr	r2, .L15+4
  52 002c 38309FE5 		ldr	r3, .L15+8
  53 0030 01005CE3 		cmp	ip, #1
  54 0034 0230A011 		movne	r3, r2
  55 0038 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  56              		.loc 1 61 0
  57 003c 00005EE3 		cmp	lr, #0
  58              		.loc 1 64 0
  59 0040 FE1003E2 		and	r1, r3, #254
  60              	.LVL6:
  61              		.loc 1 65 0
  62 0044 1C209FE5 		ldr	r2, .L15+4
  63              		.loc 1 60 0
  64 0048 FF3003E2 		and	r3, r3, #255
  65              	.LVL7:
  66              		.loc 1 62 0
  67 004c 21108313 		orrne	r1, r3, #33
  68              		.loc 1 65 0
  69 0050 14309FE5 		ldr	r3, .L15+8
  70              	.LVL8:
  71 0054 01005CE3 		cmp	ip, #1
  72 0058 0230A011 		movne	r3, r2
  73 005c 0010C3E5 		strb	r1, [r3, #0]
  74              		.loc 1 66 0
  75 0060 04F09DE4 		ldr	pc, [sp], #4
  76              	.L16:
  77              		.align	2
  78              	.L15:
  79 0064 00000000 		.word	.LC0
  80 0068 0068FEFF 		.word	-104448
  81 006c 0038FEFF 		.word	-116736
  82              	.LFE2:
  84              		.section	.text.hwtimer_config,"ax",%progbits
  85              		.align	2
  86              		.global	hwtimer_config
  88              	hwtimer_config:
  89              	.LFB3:
  67:calypso/timer.c **** 
  68:calypso/timer.c **** void hwtimer_config(int num, uint8_t pre_scale, int auto_reload)
  69:calypso/timer.c **** {
  90              		.loc 1 69 0
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94              	.LVL9:
  70:calypso/timer.c **** 	uint8_t ctl;
  71:calypso/timer.c **** 
  72:calypso/timer.c **** 	ctl = (pre_scale & 0x7) << 2;
  95              		.loc 1 72 0
  96 0000 071001E2 		and	r1, r1, #7
  97              	.LVL10:
  73:calypso/timer.c **** 	if (auto_reload)
  98              		.loc 1 73 0
  99 0004 000052E3 		cmp	r2, #0
 100              		.loc 1 72 0
 101 0008 0111A0E1 		mov	r1, r1, asl #2
 102              	.LVL11:
  74:calypso/timer.c **** 		ctl |= CNTL_AUTO_RELOAD;
  75:calypso/timer.c **** 
  76:calypso/timer.c **** 	writeb(ctl, TIMER_REG(num, CNTL_TIMER));
 103              		.loc 1 76 0
 104 000c 14209FE5 		ldr	r2, .L24
 105              	.LVL12:
 106              		.loc 1 74 0
 107 0010 02108113 		orrne	r1, r1, #2
 108              		.loc 1 76 0
 109 0014 10309FE5 		ldr	r3, .L24+4
 110 0018 010050E3 		cmp	r0, #1
 111 001c 0230A011 		movne	r3, r2
 112              		.loc 1 69 0
 113              		@ lr needed for prologue
 114              		.loc 1 76 0
 115 0020 0010C3E5 		strb	r1, [r3, #0]
  77:calypso/timer.c **** }
 116              		.loc 1 77 0
 117 0024 1EFF2FE1 		bx	lr
 118              	.L25:
 119              		.align	2
 120              	.L24:
 121 0028 0068FEFF 		.word	-104448
 122 002c 0038FEFF 		.word	-116736
 123              	.LFE3:
 125              		.section	.text.hwtimer_load,"ax",%progbits
 126              		.align	2
 127              		.global	hwtimer_load
 129              	hwtimer_load:
 130              	.LFB4:
  78:calypso/timer.c **** 
  79:calypso/timer.c **** void hwtimer_load(int num, uint16_t val)
  80:calypso/timer.c **** {
 131              		.loc 1 80 0
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 135              	.LVL13:
  81:calypso/timer.c **** 	writew(val, TIMER_REG(num, LOAD_TIMER));
 136              		.loc 1 81 0
 137 0000 18209FE5 		ldr	r2, .L31
 138 0004 18309FE5 		ldr	r3, .L31+4
 139              		.loc 1 80 0
 140 0008 0118A0E1 		mov	r1, r1, asl #16
 141              	.LVL14:
 142              		.loc 1 81 0
 143 000c 010050E3 		cmp	r0, #1
 144 0010 0230A011 		movne	r3, r2
 145              		.loc 1 80 0
 146 0014 2118A0E1 		mov	r1, r1, lsr #16
 147              	.LVL15:
 148              		@ lr needed for prologue
 149              		.loc 1 81 0
 150 0018 B010C3E1 		strh	r1, [r3, #0]	@ movhi
  82:calypso/timer.c **** }
 151              		.loc 1 82 0
 152 001c 1EFF2FE1 		bx	lr
 153              	.L32:
 154              		.align	2
 155              	.L31:
 156 0020 0268FEFF 		.word	-104446
 157 0024 0238FEFF 		.word	-116734
 158              	.LFE4:
 160              		.section	.text.hwtimer_read,"ax",%progbits
 161              		.align	2
 162              		.global	hwtimer_read
 164              	hwtimer_read:
 165              	.LFB5:
  83:calypso/timer.c **** 
  84:calypso/timer.c **** uint16_t hwtimer_read(int num)
  85:calypso/timer.c **** {
 166              		.loc 1 85 0
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 170              	.LVL16:
  86:calypso/timer.c **** 	uint8_t ctl = readb(TIMER_REG(num, CNTL_TIMER));
 171              		.loc 1 86 0
 172 0000 3C209FE5 		ldr	r2, .L44
 173 0004 3C309FE5 		ldr	r3, .L44+4
 174 0008 010050E3 		cmp	r0, #1
 175 000c 0230A011 		movne	r3, r2
 176 0010 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  87:calypso/timer.c **** 
  88:calypso/timer.c **** 	/* somehow a read results in an abort */
  89:calypso/timer.c **** 	if ((ctl & (CNTL_START|CNTL_CLOCK_ENABLE)) != (CNTL_START|CNTL_CLOCK_ENABLE))
 177              		.loc 1 89 0
 178 0014 213003E2 		and	r3, r3, #33
 179 0018 210053E3 		cmp	r3, #33
 180              		.loc 1 85 0
 181              		@ lr needed for prologue
 182              		.loc 1 89 0
 183 001c 28209FE5 		ldr	r2, .L44+8
 184 0020 0D00001A 		bne	.L39
  90:calypso/timer.c **** 		return 0xFFFF;
  91:calypso/timer.c **** 	return readw(TIMER_REG(num, READ_TIMER));
 185              		.loc 1 91 0
 186 0024 24209FE5 		ldr	r2, .L44+12
 187 0028 24309FE5 		ldr	r3, .L44+16
 188 002c 010050E3 		cmp	r0, #1
 189 0030 0230A011 		movne	r3, r2
 190 0034 B030D3E1 		ldrh	r3, [r3, #0]
 191 0038 0320A0E1 		mov	r2, r3
 192              	.L39:
  92:calypso/timer.c **** }
 193              		.loc 1 92 0
 194 003c 0200A0E1 		mov	r0, r2
 195              	.LVL17:
 196 0040 1EFF2FE1 		bx	lr
 197              	.L45:
 198              		.align	2
 199              	.L44:
 200 0044 0068FEFF 		.word	-104448
 201 0048 0038FEFF 		.word	-116736
 202 004c FFFF0000 		.word	65535
 203 0050 0468FEFF 		.word	-104444
 204 0054 0438FEFF 		.word	-116732
 205              	.LFE5:
 207              		.section	.text.hwtimer_init,"ax",%progbits
 208              		.align	2
 209              		.global	hwtimer_init
 211              	hwtimer_init:
 212              	.LFB6:
  93:calypso/timer.c **** 
  94:calypso/timer.c **** void hwtimer_init(void)
  95:calypso/timer.c **** {
 213              		.loc 1 95 0
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 217              	.LVL18:
  96:calypso/timer.c **** 	writeb(CNTL_CLOCK_ENABLE, TIMER_REG(1, CNTL_TIMER));
 218              		.loc 1 96 0
 219 0000 10209FE5 		ldr	r2, .L48
 220 0004 2030A0E3 		mov	r3, #32
 221 0008 0030C2E5 		strb	r3, [r2, #0]
  97:calypso/timer.c **** 	writeb(CNTL_CLOCK_ENABLE, TIMER_REG(2, CNTL_TIMER));
 222              		.loc 1 97 0
 223 000c 032A82E2 		add	r2, r2, #12288
 224              		.loc 1 95 0
 225              		@ lr needed for prologue
 226              		.loc 1 97 0
 227 0010 0030C2E5 		strb	r3, [r2, #0]
  98:calypso/timer.c **** }
 228              		.loc 1 98 0
 229 0014 1EFF2FE1 		bx	lr
 230              	.L49:
 231              		.align	2
 232              	.L48:
 233 0018 0038FEFF 		.word	-116736
 234              	.LFE6:
 236              		.section	.rodata.str1.4
 237 0012 0000     		.align	2
 238              	.LC1:
 239 0014 3D3E2057 		.ascii	"=> WATCHDOG\012\000"
 239      41544348 
 239      444F470A 
 239      00
 240 0021 000000   		.section	.text.wdog_irq,"ax",%progbits
 241              		.align	2
 243              	wdog_irq:
 244              	.LFB7:
  99:calypso/timer.c **** 
 100:calypso/timer.c **** /* Watchdog Timer */
 101:calypso/timer.c **** 
 102:calypso/timer.c **** #define BASE_ADDR_WDOG		0xfffff800
 103:calypso/timer.c **** #define WDOG_REG(m)		(BASE_ADDR_WDOG + m)
 104:calypso/timer.c **** 
 105:calypso/timer.c **** enum wdog_reg {
 106:calypso/timer.c **** 	WD_CNTL_TIMER	= CNTL_TIMER,
 107:calypso/timer.c **** 	WD_LOAD_TIMER	= LOAD_TIMER,
 108:calypso/timer.c **** 	WD_READ_TIMER	= 0x02,
 109:calypso/timer.c **** 	WD_MODE		= 0x04,
 110:calypso/timer.c **** };
 111:calypso/timer.c **** 
 112:calypso/timer.c **** enum wdog_ctl {
 113:calypso/timer.c **** 	WD_CTL_START = (1 << 7),
 114:calypso/timer.c **** 	WD_CTL_AUTO_RELOAD = (1 << 8)
 115:calypso/timer.c **** };
 116:calypso/timer.c **** 
 117:calypso/timer.c **** enum wdog_mode {
 118:calypso/timer.c **** 	WD_MODE_DIS_ARM = 0xF5,
 119:calypso/timer.c **** 	WD_MODE_DIS_CONFIRM = 0xA0,
 120:calypso/timer.c **** 	WD_MODE_ENABLE = (1 << 15)
 121:calypso/timer.c **** };
 122:calypso/timer.c **** 
 123:calypso/timer.c **** #define WD_CTL_PRESCALE(value) (((value)&0x07) << 9)
 124:calypso/timer.c **** 
 125:calypso/timer.c **** static void wdog_irq(__unused enum irq_nr nr)
 126:calypso/timer.c **** {
 245              		.loc 1 126 0
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249              	.LVL19:
 127:calypso/timer.c **** 	puts("=> WATCHDOG\n");
 250              		.loc 1 127 0
 251 0000 00009FE5 		ldr	r0, .L52
 252              	.LVL20:
 253              		.loc 1 126 0
 254              		@ lr needed for prologue
 128:calypso/timer.c **** }
 255              		.loc 1 128 0
 256              		.loc 1 127 0
 257 0004 FEFFFFEA 		b	puts
 258              	.L53:
 259              		.align	2
 260              	.L52:
 261 0008 14000000 		.word	.LC1
 262              	.LFE7:
 264              		.section	.text.wdog_enable,"ax",%progbits
 265              		.align	2
 266              		.global	wdog_enable
 268              	wdog_enable:
 269              	.LFB8:
 129:calypso/timer.c **** 
 130:calypso/timer.c **** void wdog_enable(int on)
 131:calypso/timer.c **** {
 270              		.loc 1 131 0
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              	.LVL21:
 132:calypso/timer.c **** 	if (on) {
 274              		.loc 1 132 0
 275 0000 000050E3 		cmp	r0, #0
 133:calypso/timer.c **** 		irq_config(IRQ_WATCHDOG, 0, 0, 0);
 276              		.loc 1 133 0
 277 0004 0000A0E3 		mov	r0, #0
 278              	.LVL22:
 279              		.loc 1 131 0
 280 0008 04E02DE5 		str	lr, [sp, #-4]!
 281              	.LCFI1:
 134:calypso/timer.c **** 		irq_register_handler(IRQ_WATCHDOG, &wdog_irq);
 135:calypso/timer.c **** 		irq_enable(IRQ_WATCHDOG);
 136:calypso/timer.c **** 		writew(WD_MODE_ENABLE, WDOG_REG(WD_MODE));
 137:calypso/timer.c **** 	} else {
 138:calypso/timer.c **** 		writew(WD_MODE_DIS_ARM, WDOG_REG(WD_MODE));
 282              		.loc 1 138 0
 283 000c 48C09FE5 		ldr	ip, .L59
 284              		.loc 1 133 0
 285 0010 0020A0E1 		mov	r2, r0
 286 0014 0030A0E1 		mov	r3, r0
 287 0018 0010A0E1 		mov	r1, r0
 288              		.loc 1 132 0
 289 001c 1000000A 		beq	.L55
 290              		.loc 1 133 0
 291 0020 FEFFFFEB 		bl	irq_config
 292              		.loc 1 134 0
 293 0024 0000A0E3 		mov	r0, #0
 294 0028 30109FE5 		ldr	r1, .L59+4
 295 002c FEFFFFEB 		bl	irq_register_handler
 296              		.loc 1 135 0
 297 0030 0000A0E3 		mov	r0, #0
 298 0034 FEFFFFEB 		bl	irq_enable
 299              		.loc 1 136 0
 300 0038 1C309FE5 		ldr	r3, .L59
 301 003c 0229A0E3 		mov	r2, #32768
 302 0040 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 303 0044 04F09DE4 		ldr	pc, [sp], #4
 304              	.L55:
 305              		.loc 1 138 0
 306 0048 F530A0E3 		mov	r3, #245	@ movhi
 307 004c B030CCE1 		strh	r3, [ip, #0]	@ movhi
 139:calypso/timer.c **** 		writew(WD_MODE_DIS_CONFIRM, WDOG_REG(WD_MODE));
 308              		.loc 1 139 0
 309 0050 A030A0E3 		mov	r3, #160	@ movhi
 310 0054 B030CCE1 		strh	r3, [ip, #0]	@ movhi
 311 0058 04F09DE4 		ldr	pc, [sp], #4
 312              	.L60:
 313              		.align	2
 314              	.L59:
 315 005c 04F8FFFF 		.word	-2044
 316 0060 00000000 		.word	wdog_irq
 317              	.LFE8:
 319              		.section	.text.wdog_reset,"ax",%progbits
 320              		.align	2
 321              		.global	wdog_reset
 323              	wdog_reset:
 324              	.LFB9:
 140:calypso/timer.c **** 	}
 141:calypso/timer.c **** }
 142:calypso/timer.c **** 
 143:calypso/timer.c **** void wdog_reset(void)
 144:calypso/timer.c **** {
 325              		.loc 1 144 0
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              		@ link register save eliminated.
 329              	.LVL23:
 145:calypso/timer.c **** #if 0
 146:calypso/timer.c **** 	// XXX: this is supposed to reset immediately but does not seem to
 147:calypso/timer.c **** 	writew(0xF5, WDOG_REG(WD_MODE));
 148:calypso/timer.c **** 	writew(0xFF, WDOG_REG(WD_MODE));
 149:calypso/timer.c **** #else
 150:calypso/timer.c **** 	// enable watchdog
 151:calypso/timer.c **** 	writew(WD_MODE_ENABLE, WDOG_REG(WD_MODE));
 152:calypso/timer.c **** 	// force expiration
 153:calypso/timer.c **** 	writew(0x0000, WDOG_REG(WD_LOAD_TIMER));
 330              		.loc 1 153 0
 331 0000 18009FE5 		ldr	r0, .L63
 332              		.loc 1 151 0
 333 0004 18309FE5 		ldr	r3, .L63+4
 334              		.loc 1 153 0
 335 0008 0010A0E3 		mov	r1, #0
 336              		.loc 1 151 0
 337 000c 0229A0E3 		mov	r2, #32768
 338 0010 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 339              		.loc 1 144 0
 340              		@ lr needed for prologue
 341              		.loc 1 153 0
 342 0014 B010C0E1 		strh	r1, [r0, #0]	@ movhi
 154:calypso/timer.c **** 	writew(0x0000, WDOG_REG(WD_LOAD_TIMER));
 343              		.loc 1 154 0
 344 0018 B010C0E1 		strh	r1, [r0, #0]	@ movhi
 155:calypso/timer.c **** #endif
 156:calypso/timer.c **** }
 345              		.loc 1 156 0
 346 001c 1EFF2FE1 		bx	lr
 347              	.L64:
 348              		.align	2
 349              	.L63:
 350 0020 02F8FFFF 		.word	-2046
 351 0024 04F8FFFF 		.word	-2044
 352              	.LFE9:
 448              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 timer.c
     /tmp/ccKJL1ZI.s:18     .text.hwtimer_enable:0000000000000000 hwtimer_enable
     /tmp/ccKJL1ZI.s:25     .text.hwtimer_enable:0000000000000000 $a
     /tmp/ccKJL1ZI.s:79     .text.hwtimer_enable:0000000000000064 $d
     /tmp/ccKJL1ZI.s:88     .text.hwtimer_config:0000000000000000 hwtimer_config
     /tmp/ccKJL1ZI.s:96     .text.hwtimer_config:0000000000000000 $a
     /tmp/ccKJL1ZI.s:121    .text.hwtimer_config:0000000000000028 $d
     /tmp/ccKJL1ZI.s:129    .text.hwtimer_load:0000000000000000 hwtimer_load
     /tmp/ccKJL1ZI.s:137    .text.hwtimer_load:0000000000000000 $a
     /tmp/ccKJL1ZI.s:156    .text.hwtimer_load:0000000000000020 $d
     /tmp/ccKJL1ZI.s:164    .text.hwtimer_read:0000000000000000 hwtimer_read
     /tmp/ccKJL1ZI.s:172    .text.hwtimer_read:0000000000000000 $a
     /tmp/ccKJL1ZI.s:200    .text.hwtimer_read:0000000000000044 $d
     /tmp/ccKJL1ZI.s:211    .text.hwtimer_init:0000000000000000 hwtimer_init
     /tmp/ccKJL1ZI.s:219    .text.hwtimer_init:0000000000000000 $a
     /tmp/ccKJL1ZI.s:233    .text.hwtimer_init:0000000000000018 $d
     /tmp/ccKJL1ZI.s:243    .text.wdog_irq:0000000000000000 wdog_irq
     /tmp/ccKJL1ZI.s:251    .text.wdog_irq:0000000000000000 $a
     /tmp/ccKJL1ZI.s:261    .text.wdog_irq:0000000000000008 $d
     /tmp/ccKJL1ZI.s:268    .text.wdog_enable:0000000000000000 wdog_enable
     /tmp/ccKJL1ZI.s:275    .text.wdog_enable:0000000000000000 $a
     /tmp/ccKJL1ZI.s:315    .text.wdog_enable:000000000000005c $d
     /tmp/ccKJL1ZI.s:323    .text.wdog_reset:0000000000000000 wdog_reset
     /tmp/ccKJL1ZI.s:331    .text.wdog_reset:0000000000000000 $a
     /tmp/ccKJL1ZI.s:350    .text.wdog_reset:0000000000000020 $d

UNDEFINED SYMBOLS
printf
puts
irq_config
irq_register_handler
irq_enable
