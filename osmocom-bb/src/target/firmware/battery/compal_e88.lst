   1              		.file	"compal_e88.c"
   9              	.Ltext0:
  10              		.data
  11              		.align	2
  14              	battery_compal88_timer:
  15 0000 00000000 		.space	16
  15      00000000 
  15      00000000 
  15      00000000 
  16 0010 00000000 		.word	battery_compal_e88_timer_cb
  17 0014 00000000 		.word	battery_compal88_timer
  18              		.bss
  19              		.align	2
  20              	bat_compal_e88_madc_stat:
  21 0000 00000000 		.space	4
  22              		.section	.rodata.str1.4,"aMS",%progbits,1
  23              		.align	2
  24              	.LC0:
  25 0000 4F666600 		.ascii	"Off\000"
  26              		.align	2
  27              	.LC1:
  28 0004 436F6E73 		.ascii	"Constant Current\000"
  28      74616E74 
  28      20437572 
  28      72656E74 
  28      00
  29 0015 000000   		.align	2
  30              	.LC2:
  31 0018 436F6E73 		.ascii	"Constant Voltage\000"
  31      74616E74 
  31      20566F6C 
  31      74616765 
  31      00
  32 0029 000000   		.align	2
  33              	.LC3:
  34 002c 42617474 		.ascii	"Battery Failure\000"
  34      65727920 
  34      4661696C 
  34      75726500 
  35              		.data
  36              		.align	2
  39              	bat_compal_e88_chg_state_names:
  40 0018 00000000 		.word	.LC0
  41 001c 04000000 		.word	.LC1
  42 0020 18000000 		.word	.LC2
  43 0024 2C000000 		.word	.LC3
  44              		.section	.rodata.str1.4
  45              		.align	2
  46              	.LC4:
  47 003c 1B5B3334 		.ascii	"\033[34;1mCHARGER: %s --> %s.\033[0m\012\000"
  47      3B316D43 
  47      48415247 
  47      45523A20 
  47      2573202D 
  48              		.align	2
  49              	.LC5:
  50 005c 42434943 		.ascii	"BCICTL2 is 0x%03x, CHGREG=%d\012\000"
  50      544C3220 
  50      69732030 
  50      78253033 
  50      782C2043 
  51              		.section	.text.bat_compal_e88_goto_state,"ax",%progbits
  52              		.align	2
  54              	bat_compal_e88_goto_state:
  55              	.LFB15:
  56              		.file 1 "battery/compal_e88.c"
   1:battery/compal_e88.c **** /* Battery management for compal_e88 */
   2:battery/compal_e88.c **** 
   3:battery/compal_e88.c **** /* (C) 2010 by Christian Vogel <vogelchr@vogel.cx>
   4:battery/compal_e88.c ****  *
   5:battery/compal_e88.c ****  * All Rights Reserved
   6:battery/compal_e88.c ****  *
   7:battery/compal_e88.c ****  * This program is free software; you can redistribute it and/or modify
   8:battery/compal_e88.c ****  * it under the terms of the GNU General Public License as published by
   9:battery/compal_e88.c ****  * the Free Software Foundation; either version 2 of the License, or
  10:battery/compal_e88.c ****  * (at your option) any later version.
  11:battery/compal_e88.c ****  *
  12:battery/compal_e88.c ****  * This program is distributed in the hope that it will be useful,
  13:battery/compal_e88.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:battery/compal_e88.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:battery/compal_e88.c ****  * GNU General Public License for more details.
  16:battery/compal_e88.c ****  *
  17:battery/compal_e88.c ****  * You should have received a copy of the GNU General Public License along
  18:battery/compal_e88.c ****  * with this program; if not, write to the Free Software Foundation, Inc.,
  19:battery/compal_e88.c ****  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  20:battery/compal_e88.c ****  *
  21:battery/compal_e88.c ****  */
  22:battery/compal_e88.c **** 
  23:battery/compal_e88.c **** /*
  24:battery/compal_e88.c ****  * ___C123 (compal e88) very simplified diagram of charging circuitry___
  25:battery/compal_e88.c ****  *
  26:battery/compal_e88.c ****  *                           ICTL
  27:battery/compal_e88.c ****  *                            |
  28:battery/compal_e88.c ****  *                            v
  29:battery/compal_e88.c ****  *  Charger -> OVP -------> P-Mosfet --->[0.15 Ohm]---> Battery
  30:battery/compal_e88.c ****  *             (NCP345,  |             |            |
  31:battery/compal_e88.c ****  *              6.85V)   v             v            v
  32:battery/compal_e88.c ****  *                      VCHG          VCCS        VBAT &
  33:battery/compal_e88.c ****  *                                                VBATS
  34:battery/compal_e88.c ****  *
  35:battery/compal_e88.c ****  * Inputs to IOTA:
  36:battery/compal_e88.c ****  *  VCHG:        senses voltage on the charger input
  37:battery/compal_e88.c ****  *  VCSS/VBATS:  to difference amplifier, to measure charge current
  38:battery/compal_e88.c ****  *  VBAT:        senses voltage on the battery terminal
  39:battery/compal_e88.c ****  * Outputs from IOTA:
  40:battery/compal_e88.c ****  *  ICTL:        Control signal for the switching mosfet
  41:battery/compal_e88.c ****  *
  42:battery/compal_e88.c ****  */
  43:battery/compal_e88.c **** 
  44:battery/compal_e88.c **** #include <battery/battery.h>
  45:battery/compal_e88.c **** #include <battery/compal_e88.h>
  46:battery/compal_e88.c **** 
  47:battery/compal_e88.c **** #include <stdint.h>
  48:battery/compal_e88.c **** #include <abb/twl3025.h>
  49:battery/compal_e88.c **** #include <comm/timer.h>
  50:battery/compal_e88.c **** #include <stdio.h>
  51:battery/compal_e88.c **** 
  52:battery/compal_e88.c **** /* ADC calibration, scale is LSB/uV or LSB/uA, physical unit is mV or mA */
  53:battery/compal_e88.c **** #define ADC_TO_PHYSICAL(adc,scale) (((adc)*(scale)+500)/1000)
  54:battery/compal_e88.c **** #define PHYSICAL_TO_ADC(phy,scale) (((phy)*1000+(scale)/2)/(scale))
  55:battery/compal_e88.c **** 
  56:battery/compal_e88.c **** /* conversion factors for internal IOTA battery charging/sensing circuitry */
  57:battery/compal_e88.c **** #define VREF_LSB_uV 1709  /* VREF = 1.75V    --> 1.709 mV/LSB */
  58:battery/compal_e88.c **** #define VBAT_LSB_uV 6836  /* VBAT = 7.0 V FS --> 6.836 mV/LSB */
  59:battery/compal_e88.c **** #define VCHG_LSB_uV 8545  /* VCHG = 8.75V FS --> 8.545 mV/LSB */
  60:battery/compal_e88.c **** #define ICHG_LSB_uA 854   /* ICHG = 875mA FS --> 0.854 mA/LSB */
  61:battery/compal_e88.c **** 
  62:battery/compal_e88.c **** /* battery is considered full/empty at these thresholds... */
  63:battery/compal_e88.c **** #define VBAT_full   PHYSICAL_TO_ADC(4000,VBAT_LSB_uV)
  64:battery/compal_e88.c **** #define VBAT_empty  PHYSICAL_TO_ADC(3200,VBAT_LSB_uV)
  65:battery/compal_e88.c **** 
  66:battery/compal_e88.c **** /* we declare overvoltage at this point... */
  67:battery/compal_e88.c **** #define VBAT_fail   PHYSICAL_TO_ADC(4250,VBAT_LSB_uV)
  68:battery/compal_e88.c **** 
  69:battery/compal_e88.c **** /* DAC to ADC offsets in CC mode with my C123 
  70:battery/compal_e88.c ****    IMEI 358317015976471, P329431014
  71:battery/compal_e88.c **** 
  72:battery/compal_e88.c ****    I/mA DAC     ADC
  73:battery/compal_e88.c ****    ----------------
  74:battery/compal_e88.c ****    100	117	108
  75:battery/compal_e88.c ****    150	176	168
  76:battery/compal_e88.c ****    200	234	227
  77:battery/compal_e88.c ****    250	293	291
  78:battery/compal_e88.c ****    300	351	349
  79:battery/compal_e88.c ****    350	410	410
  80:battery/compal_e88.c **** */
  81:battery/compal_e88.c **** 
  82:battery/compal_e88.c **** #define CHGDAC_GAIN   967  /* times 0.001 */
  83:battery/compal_e88.c **** #define CHGDAC_OFFS    13
  84:battery/compal_e88.c **** 
  85:battery/compal_e88.c **** /* convert ADC reading to DAC value, according to calibration values
  86:battery/compal_e88.c ****    given above */
  87:battery/compal_e88.c **** #define CHGDAC_ADJ(x)   (CHGDAC_GAIN*(x)/1000+CHGDAC_OFFS)
  88:battery/compal_e88.c **** 
  89:battery/compal_e88.c **** /* charging current in DAC LSBs, same ref. and # of bits, but keep
  90:battery/compal_e88.c ****    the correction specified above in mind!  */
  91:battery/compal_e88.c **** 
  92:battery/compal_e88.c **** #define ICHG_set    CHGDAC_ADJ(PHYSICAL_TO_ADC(200,ICHG_LSB_uA))
  93:battery/compal_e88.c **** #define VCHG_set    CHGDAC_ADJ(VBAT_full)
  94:battery/compal_e88.c **** 
  95:battery/compal_e88.c **** struct battery_info battery_info;	/* global battery info */
  96:battery/compal_e88.c **** uint16_t bat_compal_e88_madc[MADC_NUM_CHANNELS];	/* MADC measurements */
  97:battery/compal_e88.c **** 
  98:battery/compal_e88.c **** static const int BATTERY_TIMER_DELAY=5000; /* 5000ms for control loop */
  99:battery/compal_e88.c **** static const int ADC_TIMER_DELAY=100;      /*  100ms for ADC conversion */
 100:battery/compal_e88.c **** 
 101:battery/compal_e88.c **** /* thermistor sense current, turn it up to eleven! */
 102:battery/compal_e88.c **** #define  TH_SENS               (THSENS0|THSENS1|THSENS2|THEN)
 103:battery/compal_e88.c **** #define  BATTERY_ALL_SENSE     (TH_SENS|MESBAT|TYPEN)
 104:battery/compal_e88.c **** 
 105:battery/compal_e88.c **** /*
 106:battery/compal_e88.c ****  * charger modes state machine
 107:battery/compal_e88.c ****  *
 108:battery/compal_e88.c ****  *    +------------------+-------------------+
 109:battery/compal_e88.c ****  *    |                  |                   | lost AC power
 110:battery/compal_e88.c ****  *    |                  ^                   ^
 111:battery/compal_e88.c ****  *    V  on AC power     |    @VBAT_full     |
 112:battery/compal_e88.c ****  * +-----+        +------------+ -----> +------------+
 113:battery/compal_e88.c ****  * | OFF | -----> | CONST_CURR |        | CONST_VOLT |
 114:battery/compal_e88.c ****  * +-----+        +------------+        +------------+
 115:battery/compal_e88.c ****  *    ^          ^        |                   |
 116:battery/compal_e88.c ****  *    |         /failure  v                   v failure
 117:battery/compal_e88.c ****  * +---------+ /  gone    |                   | condition
 118:battery/compal_e88.c ****  * | FAILURE | <----------+-------------------+
 119:battery/compal_e88.c ****  * +---------+
 120:battery/compal_e88.c ****  *
 121:battery/compal_e88.c ****  *  Failure modes currently detected:
 122:battery/compal_e88.c ****  *          + high battery voltage
 123:battery/compal_e88.c ****  *  Failure modes TODO:
 124:battery/compal_e88.c ****  *          + high battery temperature
 125:battery/compal_e88.c ****  */
 126:battery/compal_e88.c **** enum bat_compal_e88_chg_state {
 127:battery/compal_e88.c **** 	CHARG_OFF,
 128:battery/compal_e88.c **** 	CHARG_CONST_CURR,
 129:battery/compal_e88.c **** 	CHARG_CONST_VOLT,
 130:battery/compal_e88.c **** 	CHARG_FAIL
 131:battery/compal_e88.c **** };
 132:battery/compal_e88.c **** static enum bat_compal_e88_chg_state bat_compal_e88_chg_state;
 133:battery/compal_e88.c **** 
 134:battery/compal_e88.c **** static const char *bat_compal_e88_chg_state_names[]={
 135:battery/compal_e88.c **** 	"Off",
 136:battery/compal_e88.c **** 	"Constant Current",
 137:battery/compal_e88.c **** 	"Constant Voltage",
 138:battery/compal_e88.c **** 	"Battery Failure"
 139:battery/compal_e88.c **** };
 140:battery/compal_e88.c **** 
 141:battery/compal_e88.c **** static void
 142:battery/compal_e88.c **** bat_compal_e88_goto_state(enum bat_compal_e88_chg_state newstate){
  57              		.loc 1 142 0
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              	.LVL0:
  61 0000 30402DE9 		stmfd	sp!, {r4, r5, lr}
  62              	.LCFI0:
 143:battery/compal_e88.c **** 
 144:battery/compal_e88.c **** 	if(bat_compal_e88_chg_state == newstate) /* already there? */
  63              		.loc 1 144 0
  64 0004 08319FE5 		ldr	r3, .L11
  65 0008 003093E5 		ldr	r3, [r3, #0]
  66              		.loc 1 142 0
  67 000c 0050A0E1 		mov	r5, r0
  68              		.loc 1 144 0
  69 0010 050053E1 		cmp	r3, r5
 145:battery/compal_e88.c **** 		return;
 146:battery/compal_e88.c **** 
 147:battery/compal_e88.c **** 	printf("\033[34;1mCHARGER: %s --> %s.\033[0m\n",
  70              		.loc 1 147 0
  71 0014 FC109FE5 		ldr	r1, .L11+4
  72 0018 FC009FE5 		ldr	r0, .L11+8
  73              	.LVL1:
  74              		.loc 1 144 0
  75 001c 3080BD08 		ldmeqfd	sp!, {r4, r5, pc}
  76              		.loc 1 147 0
  77 0020 052191E7 		ldr	r2, [r1, r5, asl #2]
  78 0024 031191E7 		ldr	r1, [r1, r3, asl #2]
  79 0028 FEFFFFEB 		bl	printf
 148:battery/compal_e88.c **** 			bat_compal_e88_chg_state_names[bat_compal_e88_chg_state],
 149:battery/compal_e88.c **** 			bat_compal_e88_chg_state_names[newstate]);
 150:battery/compal_e88.c **** 
 151:battery/compal_e88.c **** 	/* update user visible flags, set registers */
 152:battery/compal_e88.c **** 	switch(newstate){
  80              		.loc 1 152 0
  81 002c 010055E3 		cmp	r5, #1
 153:battery/compal_e88.c **** 	case CHARG_CONST_CURR:
 154:battery/compal_e88.c **** 		battery_info.flags &= ~BATTERY_FAILURE;
 155:battery/compal_e88.c **** 		battery_info.flags |= (BATTERY_CHG_ENABLED|
  82              		.loc 1 155 0
  83 0030 E8209FE5 		ldr	r2, .L11+12
 156:battery/compal_e88.c **** 						BATTERY_CHARGING);
 157:battery/compal_e88.c **** 		twl3025_reg_write(BCICTL2,0);
  84              		.loc 1 157 0
  85 0034 1D00A0E3 		mov	r0, #29
  86 0038 0010A0E3 		mov	r1, #0
  87              		.loc 1 152 0
  88 003c 1100000A 		beq	.L5
  89 0040 020055E3 		cmp	r5, #2
  90 0044 3000001A 		bne	.L9
  91 0048 1F0000EA 		b	.L6
  92              	.L5:
  93              		.loc 1 155 0
  94 004c 003092E5 		ldr	r3, [r2, #0]
  95 0050 0830C3E3 		bic	r3, r3, #8
  96 0054 063083E3 		orr	r3, r3, #6
  97 0058 003082E5 		str	r3, [r2, #0]
  98              		.loc 1 157 0
  99 005c FEFFFFEB 		bl	twl3025_reg_write
 158:battery/compal_e88.c **** 		twl3025_reg_write(CHGREG,0);
 100              		.loc 1 158 0
 101 0060 1900A0E3 		mov	r0, #25
 102 0064 0010A0E3 		mov	r1, #0
 103 0068 FEFFFFEB 		bl	twl3025_reg_write
 159:battery/compal_e88.c **** 		twl3025_reg_write(BCICTL2,CHEN|LEDC|CHIV);
 104              		.loc 1 159 0
 105 006c 1D00A0E3 		mov	r0, #29
 106 0070 2310A0E3 		mov	r1, #35
 107 0074 FEFFFFEB 		bl	twl3025_reg_write
 160:battery/compal_e88.c **** 		twl3025_reg_write(CHGREG,ICHG_set);
 108              		.loc 1 160 0
 109 0078 1900A0E3 		mov	r0, #25
 110 007c EF10A0E3 		mov	r1, #239
 111 0080 360000EA 		b	.L10
 112              	.L6:
 161:battery/compal_e88.c **** 
 162:battery/compal_e88.c **** 		break;
 163:battery/compal_e88.c **** 
 164:battery/compal_e88.c **** 	case CHARG_CONST_VOLT:
 165:battery/compal_e88.c **** 		battery_info.flags &= ~( BATTERY_CHARGING |
 166:battery/compal_e88.c **** 						BATTERY_FAILURE );
 167:battery/compal_e88.c **** 		battery_info.flags |= BATTERY_CHG_ENABLED;
 113              		.loc 1 167 0
 114 0084 94209FE5 		ldr	r2, .L11+12
 115 0088 003092E5 		ldr	r3, [r2, #0]
 116 008c 0C30C3E3 		bic	r3, r3, #12
 117 0090 023083E3 		orr	r3, r3, #2
 118 0094 003082E5 		str	r3, [r2, #0]
 168:battery/compal_e88.c **** 		twl3025_reg_write(BCICTL2,0);
 119              		.loc 1 168 0
 120 0098 1D00A0E3 		mov	r0, #29
 121 009c 0010A0E3 		mov	r1, #0
 122 00a0 FEFFFFEB 		bl	twl3025_reg_write
 169:battery/compal_e88.c **** 		twl3025_reg_write(CHGREG,0);
 123              		.loc 1 169 0
 124 00a4 1900A0E3 		mov	r0, #25
 125 00a8 0010A0E3 		mov	r1, #0
 126 00ac FEFFFFEB 		bl	twl3025_reg_write
 170:battery/compal_e88.c **** 		twl3025_reg_write(BCICTL2,CHEN|LEDC);
 127              		.loc 1 170 0
 128 00b0 1D00A0E3 		mov	r0, #29
 129 00b4 2110A0E3 		mov	r1, #33
 130 00b8 FEFFFFEB 		bl	twl3025_reg_write
 171:battery/compal_e88.c **** 		twl3025_reg_write(CHGREG,VCHG_set);
 131              		.loc 1 171 0
 132 00bc 60109FE5 		ldr	r1, .L11+16
 133 00c0 1900A0E3 		mov	r0, #25
 134 00c4 360000EA 		b	.L10
 135              	.L9:
 172:battery/compal_e88.c **** 		break;
 173:battery/compal_e88.c **** 
 174:battery/compal_e88.c **** 	case CHARG_FAIL:
 175:battery/compal_e88.c **** 	case CHARG_OFF:
 176:battery/compal_e88.c **** 	default:
 177:battery/compal_e88.c **** 		battery_info.flags &= ~( BATTERY_CHG_ENABLED |
 136              		.loc 1 177 0
 137 00c8 003092E5 		ldr	r3, [r2, #0]
 138 00cc 0E30C3E3 		bic	r3, r3, #14
 139 00d0 003082E5 		str	r3, [r2, #0]
 178:battery/compal_e88.c **** 			BATTERY_CHARGING | BATTERY_FAILURE );
 179:battery/compal_e88.c **** 		twl3025_reg_write(BCICTL2,0); /* turn off charger */
 140              		.loc 1 179 0
 141 00d4 FEFFFFEB 		bl	twl3025_reg_write
 180:battery/compal_e88.c **** 		twl3025_reg_write(CHGREG,0);
 142              		.loc 1 180 0
 143 00d8 0010A0E3 		mov	r1, #0
 144 00dc 1900A0E3 		mov	r0, #25
 145              	.L10:
 146 00e0 FEFFFFEB 		bl	twl3025_reg_write
 181:battery/compal_e88.c **** 		break;
 182:battery/compal_e88.c **** 	}
 183:battery/compal_e88.c **** 
 184:battery/compal_e88.c **** 	printf("BCICTL2 is 0x%03x, CHGREG=%d\n",
 147              		.loc 1 184 0
 148 00e4 1D00A0E3 		mov	r0, #29
 149 00e8 FEFFFFEB 		bl	twl3025_reg_read
 150 00ec 0040A0E1 		mov	r4, r0
 151 00f0 1900A0E3 		mov	r0, #25
 152 00f4 FEFFFFEB 		bl	twl3025_reg_read
 153 00f8 0410A0E1 		mov	r1, r4
 154 00fc 0020A0E1 		mov	r2, r0
 155 0100 20009FE5 		ldr	r0, .L11+20
 156 0104 FEFFFFEB 		bl	printf
 185:battery/compal_e88.c **** 			twl3025_reg_read(BCICTL2),
 186:battery/compal_e88.c **** 			twl3025_reg_read(CHGREG));
 187:battery/compal_e88.c **** 
 188:battery/compal_e88.c **** 	bat_compal_e88_chg_state = newstate;
 157              		.loc 1 188 0
 158 0108 04309FE5 		ldr	r3, .L11
 159 010c 005083E5 		str	r5, [r3, #0]
 160 0110 3080BDE8 		ldmfd	sp!, {r4, r5, pc}
 161              	.L12:
 162              		.align	2
 163              	.L11:
 164 0114 04000000 		.word	bat_compal_e88_chg_state
 165 0118 18000000 		.word	bat_compal_e88_chg_state_names
 166 011c 3C000000 		.word	.LC4
 167 0120 00000000 		.word	battery_info
 168 0124 42020000 		.word	578
 169 0128 5C000000 		.word	.LC5
 170              	.LFE15:
 172              		.global	__divsi3
 173              		.section	.rodata.str1.4
 174 007a 0000     		.align	2
 175              	.LC6:
 176 007c 4241542D 		.ascii	"BAT-ADC: \000"
 176      4144433A 
 176      2000
 177 0086 0000     		.align	2
 178              	.LC7:
 179 0088 25336420 		.ascii	"%3d \000"
 179      00
 180 008d 000000   		.align	2
 181              	.LC8:
 182 0090 25630A00 		.ascii	"%c\012\000"
 183              		.align	2
 184              	.LC9:
 185 0094 09436861 		.ascii	"\011Charger at %u mV.\012\000"
 185      72676572 
 185      20617420 
 185      2575206D 
 185      562E0A00 
 186              		.align	2
 187              	.LC10:
 188 00a8 09426174 		.ascii	"\011Battery at %u mV.\012\000"
 188      74657279 
 188      20617420 
 188      2575206D 
 188      562E0A00 
 189              		.align	2
 190              	.LC11:
 191 00bc 09436861 		.ascii	"\011Charging at %u mA.\012\000"
 191      7267696E 
 191      67206174 
 191      20257520 
 191      6D412E0A 
 192 00d1 000000   		.align	2
 193              	.LC12:
 194 00d4 09426174 		.ascii	"\011Battery capacity is %u%%.\012\000"
 194      74657279 
 194      20636170 
 194      61636974 
 194      79206973 
 195              		.align	2
 196              	.LC13:
 197 00f0 09426174 		.ascii	"\011Battery range is %d..%d mV.\012\000"
 197      74657279 
 197      2072616E 
 197      67652069 
 197      73202564 
 198 010e 0000     		.align	2
 199              	.LC14:
 200 0110 09426174 		.ascii	"\011Battery full at %d LSB .. full at %d LSB\012\000"
 200      74657279 
 200      2066756C 
 200      6C206174 
 200      20256420 
 201 013b 00       		.align	2
 202              	.LC15:
 203 013c 09436861 		.ascii	"\011Charging at %d LSB (%d mA).\012\000"
 203      7267696E 
 203      67206174 
 203      20256420 
 203      4C534220 
 204 015a 0000     		.align	2
 205              	.LC16:
 206 015c 09424349 		.ascii	"\011BCICTL2=0x%03x\012\000"
 206      43544C32 
 206      3D307825 
 206      3033780A 
 206      00
 207 016d 000000   		.align	2
 208              	.LC17:
 209 0170 09626174 		.ascii	"\011battery-info.flags=0x%08x\012\000"
 209      74657279 
 209      2D696E66 
 209      6F2E666C 
 209      6167733D 
 210              		.align	2
 211              	.LC18:
 212 018c 09626174 		.ascii	"\011bat_compal_e88_chg_state=%d\012\000"
 212      5F636F6D 
 212      70616C5F 
 212      6538385F 
 212      6368675F 
 213 01aa 0000     		.align	2
 214              	.LC19:
 215 01ac 1B5B3334 		.ascii	"\033[34;1mCHARGER: external voltage connected!\033["
 215      3B316D43 
 215      48415247 
 215      45523A20 
 215      65787465 
 216 01d9 306D0A00 		.ascii	"0m\012\000"
 217 01dd 000000   		.align	2
 218              	.LC20:
 219 01e0 1B5B3334 		.ascii	"\033[34;1mCHARGER: external voltage disconnected!\033"
 219      3B316D43 
 219      48415247 
 219      45523A20 
 219      65787465 
 220 020f 5B306D0A 		.ascii	"[0m\012\000"
 220      00
 221              		.section	.text.battery_compal_e88_timer_cb,"ax",%progbits
 222              		.align	2
 224              	battery_compal_e88_timer_cb:
 225              	.LFB20:
 189:battery/compal_e88.c **** }
 190:battery/compal_e88.c **** 
 191:battery/compal_e88.c **** static void
 192:battery/compal_e88.c **** bat_compal_e88_chg_control(){
 193:battery/compal_e88.c **** 	/* with AC power disconnected, always go to off state */
 194:battery/compal_e88.c **** 	if(!(battery_info.flags & BATTERY_CHG_CONNECTED)){
 195:battery/compal_e88.c **** 		bat_compal_e88_goto_state(CHARG_OFF);
 196:battery/compal_e88.c **** 		return;
 197:battery/compal_e88.c **** 	}
 198:battery/compal_e88.c **** 
 199:battery/compal_e88.c **** 	/* if failure condition is detected, always goto failure state */
 200:battery/compal_e88.c **** 	if(bat_compal_e88_madc[MADC_VBAT] > VBAT_fail){
 201:battery/compal_e88.c **** 		bat_compal_e88_goto_state(CHARG_FAIL);
 202:battery/compal_e88.c **** 		return;
 203:battery/compal_e88.c **** 	}
 204:battery/compal_e88.c **** 
 205:battery/compal_e88.c **** 	/* now AC power is present and battery is not over failure
 206:battery/compal_e88.c **** 	   thresholds */
 207:battery/compal_e88.c **** 	switch(bat_compal_e88_chg_state){
 208:battery/compal_e88.c **** 	case CHARG_OFF:
 209:battery/compal_e88.c **** 		if(bat_compal_e88_madc[MADC_VBAT] >= VBAT_full)
 210:battery/compal_e88.c **** 			bat_compal_e88_goto_state(CHARG_CONST_VOLT);
 211:battery/compal_e88.c **** 		else
 212:battery/compal_e88.c **** 			bat_compal_e88_goto_state(CHARG_CONST_CURR);
 213:battery/compal_e88.c **** 		break;
 214:battery/compal_e88.c **** 	case CHARG_CONST_CURR:
 215:battery/compal_e88.c **** 		if(bat_compal_e88_madc[MADC_VBAT] >= VBAT_full)
 216:battery/compal_e88.c **** 			bat_compal_e88_goto_state(CHARG_CONST_VOLT);
 217:battery/compal_e88.c **** 		break;
 218:battery/compal_e88.c **** 	case CHARG_CONST_VOLT:
 219:battery/compal_e88.c **** 		break;
 220:battery/compal_e88.c **** 	default:
 221:battery/compal_e88.c **** 	case CHARG_FAIL:
 222:battery/compal_e88.c **** 		if(bat_compal_e88_madc[MADC_VBAT] < VBAT_full)
 223:battery/compal_e88.c **** 			bat_compal_e88_goto_state(CHARG_CONST_CURR);
 224:battery/compal_e88.c **** 		break;
 225:battery/compal_e88.c **** 	}
 226:battery/compal_e88.c **** }
 227:battery/compal_e88.c **** 
 228:battery/compal_e88.c **** /*
 229:battery/compal_e88.c ****  * Charging voltage connection - state machine, remembers
 230:battery/compal_e88.c ****  * state in battery_info.flags.
 231:battery/compal_e88.c ****  *
 232:battery/compal_e88.c ****  *                     VCHG > VCHG_thr_on
 233:battery/compal_e88.c ****  * +-----------------+ ------------------> +---------------+
 234:battery/compal_e88.c ****  * | ! CHG_CONNECTED |                     | CHG_CONNECTED |
 235:battery/compal_e88.c ****  * +-----------------+ <------------------ +---------------+
 236:battery/compal_e88.c ****  *                     VCHG < VCHG_thr_off
 237:battery/compal_e88.c ****  */
 238:battery/compal_e88.c **** static void
 239:battery/compal_e88.c **** bat_compal_e88_chk_ac_presence(){
 240:battery/compal_e88.c **** 	int vrpcsts = twl3025_reg_read(VRPCSTS);
 241:battery/compal_e88.c **** 
 242:battery/compal_e88.c **** 	/* check for presence of charging voltage */
 243:battery/compal_e88.c **** 	if(!(battery_info.flags & BATTERY_CHG_CONNECTED)){
 244:battery/compal_e88.c **** 		if(vrpcsts & CHGPRES){
 245:battery/compal_e88.c **** 			puts("\033[34;1mCHARGER: external voltage connected!\033[0m\n");
 246:battery/compal_e88.c **** 			battery_info.flags |= BATTERY_CHG_CONNECTED;
 247:battery/compal_e88.c **** 
 248:battery/compal_e88.c **** 			/* always keep ADC, voltage dividers and bias voltages on */
 249:battery/compal_e88.c **** 			twl3025_unit_enable(TWL3025_UNIT_MAD,1);
 250:battery/compal_e88.c **** 			twl3025_reg_write(BCICTL1,BATTERY_ALL_SENSE);
 251:battery/compal_e88.c **** 		}
 252:battery/compal_e88.c **** 	} else {
 253:battery/compal_e88.c **** 		if(!(vrpcsts & CHGPRES)){
 254:battery/compal_e88.c **** 			/* we'll only run ADC on demand */
 255:battery/compal_e88.c **** 			twl3025_unit_enable(TWL3025_UNIT_MAD,0);
 256:battery/compal_e88.c **** 			twl3025_reg_write(BCICTL1,0);
 257:battery/compal_e88.c **** 
 258:battery/compal_e88.c **** 			battery_info.flags &= ~ BATTERY_CHG_CONNECTED;
 259:battery/compal_e88.c **** 			puts("\033[34;1mCHARGER: external voltage disconnected!\033[0m\n");
 260:battery/compal_e88.c **** 		}
 261:battery/compal_e88.c **** 	}
 262:battery/compal_e88.c **** }
 263:battery/compal_e88.c **** 
 264:battery/compal_e88.c **** /* ---- update voltages visible to the user ---- */
 265:battery/compal_e88.c **** static void
 266:battery/compal_e88.c **** bat_compal_e88_upd_measurements(){
 267:battery/compal_e88.c **** 	int adc,i;
 268:battery/compal_e88.c **** 
 269:battery/compal_e88.c **** 	battery_info.charger_volt_mV=
 270:battery/compal_e88.c **** 		ADC_TO_PHYSICAL(bat_compal_e88_madc[MADC_VCHG],VCHG_LSB_uV);
 271:battery/compal_e88.c **** 	battery_info.bat_volt_mV=
 272:battery/compal_e88.c **** 		ADC_TO_PHYSICAL(bat_compal_e88_madc[MADC_VBAT],VBAT_LSB_uV);
 273:battery/compal_e88.c **** 	battery_info.bat_chg_curr_mA=
 274:battery/compal_e88.c **** 		ADC_TO_PHYSICAL(bat_compal_e88_madc[MADC_ICHG],ICHG_LSB_uA);
 275:battery/compal_e88.c **** 
 276:battery/compal_e88.c **** 	adc = bat_compal_e88_madc[MADC_VBAT];
 277:battery/compal_e88.c **** 	if(adc <= VBAT_empty){			/* battery 0..100% */
 278:battery/compal_e88.c **** 		battery_info.battery_percent = 0;
 279:battery/compal_e88.c **** 	} else if (adc >= VBAT_full){
 280:battery/compal_e88.c **** 		battery_info.battery_percent = 100;
 281:battery/compal_e88.c **** 	} else {
 282:battery/compal_e88.c **** 		battery_info.battery_percent =
 283:battery/compal_e88.c **** 			(50+100*(adc-VBAT_empty))/(VBAT_full-VBAT_empty);
 284:battery/compal_e88.c **** 	}
 285:battery/compal_e88.c **** 
 286:battery/compal_e88.c ****         /* DEBUG */
 287:battery/compal_e88.c ****         printf("BAT-ADC: ");
 288:battery/compal_e88.c ****         for(i=0;i<MADC_NUM_CHANNELS;i++)
 289:battery/compal_e88.c ****                 printf("%3d ",bat_compal_e88_madc[i]);
 290:battery/compal_e88.c ****         printf("%c\n",32);
 291:battery/compal_e88.c ****         printf("\tCharger at %u mV.\n",battery_info.charger_volt_mV);
 292:battery/compal_e88.c ****         printf("\tBattery at %u mV.\n",battery_info.bat_volt_mV);
 293:battery/compal_e88.c ****         printf("\tCharging at %u mA.\n",battery_info.bat_chg_curr_mA);
 294:battery/compal_e88.c ****         printf("\tBattery capacity is %u%%.\n",battery_info.battery_percent);
 295:battery/compal_e88.c **** 	printf("\tBattery range is %d..%d mV.\n",
 296:battery/compal_e88.c **** 		ADC_TO_PHYSICAL(VBAT_empty,VBAT_LSB_uV),
 297:battery/compal_e88.c **** 		ADC_TO_PHYSICAL(VBAT_full,VBAT_LSB_uV));
 298:battery/compal_e88.c ****         printf("\tBattery full at %d LSB .. full at %d LSB\n",VBAT_empty,VBAT_full);
 299:battery/compal_e88.c ****         printf("\tCharging at %d LSB (%d mA).\n",ICHG_set,
 300:battery/compal_e88.c ****                 ADC_TO_PHYSICAL(ICHG_set,ICHG_LSB_uA));
 301:battery/compal_e88.c ****         i = twl3025_reg_read(BCICTL2);
 302:battery/compal_e88.c ****         printf("\tBCICTL2=0x%03x\n",i);      
 303:battery/compal_e88.c **** 	printf("\tbattery-info.flags=0x%08x\n",battery_info.flags);
 304:battery/compal_e88.c **** 	printf("\tbat_compal_e88_chg_state=%d\n",bat_compal_e88_chg_state);
 305:battery/compal_e88.c **** }
 306:battery/compal_e88.c **** 
 307:battery/compal_e88.c **** /* bat_compal_e88_adc_read() :
 308:battery/compal_e88.c ****  *
 309:battery/compal_e88.c ****  * Schedule a ADC conversion or read values from ADC. If we are
 310:battery/compal_e88.c ****  * running on battery, bias currents/voltage dividers are turned
 311:battery/compal_e88.c ****  * on on demand.
 312:battery/compal_e88.c ****  *
 313:battery/compal_e88.c ****  * Return 0 if new ADC values have been acquired, 1 if ADC
 314:battery/compal_e88.c ****  * has been scheduled for a new conversion or is not yet finished.
 315:battery/compal_e88.c ****  * 
 316:battery/compal_e88.c ****  */
 317:battery/compal_e88.c **** 
 318:battery/compal_e88.c **** enum bat_compal_e88_madc_stat {
 319:battery/compal_e88.c **** 	ADC_CONVERSION = 1 << 0
 320:battery/compal_e88.c **** };
 321:battery/compal_e88.c **** static uint32_t bat_compal_e88_madc_stat=0;
 322:battery/compal_e88.c **** 
 323:battery/compal_e88.c **** static int
 324:battery/compal_e88.c **** bat_compal_e88_adc_read(){
 325:battery/compal_e88.c **** 	int i;
 326:battery/compal_e88.c **** 
 327:battery/compal_e88.c **** 	if(bat_compal_e88_madc_stat & ADC_CONVERSION){
 328:battery/compal_e88.c **** 		i = twl3025_reg_read(MADCSTAT);
 329:battery/compal_e88.c **** 		if(i & ADCBUSY)
 330:battery/compal_e88.c **** 			return 1;
 331:battery/compal_e88.c **** 		for(i=0;i<MADC_NUM_CHANNELS;i++)
 332:battery/compal_e88.c **** 			bat_compal_e88_madc[i]=twl3025_reg_read(VBATREG+i);
 333:battery/compal_e88.c **** 		/* if charger is connected, we keep the ADC and BIAS on
 334:battery/compal_e88.c **** 		   continuously, if running on battery, we try to save power */
 335:battery/compal_e88.c **** 		if(!(battery_info.flags & BATTERY_CHG_CONNECTED)){
 336:battery/compal_e88.c **** 			twl3025_reg_write(BCICTL1,0x00); /* turn off bias */
 337:battery/compal_e88.c **** 			twl3025_unit_enable(TWL3025_UNIT_MAD,0); /* & ADC */
 338:battery/compal_e88.c **** 		}
 339:battery/compal_e88.c **** 		bat_compal_e88_madc_stat &= ~ ADC_CONVERSION;
 340:battery/compal_e88.c **** 		return 0;
 341:battery/compal_e88.c **** 	} else {
 342:battery/compal_e88.c **** 		/* if running on battery, turn on ADC & BIAS on demand */
 343:battery/compal_e88.c **** 		if(!(battery_info.flags & BATTERY_CHG_CONNECTED)){
 344:battery/compal_e88.c **** 			twl3025_unit_enable(TWL3025_UNIT_MAD,1);
 345:battery/compal_e88.c **** 			twl3025_reg_write(BCICTL1,BATTERY_ALL_SENSE);
 346:battery/compal_e88.c **** 		}
 347:battery/compal_e88.c **** 
 348:battery/compal_e88.c **** 		twl3025_reg_write(MADCTRL,0xff); /* convert all channels */
 349:battery/compal_e88.c **** 		twl3025_reg_write(VBATREG,0);    /* trigger conversion */
 350:battery/compal_e88.c **** 
 351:battery/compal_e88.c **** 		bat_compal_e88_madc_stat |= ADC_CONVERSION;
 352:battery/compal_e88.c **** 		return 1;
 353:battery/compal_e88.c **** 	}
 354:battery/compal_e88.c **** }
 355:battery/compal_e88.c **** 
 356:battery/compal_e88.c **** static void
 357:battery/compal_e88.c **** battery_compal_e88_timer_cb(void *p){
 226              		.loc 1 357 0
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              	.LVL2:
 230 0000 F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
 231              	.LCFI1:
 232              	.LBB2:
 233              	.LBB3:
 234              		.loc 1 327 0
 235 0004 34439FE5 		ldr	r4, .L60
 236 0008 003094E5 		ldr	r3, [r4, #0]
 237 000c 015013E2 		ands	r5, r3, #1
 238              	.LBE3:
 239              	.LBE2:
 240              		.loc 1 357 0
 241 0010 0070A0E1 		mov	r7, r0
 242              	.LVL3:
 243              	.LBB4:
 244              	.LBB5:
 245              		.loc 1 327 0
 246 0014 3900000A 		beq	.L14
 247              		.loc 1 328 0
 248 0018 1800A0E3 		mov	r0, #24
 249              	.LVL4:
 250 001c FEFFFFEB 		bl	twl3025_reg_read
 251              		.loc 1 329 0
 252 0020 010010E3 		tst	r0, #1
 253 0024 4C00001A 		bne	.L16
 254 0028 14539FE5 		ldr	r5, .L60+4
 255 002c 0F40A0E3 		mov	r4, #15
 256              	.L18:
 257              		.loc 1 332 0
 258 0030 0400A0E1 		mov	r0, r4
 259 0034 FEFFFFEB 		bl	twl3025_reg_read
 260 0038 014084E2 		add	r4, r4, #1
 261              		.loc 1 331 0
 262 003c 170054E3 		cmp	r4, #23
 263              		.loc 1 332 0
 264 0040 B200C5E0 		strh	r0, [r5], #2	@ movhi
 265              		.loc 1 331 0
 266 0044 0A00001A 		bne	.L18
 267              		.loc 1 335 0
 268 0048 F8629FE5 		ldr	r6, .L60+8
 269 004c 003096E5 		ldr	r3, [r6, #0]
 270 0050 014013E2 		ands	r4, r3, #1
 271 0054 1A00001A 		bne	.L20
 272              		.loc 1 336 0
 273 0058 1C00A0E3 		mov	r0, #28
 274 005c 0410A0E1 		mov	r1, r4
 275 0060 FEFFFFEB 		bl	twl3025_reg_write
 276              		.loc 1 337 0
 277 0064 0410A0E1 		mov	r1, r4
 278 0068 0100A0E3 		mov	r0, #1
 279 006c FEFFFFEB 		bl	twl3025_unit_enable
 280              	.L20:
 281              	.LBE5:
 282              	.LBE4:
 283              	.LBB6:
 284              	.LBB7:
 285              		.loc 1 269 0
 286 0070 CC429FE5 		ldr	r4, .L60+4
 287 0074 D0329FE5 		ldr	r3, .L60+12
 288 0078 B220D4E1 		ldrh	r2, [r4, #2]
 289 007c 920300E0 		mul	r0, r2, r3
 290              	.LBE7:
 291              	.LBE6:
 292              	.LBB8:
 293              	.LBB9:
 294              		.loc 1 339 0
 295 0080 B8229FE5 		ldr	r2, .L60
 296 0084 003092E5 		ldr	r3, [r2, #0]
 297 0088 0130C3E3 		bic	r3, r3, #1
 298 008c 003082E5 		str	r3, [r2, #0]
 299              	.LBE9:
 300              	.LBE8:
 301              	.LBB10:
 302              	.LBB11:
 303              		.loc 1 269 0
 304 0090 FA1FA0E3 		mov	r1, #1000
 305 0094 7D0F80E2 		add	r0, r0, #500
 306 0098 FEFFFFEB 		bl	__divsi3
 307              		.loc 1 271 0
 308 009c B050D4E1 		ldrh	r5, [r4, #0]
 309 00a0 A8329FE5 		ldr	r3, .L60+16
 310 00a4 950303E0 		mul	r3, r5, r3
 311              		.loc 1 269 0
 312 00a8 040086E5 		str	r0, [r6, #4]
 313              		.loc 1 271 0
 314 00ac FA1FA0E3 		mov	r1, #1000
 315 00b0 7D0F83E2 		add	r0, r3, #500
 316 00b4 FEFFFFEB 		bl	__divsi3
 317              		.loc 1 273 0
 318 00b8 B420D4E1 		ldrh	r2, [r4, #4]
 319 00bc 90329FE5 		ldr	r3, .L60+20
 320 00c0 920303E0 		mul	r3, r2, r3
 321              		.loc 1 271 0
 322 00c4 080086E5 		str	r0, [r6, #8]
 323              		.loc 1 273 0
 324 00c8 FA1FA0E3 		mov	r1, #1000
 325 00cc 7D0F83E2 		add	r0, r3, #500
 326 00d0 FEFFFFEB 		bl	__divsi3
 327              		.loc 1 277 0
 328 00d4 750F55E3 		cmp	r5, #468
 329              		.loc 1 278 0
 330 00d8 0030A0D3 		movle	r3, #0
 331              		.loc 1 273 0
 332 00dc 0C0086E5 		str	r0, [r6, #12]
 333              		.loc 1 278 0
 334 00e0 103086D5 		strle	r3, [r6, #16]
 335              		.loc 1 277 0
 336 00e4 5B0000DA 		ble	.L26
 337 00e8 4F0000EA 		b	.L53
 338              	.LVL5:
 339              	.L14:
 340              	.LBE11:
 341              	.LBE10:
 342              	.LBB12:
 343              	.LBB13:
 344              		.loc 1 343 0
 345 00ec 54329FE5 		ldr	r3, .L60+8
 346 00f0 003093E5 		ldr	r3, [r3, #0]
 347 00f4 010013E3 		tst	r3, #1
 348 00f8 4300001A 		bne	.L24
 349              		.loc 1 344 0
 350 00fc 0100A0E3 		mov	r0, #1
 351              	.LVL6:
 352 0100 0010A0E1 		mov	r1, r0
 353 0104 FEFFFFEB 		bl	twl3025_unit_enable
 354              		.loc 1 345 0
 355 0108 1C00A0E3 		mov	r0, #28
 356 010c F910A0E3 		mov	r1, #249
 357 0110 FEFFFFEB 		bl	twl3025_reg_write
 358              	.LVL7:
 359              	.L24:
 360              		.loc 1 348 0
 361 0114 0D00A0E3 		mov	r0, #13
 362              	.LVL8:
 363 0118 FF10A0E3 		mov	r1, #255
 364 011c FEFFFFEB 		bl	twl3025_reg_write
 365              		.loc 1 349 0
 366 0120 0510A0E1 		mov	r1, r5
 367 0124 0F00A0E3 		mov	r0, #15
 368 0128 FEFFFFEB 		bl	twl3025_reg_write
 369              		.loc 1 351 0
 370 012c 003094E5 		ldr	r3, [r4, #0]
 371 0130 013083E3 		orr	r3, r3, #1
 372 0134 003084E5 		str	r3, [r4, #0]
 373              	.L16:
 374              	.LBE13:
 375              	.LBE12:
 358:battery/compal_e88.c **** 	struct osmo_timer_list *tmr = (struct osmo_timer_list*)p;
 359:battery/compal_e88.c **** 	int i;
 360:battery/compal_e88.c **** 
 361:battery/compal_e88.c **** 	if(bat_compal_e88_adc_read()){ /* read back ADCs after a brief delay */
 362:battery/compal_e88.c **** 		osmo_timer_schedule(tmr,ADC_TIMER_DELAY);
 376              		.loc 1 362 0
 377 0138 0700A0E1 		mov	r0, r7
 378 013c 6410A0E3 		mov	r1, #100
 379 0140 CC0000EA 		b	.L57
 380              	.LVL9:
 381              	.L53:
 382              	.LBB14:
 383              	.LBB15:
 384              		.loc 1 279 0
 385 0144 920F55E3 		cmp	r5, #584
 386 0148 F8419FE5 		ldr	r4, .L60+8
 387              		.loc 1 280 0
 388 014c 6430A0C3 		movgt	r3, #100
 389 0150 103084C5 		strgt	r3, [r4, #16]
 390              		.loc 1 279 0
 391 0154 5B0000CA 		bgt	.L26
 392              		.loc 1 282 0
 393 0158 6430A0E3 		mov	r3, #100
 394 015c 950300E0 		mul	r0, r5, r3
 395 0160 B60C40E2 		sub	r0, r0, #46592
 396 0164 9E0040E2 		sub	r0, r0, #158
 397 0168 7510A0E3 		mov	r1, #117
 398 016c FEFFFFEB 		bl	__divsi3
 399 0170 100084E5 		str	r0, [r4, #16]
 400              	.L26:
 401              		.loc 1 287 0
 402 0174 DC019FE5 		ldr	r0, .L60+24
 403 0178 FEFFFFEB 		bl	printf
 404 017c C0419FE5 		ldr	r4, .L60+4
 405              	.L29:
 406              		.loc 1 289 0
 407 0180 B210D4E0 		ldrh	r1, [r4], #2
 408 0184 D0019FE5 		ldr	r0, .L60+28
 409 0188 FEFFFFEB 		bl	printf
 410              		.loc 1 288 0
 411 018c CC319FE5 		ldr	r3, .L60+32
 412 0190 030054E1 		cmp	r4, r3
 413 0194 5E00001A 		bne	.L29
 414              		.loc 1 291 0
 415 0198 A8519FE5 		ldr	r5, .L60+8
 416              		.loc 1 290 0
 417 019c 2010A0E3 		mov	r1, #32
 418 01a0 BC019FE5 		ldr	r0, .L60+36
 419 01a4 FEFFFFEB 		bl	printf
 420              		.loc 1 291 0
 421 01a8 041095E5 		ldr	r1, [r5, #4]
 422 01ac B4019FE5 		ldr	r0, .L60+40
 423 01b0 FEFFFFEB 		bl	printf
 424              		.loc 1 292 0
 425 01b4 081095E5 		ldr	r1, [r5, #8]
 426 01b8 AC019FE5 		ldr	r0, .L60+44
 427 01bc FEFFFFEB 		bl	printf
 428              		.loc 1 293 0
 429 01c0 0C1095E5 		ldr	r1, [r5, #12]
 430 01c4 A4019FE5 		ldr	r0, .L60+48
 431 01c8 FEFFFFEB 		bl	printf
 432              		.loc 1 294 0
 433 01cc 101095E5 		ldr	r1, [r5, #16]
 434 01d0 9C019FE5 		ldr	r0, .L60+52
 435 01d4 FEFFFFEB 		bl	printf
 436              		.loc 1 295 0
 437 01d8 98119FE5 		ldr	r1, .L60+56
 438 01dc 98219FE5 		ldr	r2, .L60+60
 439 01e0 98019FE5 		ldr	r0, .L60+64
 440 01e4 FEFFFFEB 		bl	printf
 441              		.loc 1 298 0
 442 01e8 751FA0E3 		mov	r1, #468
 443 01ec 90219FE5 		ldr	r2, .L60+68
 444 01f0 90019FE5 		ldr	r0, .L60+72
 445 01f4 FEFFFFEB 		bl	printf
 446              		.loc 1 299 0
 447 01f8 CC20A0E3 		mov	r2, #204
 448 01fc EF10A0E3 		mov	r1, #239
 449 0200 84019FE5 		ldr	r0, .L60+76
 450 0204 FEFFFFEB 		bl	printf
 451              		.loc 1 301 0
 452 0208 1D00A0E3 		mov	r0, #29
 453 020c FEFFFFEB 		bl	twl3025_reg_read
 454 0210 0010A0E1 		mov	r1, r0
 455              		.loc 1 302 0
 456 0214 74019FE5 		ldr	r0, .L60+80
 457 0218 FEFFFFEB 		bl	printf
 458              		.loc 1 303 0
 459 021c 001095E5 		ldr	r1, [r5, #0]
 460 0220 6C019FE5 		ldr	r0, .L60+84
 461 0224 FEFFFFEB 		bl	printf
 462              		.loc 1 304 0
 463 0228 68319FE5 		ldr	r3, .L60+88
 464 022c 68019FE5 		ldr	r0, .L60+92
 465 0230 001093E5 		ldr	r1, [r3, #0]
 466 0234 FEFFFFEB 		bl	printf
 467              	.LBE15:
 468              	.LBE14:
 469              	.LBB16:
 470              	.LBB17:
 471              		.loc 1 240 0
 472 0238 1F00A0E3 		mov	r0, #31
 473 023c FEFFFFEB 		bl	twl3025_reg_read
 474              		.loc 1 243 0
 475 0240 003095E5 		ldr	r3, [r5, #0]
 476 0244 010013E3 		tst	r3, #1
 477 0248 404000E2 		and	r4, r0, #64
 478 024c A000001A 		bne	.L31
 479              		.loc 1 244 0
 480 0250 000054E3 		cmp	r4, #0
 481 0254 AD00000A 		beq	.L33
 482              		.loc 1 245 0
 483 0258 40019FE5 		ldr	r0, .L60+96
 484 025c FEFFFFEB 		bl	puts
 485              		.loc 1 246 0
 486 0260 003095E5 		ldr	r3, [r5, #0]
 487              		.loc 1 249 0
 488 0264 0100A0E3 		mov	r0, #1
 489              		.loc 1 246 0
 490 0268 003083E1 		orr	r3, r3, r0
 491              		.loc 1 249 0
 492 026c 0010A0E1 		mov	r1, r0
 493              		.loc 1 246 0
 494 0270 003085E5 		str	r3, [r5, #0]
 495              		.loc 1 249 0
 496 0274 FEFFFFEB 		bl	twl3025_unit_enable
 497              		.loc 1 250 0
 498 0278 1C00A0E3 		mov	r0, #28
 499 027c F910A0E3 		mov	r1, #249
 500 0280 FEFFFFEB 		bl	twl3025_reg_write
 501 0284 AD0000EA 		b	.L33
 502              	.L31:
 503              		.loc 1 253 0
 504 0288 000054E3 		cmp	r4, #0
 505 028c AD00001A 		bne	.L33
 506              		.loc 1 255 0
 507 0290 0100A0E3 		mov	r0, #1
 508 0294 0410A0E1 		mov	r1, r4
 509 0298 FEFFFFEB 		bl	twl3025_unit_enable
 510              		.loc 1 256 0
 511 029c 1C00A0E3 		mov	r0, #28
 512 02a0 0410A0E1 		mov	r1, r4
 513 02a4 FEFFFFEB 		bl	twl3025_reg_write
 514              		.loc 1 258 0
 515 02a8 003095E5 		ldr	r3, [r5, #0]
 516 02ac 0130C3E3 		bic	r3, r3, #1
 517              		.loc 1 259 0
 518 02b0 EC009FE5 		ldr	r0, .L60+100
 519              		.loc 1 258 0
 520 02b4 003085E5 		str	r3, [r5, #0]
 521              		.loc 1 259 0
 522 02b8 FEFFFFEB 		bl	puts
 523              	.L33:
 524              	.LBE17:
 525              	.LBE16:
 526              	.LBB18:
 527              	.LBB19:
 528              		.loc 1 194 0
 529 02bc 84309FE5 		ldr	r3, .L60+8
 530 02c0 003093E5 		ldr	r3, [r3, #0]
 531 02c4 010013E2 		ands	r0, r3, #1
 532 02c8 C900000A 		beq	.L56
 533              		.loc 1 200 0
 534 02cc 70309FE5 		ldr	r3, .L60+4
 535 02d0 B020D3E1 		ldrh	r2, [r3, #0]
 536 02d4 CC309FE5 		ldr	r3, .L60+104
 537 02d8 030052E1 		cmp	r2, r3
 538              		.loc 1 201 0
 539 02dc 0300A083 		movhi	r0, #3
 540              		.loc 1 200 0
 541 02e0 C900008A 		bhi	.L56
 542              		.loc 1 207 0
 543 02e4 AC309FE5 		ldr	r3, .L60+88
 544 02e8 003093E5 		ldr	r3, [r3, #0]
 545 02ec 010053E3 		cmp	r3, #1
 546 02f0 C200000A 		beq	.L43
 547 02f4 BF00003A 		bcc	.L42
 548 02f8 020053E3 		cmp	r3, #2
 549 02fc C600001A 		bne	.L55
 550 0300 CA0000EA 		b	.L38
 551              	.L42:
 552              		.loc 1 209 0
 553 0304 920F52E3 		cmp	r2, #584
 554 0308 C400008A 		bhi	.L59
 555 030c C80000EA 		b	.L58
 556              	.L43:
 557              		.loc 1 215 0
 558 0310 920F52E3 		cmp	r2, #584
 559 0314 CA00009A 		bls	.L38
 560              	.L59:
 561              		.loc 1 216 0
 562 0318 0200A0E3 		mov	r0, #2
 563 031c C90000EA 		b	.L56
 564              	.L55:
 565              		.loc 1 222 0
 566 0320 920F52E3 		cmp	r2, #584
 567 0324 CA00008A 		bhi	.L38
 568              	.L58:
 569              		.loc 1 223 0
 570 0328 0100A0E3 		mov	r0, #1
 571              	.L56:
 572 032c FEFFFFEB 		bl	bat_compal_e88_goto_state
 573              	.L38:
 574              	.LBE19:
 575              	.LBE18:
 363:battery/compal_e88.c **** 		return;
 364:battery/compal_e88.c **** 	}
 365:battery/compal_e88.c **** 
 366:battery/compal_e88.c **** 	bat_compal_e88_upd_measurements();	/* convert user-accessible information */
 367:battery/compal_e88.c **** 	bat_compal_e88_chk_ac_presence();	/* detect AC charger presence */
 368:battery/compal_e88.c **** 	bat_compal_e88_chg_control();	/* battery charger state machine */
 369:battery/compal_e88.c **** 
 370:battery/compal_e88.c **** 	osmo_timer_schedule(tmr,BATTERY_TIMER_DELAY);
 576              		.loc 1 370 0
 577 0330 74109FE5 		ldr	r1, .L60+108
 578 0334 0700A0E1 		mov	r0, r7
 579              	.LVL10:
 580              	.L57:
 371:battery/compal_e88.c **** }
 581              		.loc 1 371 0
 582 0338 F040BDE8 		ldmfd	sp!, {r4, r5, r6, r7, lr}
 583              		.loc 1 370 0
 584 033c FEFFFFEA 		b	osmo_timer_schedule
 585              	.LVL11:
 586              	.L61:
 587              		.align	2
 588              	.L60:
 589 0340 00000000 		.word	bat_compal_e88_madc_stat
 590 0344 00000000 		.word	bat_compal_e88_madc
 591 0348 00000000 		.word	battery_info
 592 034c 61210000 		.word	8545
 593 0350 B41A0000 		.word	6836
 594 0354 56030000 		.word	854
 595 0358 7C000000 		.word	.LC6
 596 035c 88000000 		.word	.LC7
 597 0360 10000000 		.word	bat_compal_e88_madc+16
 598 0364 90000000 		.word	.LC8
 599 0368 94000000 		.word	.LC9
 600 036c A8000000 		.word	.LC10
 601 0370 BC000000 		.word	.LC11
 602 0374 D4000000 		.word	.LC12
 603 0378 7F0C0000 		.word	3199
 604 037c 9F0F0000 		.word	3999
 605 0380 F0000000 		.word	.LC13
 606 0384 49020000 		.word	585
 607 0388 10010000 		.word	.LC14
 608 038c 3C010000 		.word	.LC15
 609 0390 5C010000 		.word	.LC16
 610 0394 70010000 		.word	.LC17
 611 0398 04000000 		.word	bat_compal_e88_chg_state
 612 039c 8C010000 		.word	.LC18
 613 03a0 AC010000 		.word	.LC19
 614 03a4 E0010000 		.word	.LC20
 615 03a8 6E020000 		.word	622
 616 03ac 88130000 		.word	5000
 617              	.LFE20:
 619              		.section	.rodata
 620              		.align	2
 623              	__FUNCTION__.1624:
 624 0000 62617474 		.ascii	"battery_compal_e88_init\000"
 624      6572795F 
 624      636F6D70 
 624      616C5F65 
 624      38385F69 
 625              		.section	.rodata.str1.4
 626              		.align	2
 627              	.LC21:
 628 0214 25733A20 		.ascii	"%s: starting up\012\000"
 628      73746172 
 628      74696E67 
 628      2075700A 
 628      00
 629 0225 000000   		.section	.text.battery_compal_e88_init,"ax",%progbits
 630              		.align	2
 631              		.global	battery_compal_e88_init
 633              	battery_compal_e88_init:
 634              	.LFB21:
 372:battery/compal_e88.c **** 
 373:battery/compal_e88.c **** /* timer that fires the charging loop regularly */
 374:battery/compal_e88.c **** static struct osmo_timer_list battery_compal88_timer = {
 375:battery/compal_e88.c **** 	.cb = &battery_compal_e88_timer_cb,
 376:battery/compal_e88.c **** 	.data = &battery_compal88_timer
 377:battery/compal_e88.c **** };
 378:battery/compal_e88.c **** 
 379:battery/compal_e88.c **** void
 380:battery/compal_e88.c **** battery_compal_e88_init(){
 635              		.loc 1 380 0
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              	.LVL12:
 639 0000 04E02DE5 		str	lr, [sp, #-4]!
 640              	.LCFI2:
 381:battery/compal_e88.c **** 	printf("%s: starting up\n",__FUNCTION__);
 641              		.loc 1 381 0
 642 0004 14109FE5 		ldr	r1, .L64
 643 0008 14009FE5 		ldr	r0, .L64+4
 644 000c FEFFFFEB 		bl	printf
 382:battery/compal_e88.c **** 	osmo_timer_schedule(&battery_compal88_timer,BATTERY_TIMER_DELAY);
 645              		.loc 1 382 0
 646 0010 10009FE5 		ldr	r0, .L64+8
 647 0014 10109FE5 		ldr	r1, .L64+12
 383:battery/compal_e88.c **** }
 648              		.loc 1 383 0
 649 0018 04E09DE4 		ldr	lr, [sp], #4
 650              		.loc 1 382 0
 651 001c FEFFFFEA 		b	osmo_timer_schedule
 652              	.L65:
 653              		.align	2
 654              	.L64:
 655 0020 00000000 		.word	__FUNCTION__.1624
 656 0024 14020000 		.word	.LC21
 657 0028 00000000 		.word	battery_compal88_timer
 658 002c 88130000 		.word	5000
 659              	.LFE21:
 661              		.comm	bat_compal_e88_madc,16,2
 662              		.comm	battery_info,20,4
 663              		.bss
 664              		.align	2
 665              	bat_compal_e88_chg_state:
 666 0004 00000000 		.space	4
 741              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 compal_e88.c
     /tmp/cct0AFnB.s:14     .data:0000000000000000 battery_compal88_timer
     /tmp/cct0AFnB.s:16     .data:0000000000000010 $d
     /tmp/cct0AFnB.s:224    .text.battery_compal_e88_timer_cb:0000000000000000 battery_compal_e88_timer_cb
     /tmp/cct0AFnB.s:20     .bss:0000000000000000 bat_compal_e88_madc_stat
     /tmp/cct0AFnB.s:39     .data:0000000000000018 bat_compal_e88_chg_state_names
     /tmp/cct0AFnB.s:54     .text.bat_compal_e88_goto_state:0000000000000000 bat_compal_e88_goto_state
     /tmp/cct0AFnB.s:61     .text.bat_compal_e88_goto_state:0000000000000000 $a
     /tmp/cct0AFnB.s:164    .text.bat_compal_e88_goto_state:0000000000000114 $d
     /tmp/cct0AFnB.s:665    .bss:0000000000000004 bat_compal_e88_chg_state
                            *COM*:0000000000000014 battery_info
     /tmp/cct0AFnB.s:230    .text.battery_compal_e88_timer_cb:0000000000000000 $a
     /tmp/cct0AFnB.s:589    .text.battery_compal_e88_timer_cb:0000000000000340 $d
                            *COM*:0000000000000010 bat_compal_e88_madc
     /tmp/cct0AFnB.s:623    .rodata:0000000000000000 __FUNCTION__.1624
     /tmp/cct0AFnB.s:633    .text.battery_compal_e88_init:0000000000000000 battery_compal_e88_init
     /tmp/cct0AFnB.s:639    .text.battery_compal_e88_init:0000000000000000 $a
     /tmp/cct0AFnB.s:655    .text.battery_compal_e88_init:0000000000000020 $d

UNDEFINED SYMBOLS
printf
twl3025_reg_write
twl3025_reg_read
__divsi3
twl3025_unit_enable
puts
osmo_timer_schedule
