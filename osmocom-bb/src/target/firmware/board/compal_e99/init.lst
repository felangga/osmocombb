   1              		.file	"init.c"
   9              	.Ltext0:
  10              		.section	.rodata
  13              	keymap:
  14 0000 0D       		.byte	13
  15 0001 0F       		.byte	15
  16 0002 0A       		.byte	10
  17 0003 05       		.byte	5
  18 0004 10       		.byte	16
  19 0005 0B       		.byte	11
  20 0006 06       		.byte	6
  21 0007 11       		.byte	17
  22 0008 0C       		.byte	12
  23 0009 07       		.byte	7
  24 000a 12       		.byte	18
  25 000b 08       		.byte	8
  26 000c 0E       		.byte	14
  27 000d 13       		.byte	19
  28 000e 09       		.byte	9
  29 000f 01       		.byte	1
  30 0010 02       		.byte	2
  31 0011 03       		.byte	3
  32 0012 04       		.byte	4
  33 0013 00       		.byte	0
  34 0014 18       		.byte	24
  35 0015 1E       		.byte	30
  36 0016 1E       		.byte	30
  37 0017 1E       		.byte	30
  38              		.section	.text.board_init,"ax",%progbits
  39              		.align	2
  40              		.global	board_init
  42              	board_init:
  43              	.LFB56:
  44              		.file 1 "board/compal_e99/init.c"
   1:board/compal_e99/init.c **** /* Initialization for the Compal E99 (Motorola C155) */
   2:board/compal_e99/init.c **** 
   3:board/compal_e99/init.c **** /* (C) 2010 by Harald Welte <laforge@gnumonks.org>
   4:board/compal_e99/init.c ****  * (C) 2010 by Steve Markgraf <steve@steve-m.de>
   5:board/compal_e99/init.c ****  *
   6:board/compal_e99/init.c ****  * All Rights Reserved
   7:board/compal_e99/init.c ****  *
   8:board/compal_e99/init.c ****  * This program is free software; you can redistribute it and/or modify
   9:board/compal_e99/init.c ****  * it under the terms of the GNU General Public License as published by
  10:board/compal_e99/init.c ****  * the Free Software Foundation; either version 2 of the License, or
  11:board/compal_e99/init.c ****  * (at your option) any later version.
  12:board/compal_e99/init.c ****  *
  13:board/compal_e99/init.c ****  * This program is distributed in the hope that it will be useful,
  14:board/compal_e99/init.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:board/compal_e99/init.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:board/compal_e99/init.c ****  * GNU General Public License for more details.
  17:board/compal_e99/init.c ****  *
  18:board/compal_e99/init.c ****  * You should have received a copy of the GNU General Public License along
  19:board/compal_e99/init.c ****  * with this program; if not, write to the Free Software Foundation, Inc.,
  20:board/compal_e99/init.c ****  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  21:board/compal_e99/init.c ****  *
  22:board/compal_e99/init.c ****  */
  23:board/compal_e99/init.c **** 
  24:board/compal_e99/init.c **** #include <stdint.h>
  25:board/compal_e99/init.c **** #include <stdio.h>
  26:board/compal_e99/init.c **** 
  27:board/compal_e99/init.c **** #include <debug.h>
  28:board/compal_e99/init.c **** #include <ctors.h>
  29:board/compal_e99/init.c **** #include <memory.h>
  30:board/compal_e99/init.c **** #include <board.h>
  31:board/compal_e99/init.c **** #include <keypad.h>
  32:board/compal_e99/init.c **** #include <console.h>
  33:board/compal_e99/init.c **** #include <flash/cfi_flash.h>
  34:board/compal_e99/init.c **** 
  35:board/compal_e99/init.c **** #include <calypso/irq.h>
  36:board/compal_e99/init.c **** #include <calypso/clock.h>
  37:board/compal_e99/init.c **** #include <calypso/dma.h>
  38:board/compal_e99/init.c **** #include <calypso/rtc.h>
  39:board/compal_e99/init.c **** #include <calypso/timer.h>
  40:board/compal_e99/init.c **** #include <uart.h>
  41:board/compal_e99/init.c **** #include <calypso/backlight.h>
  42:board/compal_e99/init.c **** 
  43:board/compal_e99/init.c **** #include <comm/sercomm.h>
  44:board/compal_e99/init.c **** #include <comm/timer.h>
  45:board/compal_e99/init.c **** 
  46:board/compal_e99/init.c **** #include <abb/twl3025.h>
  47:board/compal_e99/init.c **** #include <rf/trf6151.h>
  48:board/compal_e99/init.c **** 
  49:board/compal_e99/init.c **** #include <fb/framebuffer.h>
  50:board/compal_e99/init.c **** #include "../compal/keymap.h"
  51:board/compal_e99/init.c **** 
  52:board/compal_e99/init.c **** #define ARMIO_LATCH_OUT 0xfffe4802
  53:board/compal_e99/init.c **** #define IO_CNTL_REG	0xfffe4804
  54:board/compal_e99/init.c **** #define ARM_CONF_REG	0xfffef006
  55:board/compal_e99/init.c **** #define ASIC_CONF_REG	0xfffef008
  56:board/compal_e99/init.c **** 
  57:board/compal_e99/init.c **** static void board_io_init(void)
  58:board/compal_e99/init.c **** {
  59:board/compal_e99/init.c **** 	uint16_t reg;
  60:board/compal_e99/init.c **** 
  61:board/compal_e99/init.c **** 	reg = readw(ASIC_CONF_REG);
  62:board/compal_e99/init.c **** 	/* LCD Set I/O(3) / SA0 to I/O(3) mode */
  63:board/compal_e99/init.c **** 	reg &= ~( (1 << 12) | (1 << 10) | (1 << 7) | (1 << 1)) ;
  64:board/compal_e99/init.c **** 	/* don't set function pins to I2C Mode, C155 uses UWire */
  65:board/compal_e99/init.c **** 	/* TWL3025: Set SPI+RIF RX clock to rising edge */
  66:board/compal_e99/init.c **** 	reg |= (1 << 13) | (1 << 14);
  67:board/compal_e99/init.c **** 	writew(reg, ASIC_CONF_REG);
  68:board/compal_e99/init.c **** 
  69:board/compal_e99/init.c **** 	/* LCD Set I/O(3) to output mode and enable C155 backlight (IO1) */
  70:board/compal_e99/init.c **** 	/* FIXME: Put the display backlight control to backlight.c */
  71:board/compal_e99/init.c **** 	reg = readw(IO_CNTL_REG);
  72:board/compal_e99/init.c **** 	reg &= ~( (1 << 3) | (1 << 1));
  73:board/compal_e99/init.c **** 	writew(reg, IO_CNTL_REG);
  74:board/compal_e99/init.c **** 
  75:board/compal_e99/init.c **** 	/* LCD Set I/O(3) output low */
  76:board/compal_e99/init.c **** 	reg = readw(ARMIO_LATCH_OUT);
  77:board/compal_e99/init.c **** 	reg &= ~(1 << 3);
  78:board/compal_e99/init.c **** 	reg |= (1 << 1);
  79:board/compal_e99/init.c **** 	writew(reg, ARMIO_LATCH_OUT);
  80:board/compal_e99/init.c **** 
  81:board/compal_e99/init.c **** 	/* configure ADD(22), needed for second half of flash */
  82:board/compal_e99/init.c **** 	reg = readw(ARM_CONF_REG);
  83:board/compal_e99/init.c **** 	reg |= (1 << 3);
  84:board/compal_e99/init.c **** 	writew(reg, ARM_CONF_REG);
  85:board/compal_e99/init.c **** }
  86:board/compal_e99/init.c **** 
  87:board/compal_e99/init.c **** void board_init(int with_irq)
  88:board/compal_e99/init.c **** {
  45              		.loc 1 88 0
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 0, uses_anonymous_args = 0
  48              	.LVL0:
  49 0000 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
  50              	.LCFI0:
  51 0004 0040A0E1 		mov	r4, r0
  52 0008 0CD04DE2 		sub	sp, sp, #12
  53              	.LCFI1:
  54              	.LVL1:
  89:board/compal_e99/init.c **** 	/* Disable watchdog (compal loader leaves it enabled) */
  90:board/compal_e99/init.c **** 	wdog_enable(0);
  55              		.loc 1 90 0
  56 000c 0000A0E3 		mov	r0, #0
  57              	.LVL2:
  58 0010 FEFFFFEB 		bl	wdog_enable
  91:board/compal_e99/init.c **** 
  92:board/compal_e99/init.c **** 	/* Configure memory interface */
  93:board/compal_e99/init.c **** 	calypso_mem_cfg(CALYPSO_nCS0, 3, CALYPSO_MEM_16bit, 1);
  59              		.loc 1 93 0
  60 0014 0120A0E3 		mov	r2, #1
  61 0018 0230A0E1 		mov	r3, r2
  62 001c 0000A0E3 		mov	r0, #0
  63 0020 0310A0E3 		mov	r1, #3
  64 0024 FEFFFFEB 		bl	calypso_mem_cfg
  94:board/compal_e99/init.c **** 	calypso_mem_cfg(CALYPSO_nCS1, 3, CALYPSO_MEM_16bit, 1);
  65              		.loc 1 94 0
  66 0028 0120A0E3 		mov	r2, #1
  67 002c 0230A0E1 		mov	r3, r2
  68 0030 0200A0E3 		mov	r0, #2
  69 0034 0310A0E3 		mov	r1, #3
  70 0038 FEFFFFEB 		bl	calypso_mem_cfg
  95:board/compal_e99/init.c **** 	calypso_mem_cfg(CALYPSO_nCS2, 5, CALYPSO_MEM_16bit, 1);
  71              		.loc 1 95 0
  72 003c 0120A0E3 		mov	r2, #1
  73 0040 0230A0E1 		mov	r3, r2
  74 0044 0400A0E3 		mov	r0, #4
  75 0048 0510A0E3 		mov	r1, #5
  76 004c FEFFFFEB 		bl	calypso_mem_cfg
  96:board/compal_e99/init.c **** 	calypso_mem_cfg(CALYPSO_nCS3, 5, CALYPSO_MEM_16bit, 1);
  77              		.loc 1 96 0
  78 0050 0120A0E3 		mov	r2, #1
  79 0054 0230A0E1 		mov	r3, r2
  80 0058 0600A0E3 		mov	r0, #6
  81 005c 0510A0E3 		mov	r1, #5
  82 0060 FEFFFFEB 		bl	calypso_mem_cfg
  97:board/compal_e99/init.c **** 	calypso_mem_cfg(CALYPSO_CS4, 0, CALYPSO_MEM_8bit, 1);
  83              		.loc 1 97 0
  84 0064 0010A0E3 		mov	r1, #0
  85 0068 0120A0E1 		mov	r2, r1
  86 006c 0A00A0E3 		mov	r0, #10
  87 0070 0130A0E3 		mov	r3, #1
  88 0074 FEFFFFEB 		bl	calypso_mem_cfg
  98:board/compal_e99/init.c **** 	calypso_mem_cfg(CALYPSO_nCS6, 0, CALYPSO_MEM_32bit, 1);
  89              		.loc 1 98 0
  90 0078 0C00A0E3 		mov	r0, #12
  91 007c 0010A0E3 		mov	r1, #0
  92 0080 0220A0E3 		mov	r2, #2
  93 0084 0130A0E3 		mov	r3, #1
  94 0088 FEFFFFEB 		bl	calypso_mem_cfg
  99:board/compal_e99/init.c **** 	calypso_mem_cfg(CALYPSO_nCS7, 0, CALYPSO_MEM_32bit, 0);
  95              		.loc 1 99 0
  96 008c 0010A0E3 		mov	r1, #0
  97 0090 0130A0E1 		mov	r3, r1
  98 0094 0800A0E3 		mov	r0, #8
  99 0098 0220A0E3 		mov	r2, #2
 100 009c FEFFFFEB 		bl	calypso_mem_cfg
 100:board/compal_e99/init.c **** 
 101:board/compal_e99/init.c **** 	/* Set VTCXO_DIV2 = 1, configure PLL for 104 MHz and give ARM half of that */
 102:board/compal_e99/init.c **** 	calypso_clock_set(2, CALYPSO_PLL13_104_MHZ, ARM_MCLK_DIV_2);
 101              		.loc 1 102 0
 102 00a0 0200A0E3 		mov	r0, #2
 103:board/compal_e99/init.c **** 
 104:board/compal_e99/init.c **** 	/* Configure the RHEA bridge with some sane default values */
 105:board/compal_e99/init.c **** 	calypso_rhea_cfg(0, 0, 0xff, 0, 1, 0, 0);
 103              		.loc 1 105 0
 104 00a4 0050A0E3 		mov	r5, #0
 105              		.loc 1 102 0
 106 00a8 0020A0E1 		mov	r2, r0
 107 00ac 021BA0E3 		mov	r1, #2048
 108 00b0 FEFFFFEB 		bl	calypso_clock_set
 109              		.loc 1 105 0
 110 00b4 0160A0E3 		mov	r6, #1
 111 00b8 0510A0E1 		mov	r1, r5
 112 00bc FF20A0E3 		mov	r2, #255
 113 00c0 0530A0E1 		mov	r3, r5
 114 00c4 0500A0E1 		mov	r0, r5
 115 00c8 00608DE5 		str	r6, [sp, #0]
 116 00cc 04508DE5 		str	r5, [sp, #4]
 117 00d0 08508DE5 		str	r5, [sp, #8]
 118 00d4 FEFFFFEB 		bl	calypso_rhea_cfg
 119              	.LBB2:
 120              	.LBB3:
 121              		.loc 1 61 0
 122 00d8 EC109FE5 		ldr	r1, .L5
 123              		.loc 1 63 0
 124 00dc EC309FE5 		ldr	r3, .L5+4
 125              	.LVL3:
 126              		.loc 1 61 0
 127 00e0 B020D1E1 		ldrh	r2, [r1, #0]
 128              		.loc 1 63 0
 129 00e4 033002E0 		and	r3, r2, r3
 130              		.loc 1 66 0
 131 00e8 063A83E3 		orr	r3, r3, #24576
 132              	.LVL4:
 133              		.loc 1 67 0
 134 00ec B030C1E1 		strh	r3, [r1, #0]	@ movhi
 135              		.loc 1 71 0
 136 00f0 DC109FE5 		ldr	r1, .L5+8
 137              		.loc 1 72 0
 138 00f4 DC309FE5 		ldr	r3, .L5+12
 139              	.LVL5:
 140              		.loc 1 71 0
 141 00f8 B020D1E1 		ldrh	r2, [r1, #0]
 142              		.loc 1 72 0
 143 00fc 033002E0 		and	r3, r2, r3
 144              		.loc 1 73 0
 145 0100 B030C1E1 		strh	r3, [r1, #0]	@ movhi
 146              		.loc 1 76 0
 147 0104 021041E2 		sub	r1, r1, #2
 148 0108 B020D1E1 		ldrh	r2, [r1, #0]
 149              		.loc 1 77 0
 150 010c C8309FE5 		ldr	r3, .L5+16
 151              	.LVL6:
 152 0110 033002E0 		and	r3, r2, r3
 153              		.loc 1 78 0
 154 0114 023083E3 		orr	r3, r3, #2
 155              	.LVL7:
 156              		.loc 1 79 0
 157 0118 B030C1E1 		strh	r3, [r1, #0]	@ movhi
 158              		.loc 1 82 0
 159 011c BC209FE5 		ldr	r2, .L5+20
 160 0120 B030D2E1 		ldrh	r3, [r2, #0]
 161              	.LVL8:
 162              		.loc 1 83 0
 163 0124 083083E3 		orr	r3, r3, #8
 164              	.LVL9:
 165              	.LBE3:
 166              	.LBE2:
 106:board/compal_e99/init.c **** 
 107:board/compal_e99/init.c **** 	/* Initialize board-specific GPIO */
 108:board/compal_e99/init.c **** 	board_io_init();
 109:board/compal_e99/init.c **** 
 110:board/compal_e99/init.c **** 	/* Enable bootrom mapping to route exception vectors to RAM */
 111:board/compal_e99/init.c **** 	calypso_bootrom(with_irq);
 167              		.loc 1 111 0
 168 0128 0400A0E1 		mov	r0, r4
 169              	.LBB4:
 170              	.LBB5:
 171              		.loc 1 84 0
 172 012c B030C2E1 		strh	r3, [r2, #0]	@ movhi
 173              	.LBE5:
 174              	.LBE4:
 175              		.loc 1 111 0
 176 0130 FEFFFFEB 		bl	calypso_bootrom
 177              	.LVL10:
 112:board/compal_e99/init.c **** 	calypso_exceptions_install();
 178              		.loc 1 112 0
 179 0134 FEFFFFEB 		bl	calypso_exceptions_install
 113:board/compal_e99/init.c **** 
 114:board/compal_e99/init.c **** 	/* Initialize interrupt controller */
 115:board/compal_e99/init.c **** 	if (with_irq)
 180              		.loc 1 115 0
 181 0138 050054E1 		cmp	r4, r5
 116:board/compal_e99/init.c **** 		irq_init();
 182              		.loc 1 116 0
 183 013c FEFFFF1B 		blne	irq_init
 184              	.L2:
 117:board/compal_e99/init.c **** 
 118:board/compal_e99/init.c **** 	sercomm_bind_uart(UART_MODEM);
 185              		.loc 1 118 0
 186 0140 0600A0E1 		mov	r0, r6
 187 0144 FEFFFFEB 		bl	sercomm_bind_uart
 119:board/compal_e99/init.c **** 	cons_bind_uart(UART_IRDA);
 120:board/compal_e99/init.c **** 
 121:board/compal_e99/init.c **** 	/* initialize MODEM UART to be used for sercomm */
 122:board/compal_e99/init.c **** 	uart_init(UART_MODEM, with_irq);
 188              		.loc 1 122 0
 189 0148 FF4004E2 		and	r4, r4, #255
 190              	.LVL11:
 191              		.loc 1 119 0
 192 014c 0500A0E1 		mov	r0, r5
 193 0150 FEFFFFEB 		bl	cons_bind_uart
 194              		.loc 1 122 0
 195 0154 0410A0E1 		mov	r1, r4
 196 0158 0600A0E1 		mov	r0, r6
 197 015c FEFFFFEB 		bl	uart_init
 123:board/compal_e99/init.c **** 	uart_baudrate(UART_MODEM, UART_115200);
 198              		.loc 1 123 0
 199 0160 0600A0E1 		mov	r0, r6
 200 0164 0210A0E3 		mov	r1, #2
 201 0168 FEFFFFEB 		bl	uart_baudrate
 124:board/compal_e99/init.c **** 
 125:board/compal_e99/init.c **** 	/* initialize IRDA UART to be used for old-school console code.
 126:board/compal_e99/init.c **** 	 * note: IRDA uart only accessible on C115 and C117 PCB */
 127:board/compal_e99/init.c **** 	uart_init(UART_IRDA, with_irq);
 202              		.loc 1 127 0
 203 016c 0500A0E1 		mov	r0, r5
 204 0170 0410A0E1 		mov	r1, r4
 205 0174 FEFFFFEB 		bl	uart_init
 128:board/compal_e99/init.c **** 	uart_baudrate(UART_IRDA, UART_115200);
 206              		.loc 1 128 0
 207 0178 0210A0E3 		mov	r1, #2
 208 017c 0500A0E1 		mov	r0, r5
 209 0180 FEFFFFEB 		bl	uart_baudrate
 129:board/compal_e99/init.c **** 
 130:board/compal_e99/init.c **** 	/* Initialize hardware timers */
 131:board/compal_e99/init.c **** 	hwtimer_init();
 210              		.loc 1 131 0
 211 0184 FEFFFFEB 		bl	hwtimer_init
 132:board/compal_e99/init.c **** 
 133:board/compal_e99/init.c **** 	/* Initialize DMA controller */
 134:board/compal_e99/init.c **** 	dma_init();
 212              		.loc 1 134 0
 213 0188 FEFFFFEB 		bl	dma_init
 135:board/compal_e99/init.c **** 
 136:board/compal_e99/init.c **** 	/* Initialize real time clock */
 137:board/compal_e99/init.c **** 	rtc_init();
 214              		.loc 1 137 0
 215 018c FEFFFFEB 		bl	rtc_init
 138:board/compal_e99/init.c **** 
 139:board/compal_e99/init.c **** 	/* Initialize system timers (uses hwtimer 2) */
 140:board/compal_e99/init.c **** 	timer_init();
 216              		.loc 1 140 0
 217 0190 FEFFFFEB 		bl	timer_init
 141:board/compal_e99/init.c **** 
 142:board/compal_e99/init.c **** 	/* Initialize LCD driver (uses UWire) and backlight */
 143:board/compal_e99/init.c **** 	bl_mode_pwl(1);
 218              		.loc 1 143 0
 219 0194 0600A0E1 		mov	r0, r6
 220 0198 FEFFFFEB 		bl	bl_mode_pwl
 144:board/compal_e99/init.c **** 	bl_level(50);
 221              		.loc 1 144 0
 222 019c 3200A0E3 		mov	r0, #50
 223 01a0 FEFFFFEB 		bl	bl_level
 224              	.LBB6:
 225              	.LBB7:
 226              		.file 2 "include/fb/framebuffer.h"
   1:include/fb/framebuffer.h **** #ifndef _FB_FRAMEBUFFER_H
   2:include/fb/framebuffer.h **** #define _FB_FRAMEBUFFER_H
   3:include/fb/framebuffer.h **** 
   4:include/fb/framebuffer.h **** #include <fb/font.h>
   5:include/fb/framebuffer.h **** #include <stdint.h>
   6:include/fb/framebuffer.h **** 
   7:include/fb/framebuffer.h **** /* color is encoded as <special><red><green><blue> */
   8:include/fb/framebuffer.h **** /* if a color is "special", then the RGB components most likely
   9:include/fb/framebuffer.h ****    don't make sense. Use "special" colours when you have to
  10:include/fb/framebuffer.h ****    mask out bits with transparency or you have to encode
  11:include/fb/framebuffer.h ****    colours in a fixed color palette ... */
  12:include/fb/framebuffer.h **** 
  13:include/fb/framebuffer.h **** #define FB_COLOR_WHITE		0x00ffffffU
  14:include/fb/framebuffer.h **** #define FB_COLOR_BLACK		0x00000000U
  15:include/fb/framebuffer.h **** #define FB_COLOR_TRANSP		0x01ffffffU
  16:include/fb/framebuffer.h **** 
  17:include/fb/framebuffer.h **** #define FB_COLOR_RGB(r,g,b) ((((r) & 0xff)<<16)|(((g)&0xff)<<8)|((b)&0xff))
  18:include/fb/framebuffer.h **** #define FB_COLOR_RED		FB_COLOR_RGB(0xff,0x00,0x00)
  19:include/fb/framebuffer.h **** #define FB_COLOR_GREEN		FB_COLOR_RGB(0x00,0xff,0x00)
  20:include/fb/framebuffer.h **** #define FB_COLOR_BLUE		FB_COLOR_RGB(0x00,0x00,0xff)
  21:include/fb/framebuffer.h **** 
  22:include/fb/framebuffer.h **** /* encode */
  23:include/fb/framebuffer.h **** 
  24:include/fb/framebuffer.h **** /* decode */
  25:include/fb/framebuffer.h **** #define FB_COLOR_IS_SPECIAL(v)     (!!((v) & 0xff000000U))
  26:include/fb/framebuffer.h **** #define FB_COLOR_TO_R(v)		(((v)>>16) & 0xff)
  27:include/fb/framebuffer.h **** #define FB_COLOR_TO_G(v)		(((v)>> 8) & 0xff)
  28:include/fb/framebuffer.h **** #define FB_COLOR_TO_B(v)		( (v)      & 0xff)
  29:include/fb/framebuffer.h **** 
  30:include/fb/framebuffer.h **** struct framebuffer {
  31:include/fb/framebuffer.h **** 	char name[8];				// keep it short!
  32:include/fb/framebuffer.h **** 	void (*init)();				// (re)initialize
  33:include/fb/framebuffer.h **** 	void (*clear)();			// clear display
  34:include/fb/framebuffer.h **** 	void (*set_p)(uint16_t x,uint16_t y);	// set pixel to fg color
  35:include/fb/framebuffer.h **** 	void (*boxto)(uint16_t x,uint16_t y);	// draw box to xy
  36:include/fb/framebuffer.h **** 	void (*lineto)(uint16_t x,uint16_t y);	// draw line to xy
  37:include/fb/framebuffer.h **** 	int (*putstr)(char *c,int maxwidth);	// put text in current font to fb
  38:include/fb/framebuffer.h **** 	void (*flush)();			// flush changes
  39:include/fb/framebuffer.h **** 
  40:include/fb/framebuffer.h **** 	uint16_t width,height;			// width/height of fb
  41:include/fb/framebuffer.h **** 	uint16_t cursor_x,cursor_y;		// current cursor
  42:include/fb/framebuffer.h **** 	uint32_t fg_color,bg_color;		// current fg/bg color
  43:include/fb/framebuffer.h **** 	enum fb_font_id font;			// current font
  44:include/fb/framebuffer.h **** };
  45:include/fb/framebuffer.h **** 
  46:include/fb/framebuffer.h **** /* there is a single framebuffer, the specific driver defines
  47:include/fb/framebuffer.h ****    the "framebuffer" symbol */
  48:include/fb/framebuffer.h **** extern struct framebuffer *framebuffer;
  49:include/fb/framebuffer.h **** 
  50:include/fb/framebuffer.h **** static inline void
  51:include/fb/framebuffer.h **** fb_init(){
  52:include/fb/framebuffer.h **** 	framebuffer->init();
 227              		.loc 2 52 0
 228 01a4 38309FE5 		ldr	r3, .L5+24
 229 01a8 003093E5 		ldr	r3, [r3, #0]
 230 01ac 0FE0A0E1 		mov	lr, pc
 231 01b0 08F093E5 		ldr	pc, [r3, #8]
 232              	.LBE7:
 233              	.LBE6:
 145:board/compal_e99/init.c **** 
 146:board/compal_e99/init.c **** 	fb_init();
 147:board/compal_e99/init.c **** 
 148:board/compal_e99/init.c **** 	/* Initialize keypad driver */
 149:board/compal_e99/init.c **** 	keypad_init(keymap, with_irq);
 234              		.loc 1 149 0
 235 01b4 0410A0E1 		mov	r1, r4
 236 01b8 28009FE5 		ldr	r0, .L5+28
 237 01bc FEFFFFEB 		bl	keypad_init
 150:board/compal_e99/init.c **** 
 151:board/compal_e99/init.c **** 	/* Initialize ABB driver (uses SPI) */
 152:board/compal_e99/init.c **** 	twl3025_init();
 153:board/compal_e99/init.c **** }
 238              		.loc 1 153 0
 239 01c0 0CD08DE2 		add	sp, sp, #12
 240 01c4 7040BDE8 		ldmfd	sp!, {r4, r5, r6, lr}
 241              		.loc 1 152 0
 242 01c8 FEFFFFEA 		b	twl3025_init
 243              	.L6:
 244              		.align	2
 245              	.L5:
 246 01cc 08F0FEFF 		.word	-69624
 247 01d0 7DEB0000 		.word	60285
 248 01d4 0448FEFF 		.word	-112636
 249 01d8 F5FF0000 		.word	65525
 250 01dc F7FF0000 		.word	65527
 251 01e0 06F0FEFF 		.word	-69626
 252 01e4 00000000 		.word	framebuffer
 253 01e8 00000000 		.word	keymap
 254              	.LFE56:
 299              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 init.c
     /tmp/cc5yKx3z.s:13     .rodata:0000000000000000 keymap
     /tmp/cc5yKx3z.s:42     .text.board_init:0000000000000000 board_init
     /tmp/cc5yKx3z.s:49     .text.board_init:0000000000000000 $a
     /tmp/cc5yKx3z.s:246    .text.board_init:00000000000001cc $d

UNDEFINED SYMBOLS
wdog_enable
calypso_mem_cfg
calypso_clock_set
calypso_rhea_cfg
calypso_bootrom
calypso_exceptions_install
irq_init
sercomm_bind_uart
cons_bind_uart
uart_init
uart_baudrate
hwtimer_init
dma_init
rtc_init
timer_init
bl_mode_pwl
bl_level
keypad_init
twl3025_init
framebuffer
