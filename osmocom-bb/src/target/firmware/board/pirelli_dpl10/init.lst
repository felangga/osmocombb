   1              		.file	"init.c"
   9              	.Ltext0:
  10              		.section	.rodata
  13              	keymap:
  14 0000 12       		.byte	18
  15 0001 04       		.byte	4
  16 0002 03       		.byte	3
  17 0003 02       		.byte	2
  18 0004 09       		.byte	9
  19 0005 08       		.byte	8
  20 0006 07       		.byte	7
  21 0007 0E       		.byte	14
  22 0008 0D       		.byte	13
  23 0009 0C       		.byte	12
  24 000a 13       		.byte	19
  25 000b 11       		.byte	17
  26 000c 00       		.byte	0
  27 000d 01       		.byte	1
  28 000e 06       		.byte	6
  29 000f 0F       		.byte	15
  30 0010 10       		.byte	16
  31 0011 05       		.byte	5
  32 0012 0A       		.byte	10
  33 0013 0B       		.byte	11
  34 0014 1F       		.byte	31
  35 0015 16       		.byte	22
  36 0016 15       		.byte	21
  37 0017 17       		.byte	23
  38              		.section	.text.board_init,"ax",%progbits
  39              		.align	2
  40              		.global	board_init
  42              	board_init:
  43              	.LFB56:
  44              		.file 1 "board/pirelli_dpl10/init.c"
   1:board/pirelli_dpl10/init.c **** /* Initialization for the Pirelli DP-L10 */
   2:board/pirelli_dpl10/init.c **** 
   3:board/pirelli_dpl10/init.c **** /* (C) 2010 by Harald Welte <laforge@gnumonks.org>
   4:board/pirelli_dpl10/init.c ****  * (C) 2011-12 by Steve Markgraf <steve@steve-m.de>
   5:board/pirelli_dpl10/init.c ****  *
   6:board/pirelli_dpl10/init.c ****  * All Rights Reserved
   7:board/pirelli_dpl10/init.c ****  *
   8:board/pirelli_dpl10/init.c ****  * This program is free software; you can redistribute it and/or modify
   9:board/pirelli_dpl10/init.c ****  * it under the terms of the GNU General Public License as published by
  10:board/pirelli_dpl10/init.c ****  * the Free Software Foundation; either version 2 of the License, or
  11:board/pirelli_dpl10/init.c ****  * (at your option) any later version.
  12:board/pirelli_dpl10/init.c ****  *
  13:board/pirelli_dpl10/init.c ****  * This program is distributed in the hope that it will be useful,
  14:board/pirelli_dpl10/init.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:board/pirelli_dpl10/init.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:board/pirelli_dpl10/init.c ****  * GNU General Public License for more details.
  17:board/pirelli_dpl10/init.c ****  *
  18:board/pirelli_dpl10/init.c ****  * You should have received a copy of the GNU General Public License along
  19:board/pirelli_dpl10/init.c ****  * with this program; if not, write to the Free Software Foundation, Inc.,
  20:board/pirelli_dpl10/init.c ****  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  21:board/pirelli_dpl10/init.c ****  *
  22:board/pirelli_dpl10/init.c ****  */
  23:board/pirelli_dpl10/init.c **** 
  24:board/pirelli_dpl10/init.c **** #include <stdint.h>
  25:board/pirelli_dpl10/init.c **** #include <stdio.h>
  26:board/pirelli_dpl10/init.c **** 
  27:board/pirelli_dpl10/init.c **** #include <debug.h>
  28:board/pirelli_dpl10/init.c **** #include <ctors.h>
  29:board/pirelli_dpl10/init.c **** #include <memory.h>
  30:board/pirelli_dpl10/init.c **** #include <board.h>
  31:board/pirelli_dpl10/init.c **** #include <keypad.h>
  32:board/pirelli_dpl10/init.c **** #include <console.h>
  33:board/pirelli_dpl10/init.c **** #include <flash/cfi_flash.h>
  34:board/pirelli_dpl10/init.c **** #include <tiffs.h>
  35:board/pirelli_dpl10/init.c **** 
  36:board/pirelli_dpl10/init.c **** #include <calypso/irq.h>
  37:board/pirelli_dpl10/init.c **** #include <calypso/clock.h>
  38:board/pirelli_dpl10/init.c **** #include <calypso/dma.h>
  39:board/pirelli_dpl10/init.c **** #include <calypso/rtc.h>
  40:board/pirelli_dpl10/init.c **** #include <calypso/timer.h>
  41:board/pirelli_dpl10/init.c **** #include <uart.h>
  42:board/pirelli_dpl10/init.c **** #include <calypso/backlight.h>
  43:board/pirelli_dpl10/init.c **** 
  44:board/pirelli_dpl10/init.c **** #include <comm/sercomm.h>
  45:board/pirelli_dpl10/init.c **** #include <comm/timer.h>
  46:board/pirelli_dpl10/init.c **** 
  47:board/pirelli_dpl10/init.c **** #include <abb/twl3025.h>
  48:board/pirelli_dpl10/init.c **** #include <rf/trf6151.h>
  49:board/pirelli_dpl10/init.c **** 
  50:board/pirelli_dpl10/init.c **** #include <fb/framebuffer.h>
  51:board/pirelli_dpl10/init.c **** #include "keymap.h"
  52:board/pirelli_dpl10/init.c **** 
  53:board/pirelli_dpl10/init.c **** #define ARMIO_LATCH_OUT 0xfffe4802
  54:board/pirelli_dpl10/init.c **** #define IO_CNTL_REG	0xfffe4804
  55:board/pirelli_dpl10/init.c **** #define ARM_CONF_REG	0xfffef006
  56:board/pirelli_dpl10/init.c **** #define ASIC_CONF_REG	0xfffef008
  57:board/pirelli_dpl10/init.c **** #define IO_CONF_REG	0xfffef00a
  58:board/pirelli_dpl10/init.c **** 
  59:board/pirelli_dpl10/init.c **** static void board_io_init(void)
  60:board/pirelli_dpl10/init.c **** {
  61:board/pirelli_dpl10/init.c **** 	uint16_t reg;
  62:board/pirelli_dpl10/init.c **** 
  63:board/pirelli_dpl10/init.c **** 	reg = readw(ASIC_CONF_REG);
  64:board/pirelli_dpl10/init.c **** 	/* Set LPG and PWL pin mux like Pirelli's fw does */
  65:board/pirelli_dpl10/init.c **** 	reg |= (1 << 6) | (1 << 4);
  66:board/pirelli_dpl10/init.c **** 	/* TWL3025: Set SPI+RIF RX clock to rising edge */
  67:board/pirelli_dpl10/init.c **** 	reg |= (1 << 13) | (1 << 14);
  68:board/pirelli_dpl10/init.c **** 	reg &= ~(1 << 1);
  69:board/pirelli_dpl10/init.c **** 	writew(reg, ASIC_CONF_REG);
  70:board/pirelli_dpl10/init.c **** 
  71:board/pirelli_dpl10/init.c **** 	/* enable IO functionality */
  72:board/pirelli_dpl10/init.c **** 	reg = readw(IO_CONF_REG);
  73:board/pirelli_dpl10/init.c **** 	reg |= (1 << 9) | (1 << 4) | (1 << 3) | (1 << 2) | (1 << 1) | (1 << 0);
  74:board/pirelli_dpl10/init.c **** 	writew(reg, IO_CONF_REG);
  75:board/pirelli_dpl10/init.c **** 
  76:board/pirelli_dpl10/init.c **** 	/* set IO directions */
  77:board/pirelli_dpl10/init.c **** 	reg = readw(IO_CNTL_REG);
  78:board/pirelli_dpl10/init.c **** 	reg &= ~((1 << 7) | (1 << 4) | (1 << 1));
  79:board/pirelli_dpl10/init.c **** 	writew(reg, IO_CNTL_REG);
  80:board/pirelli_dpl10/init.c **** 
  81:board/pirelli_dpl10/init.c **** 	/* reset display controller, disable bypass mode, set nCS4 to display */
  82:board/pirelli_dpl10/init.c **** 	reg = readw(ARMIO_LATCH_OUT);
  83:board/pirelli_dpl10/init.c **** 	reg &= ~(1 << 4);
  84:board/pirelli_dpl10/init.c **** 	writew(reg, ARMIO_LATCH_OUT);
  85:board/pirelli_dpl10/init.c **** 	reg &= ~(1 << 7);
  86:board/pirelli_dpl10/init.c **** 	reg |= (1 << 4) | (1 << 1);
  87:board/pirelli_dpl10/init.c **** 	writew(reg, ARMIO_LATCH_OUT);
  88:board/pirelli_dpl10/init.c **** 
  89:board/pirelli_dpl10/init.c **** 	/* configure ADD(22), needed for second half of flash */
  90:board/pirelli_dpl10/init.c **** 	reg = readw(ARM_CONF_REG);
  91:board/pirelli_dpl10/init.c **** 	reg |= (1 << 3);
  92:board/pirelli_dpl10/init.c **** 	writew(reg, ARM_CONF_REG);
  93:board/pirelli_dpl10/init.c **** }
  94:board/pirelli_dpl10/init.c **** 
  95:board/pirelli_dpl10/init.c **** void board_init(int with_irq)
  96:board/pirelli_dpl10/init.c **** {
  45              		.loc 1 96 0
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 0, uses_anonymous_args = 0
  48              	.LVL0:
  49 0000 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
  50              	.LCFI0:
  97:board/pirelli_dpl10/init.c **** 	/* Configure the memory interface */
  98:board/pirelli_dpl10/init.c **** 	calypso_mem_cfg(CALYPSO_nCS0, 4, CALYPSO_MEM_16bit, 1);
  51              		.loc 1 98 0
  52 0004 0120A0E3 		mov	r2, #1
  53              		.loc 1 96 0
  54 0008 0CD04DE2 		sub	sp, sp, #12
  55              	.LCFI1:
  56              	.LVL1:
  57              		.loc 1 96 0
  58 000c 0040A0E1 		mov	r4, r0
  59              		.loc 1 98 0
  60 0010 0230A0E1 		mov	r3, r2
  61 0014 0000A0E3 		mov	r0, #0
  62              	.LVL2:
  63 0018 0410A0E3 		mov	r1, #4
  64 001c FEFFFFEB 		bl	calypso_mem_cfg
  99:board/pirelli_dpl10/init.c **** 	calypso_mem_cfg(CALYPSO_nCS1, 4, CALYPSO_MEM_16bit, 1);
  65              		.loc 1 99 0
  66 0020 0120A0E3 		mov	r2, #1
  67 0024 0230A0E1 		mov	r3, r2
  68 0028 0200A0E3 		mov	r0, #2
  69 002c 0410A0E3 		mov	r1, #4
  70 0030 FEFFFFEB 		bl	calypso_mem_cfg
 100:board/pirelli_dpl10/init.c **** 	calypso_mem_cfg(CALYPSO_nCS2, 5, CALYPSO_MEM_16bit, 1);
  71              		.loc 1 100 0
  72 0034 0120A0E3 		mov	r2, #1
  73 0038 0230A0E1 		mov	r3, r2
  74 003c 0400A0E3 		mov	r0, #4
  75 0040 0510A0E3 		mov	r1, #5
  76 0044 FEFFFFEB 		bl	calypso_mem_cfg
 101:board/pirelli_dpl10/init.c **** 	calypso_mem_cfg(CALYPSO_nCS3, 4, CALYPSO_MEM_16bit, 1);
  77              		.loc 1 101 0
  78 0048 0120A0E3 		mov	r2, #1
  79 004c 0230A0E1 		mov	r3, r2
  80 0050 0600A0E3 		mov	r0, #6
  81 0054 0410A0E3 		mov	r1, #4
  82 0058 FEFFFFEB 		bl	calypso_mem_cfg
 102:board/pirelli_dpl10/init.c **** 	calypso_mem_cfg(CALYPSO_CS4, 7, CALYPSO_MEM_16bit, 1);
  83              		.loc 1 102 0
  84 005c 0120A0E3 		mov	r2, #1
  85 0060 0230A0E1 		mov	r3, r2
  86 0064 0A00A0E3 		mov	r0, #10
  87 0068 0710A0E3 		mov	r1, #7
  88 006c FEFFFFEB 		bl	calypso_mem_cfg
 103:board/pirelli_dpl10/init.c **** 	calypso_mem_cfg(CALYPSO_nCS6, 0, CALYPSO_MEM_32bit, 1);
  89              		.loc 1 103 0
  90 0070 0C00A0E3 		mov	r0, #12
  91 0074 0010A0E3 		mov	r1, #0
  92 0078 0220A0E3 		mov	r2, #2
  93 007c 0130A0E3 		mov	r3, #1
  94 0080 FEFFFFEB 		bl	calypso_mem_cfg
 104:board/pirelli_dpl10/init.c **** 	calypso_mem_cfg(CALYPSO_nCS7, 0, CALYPSO_MEM_32bit, 0);
  95              		.loc 1 104 0
  96 0084 0010A0E3 		mov	r1, #0
  97 0088 0130A0E1 		mov	r3, r1
  98 008c 0800A0E3 		mov	r0, #8
  99 0090 0220A0E3 		mov	r2, #2
 100 0094 FEFFFFEB 		bl	calypso_mem_cfg
 105:board/pirelli_dpl10/init.c **** 
 106:board/pirelli_dpl10/init.c **** 	/* Set VTCXO_DIV2 = 1, configure PLL for 104 MHz and give ARM half of that */
 107:board/pirelli_dpl10/init.c **** 	calypso_clock_set(2, CALYPSO_PLL13_104_MHZ, ARM_MCLK_DIV_2);
 101              		.loc 1 107 0
 102 0098 0200A0E3 		mov	r0, #2
 108:board/pirelli_dpl10/init.c **** 
 109:board/pirelli_dpl10/init.c **** 	/* Configure the RHEA bridge with some sane default values */
 110:board/pirelli_dpl10/init.c **** 	calypso_rhea_cfg(0, 0, 0xff, 0, 1, 0, 0);
 103              		.loc 1 110 0
 104 009c 0050A0E3 		mov	r5, #0
 105              		.loc 1 107 0
 106 00a0 0020A0E1 		mov	r2, r0
 107 00a4 021BA0E3 		mov	r1, #2048
 108 00a8 FEFFFFEB 		bl	calypso_clock_set
 109              		.loc 1 110 0
 110 00ac 0160A0E3 		mov	r6, #1
 111 00b0 0510A0E1 		mov	r1, r5
 112 00b4 FF20A0E3 		mov	r2, #255
 113 00b8 0530A0E1 		mov	r3, r5
 114 00bc 0500A0E1 		mov	r0, r5
 115 00c0 00608DE5 		str	r6, [sp, #0]
 116 00c4 04508DE5 		str	r5, [sp, #4]
 117 00c8 08508DE5 		str	r5, [sp, #8]
 118 00cc FEFFFFEB 		bl	calypso_rhea_cfg
 119              	.LBB2:
 120              	.LBB3:
 121              		.loc 1 63 0
 122 00d0 2C119FE5 		ldr	r1, .L5
 123 00d4 B030D1E1 		ldrh	r3, [r1, #0]
 124              		.loc 1 68 0
 125 00d8 28219FE5 		ldr	r2, .L5+4
 126              	.LVL3:
 127              		.loc 1 67 0
 128 00dc 063A83E3 		orr	r3, r3, #24576
 129              	.LVL4:
 130 00e0 503083E3 		orr	r3, r3, #80
 131              		.loc 1 68 0
 132 00e4 022003E0 		and	r2, r3, r2
 133              		.loc 1 69 0
 134 00e8 B020C1E1 		strh	r2, [r1, #0]	@ movhi
 135              		.loc 1 72 0
 136 00ec 18219FE5 		ldr	r2, .L5+8
 137              	.LVL5:
 138 00f0 B030D2E1 		ldrh	r3, [r2, #0]
 139              	.LVL6:
 140              		.loc 1 73 0
 141 00f4 873F83E3 		orr	r3, r3, #540
 142              	.LVL7:
 143 00f8 033083E3 		orr	r3, r3, #3
 144              		.loc 1 74 0
 145 00fc B030C2E1 		strh	r3, [r2, #0]	@ movhi
 146              		.loc 1 77 0
 147 0100 08119FE5 		ldr	r1, .L5+12
 148              		.loc 1 78 0
 149 0104 08319FE5 		ldr	r3, .L5+16
 150              	.LVL8:
 151              		.loc 1 77 0
 152 0108 B020D1E1 		ldrh	r2, [r1, #0]
 153              		.loc 1 78 0
 154 010c 033002E0 		and	r3, r2, r3
 155              		.loc 1 79 0
 156 0110 B030C1E1 		strh	r3, [r1, #0]	@ movhi
 157              		.loc 1 82 0
 158 0114 FC009FE5 		ldr	r0, .L5+20
 159              		.loc 1 85 0
 160 0118 FC109FE5 		ldr	r1, .L5+24
 161              	.LVL9:
 162              		.loc 1 82 0
 163 011c B030D0E1 		ldrh	r3, [r0, #0]
 164              	.LVL10:
 165              		.loc 1 83 0
 166 0120 F8209FE5 		ldr	r2, .L5+28
 167              	.LVL11:
 168              	.LVL12:
 169              		.loc 1 85 0
 170 0124 011003E0 		and	r1, r3, r1
 171              		.loc 1 83 0
 172 0128 022003E0 		and	r2, r3, r2
 173              		.loc 1 86 0
 174 012c 121081E3 		orr	r1, r1, #18
 175              	.LVL13:
 176              		.loc 1 84 0
 177 0130 B020C0E1 		strh	r2, [r0, #0]	@ movhi
 178              		.loc 1 87 0
 179 0134 B010C0E1 		strh	r1, [r0, #0]	@ movhi
 180              		.loc 1 90 0
 181 0138 E4209FE5 		ldr	r2, .L5+32
 182              	.LVL14:
 183 013c B030D2E1 		ldrh	r3, [r2, #0]
 184              	.LVL15:
 185              		.loc 1 91 0
 186 0140 083083E3 		orr	r3, r3, #8
 187              	.LVL16:
 188              	.LBE3:
 189              	.LBE2:
 111:board/pirelli_dpl10/init.c **** 
 112:board/pirelli_dpl10/init.c **** 	/* Initialize board-specific GPIO */
 113:board/pirelli_dpl10/init.c **** 	board_io_init();
 114:board/pirelli_dpl10/init.c **** 
 115:board/pirelli_dpl10/init.c **** 	/* Enable bootrom mapping to route exception vectors to RAM */
 116:board/pirelli_dpl10/init.c **** 	calypso_bootrom(with_irq);
 190              		.loc 1 116 0
 191 0144 0400A0E1 		mov	r0, r4
 192              	.LBB4:
 193              	.LBB5:
 194              		.loc 1 92 0
 195 0148 B030C2E1 		strh	r3, [r2, #0]	@ movhi
 196              	.LBE5:
 197              	.LBE4:
 198              		.loc 1 116 0
 199 014c FEFFFFEB 		bl	calypso_bootrom
 200              	.LVL17:
 117:board/pirelli_dpl10/init.c **** 	calypso_exceptions_install();
 201              		.loc 1 117 0
 202 0150 FEFFFFEB 		bl	calypso_exceptions_install
 118:board/pirelli_dpl10/init.c **** 
 119:board/pirelli_dpl10/init.c **** 	/* Initialize interrupt controller */
 120:board/pirelli_dpl10/init.c **** 	if (with_irq)
 203              		.loc 1 120 0
 204 0154 050054E1 		cmp	r4, r5
 121:board/pirelli_dpl10/init.c **** 		irq_init();
 205              		.loc 1 121 0
 206 0158 FEFFFF1B 		blne	irq_init
 207              	.L2:
 122:board/pirelli_dpl10/init.c **** 
 123:board/pirelli_dpl10/init.c **** 	sercomm_bind_uart(UART_IRDA);
 208              		.loc 1 123 0
 209 015c 0500A0E1 		mov	r0, r5
 210 0160 FEFFFFEB 		bl	sercomm_bind_uart
 124:board/pirelli_dpl10/init.c **** 	cons_bind_uart(UART_MODEM);
 125:board/pirelli_dpl10/init.c **** 
 126:board/pirelli_dpl10/init.c **** 	/* initialize IRDA UART to be used for sercomm */
 127:board/pirelli_dpl10/init.c **** 	uart_init(UART_IRDA, with_irq);
 211              		.loc 1 127 0
 212 0164 FF4004E2 		and	r4, r4, #255
 213              	.LVL18:
 214              		.loc 1 124 0
 215 0168 0600A0E1 		mov	r0, r6
 216 016c FEFFFFEB 		bl	cons_bind_uart
 217              		.loc 1 127 0
 218 0170 0410A0E1 		mov	r1, r4
 219 0174 0500A0E1 		mov	r0, r5
 220 0178 FEFFFFEB 		bl	uart_init
 128:board/pirelli_dpl10/init.c **** 	uart_baudrate(UART_IRDA, UART_115200);
 221              		.loc 1 128 0
 222 017c 0500A0E1 		mov	r0, r5
 223 0180 0210A0E3 		mov	r1, #2
 224 0184 FEFFFFEB 		bl	uart_baudrate
 129:board/pirelli_dpl10/init.c **** 
 130:board/pirelli_dpl10/init.c **** 	/* Initialize MODEM UART to be used for old-school console code. */
 131:board/pirelli_dpl10/init.c **** 	uart_init(UART_MODEM, with_irq);
 225              		.loc 1 131 0
 226 0188 0600A0E1 		mov	r0, r6
 227 018c 0410A0E1 		mov	r1, r4
 228 0190 FEFFFFEB 		bl	uart_init
 132:board/pirelli_dpl10/init.c **** 	uart_baudrate(UART_MODEM, UART_115200);
 229              		.loc 1 132 0
 230 0194 0210A0E3 		mov	r1, #2
 231 0198 0600A0E1 		mov	r0, r6
 232 019c FEFFFFEB 		bl	uart_baudrate
 133:board/pirelli_dpl10/init.c **** 
 134:board/pirelli_dpl10/init.c **** 	/* Initialize hardware timers */
 135:board/pirelli_dpl10/init.c **** 	hwtimer_init();
 233              		.loc 1 135 0
 234 01a0 FEFFFFEB 		bl	hwtimer_init
 136:board/pirelli_dpl10/init.c **** 
 137:board/pirelli_dpl10/init.c **** 	/* Initialize DMA controller */
 138:board/pirelli_dpl10/init.c **** 	dma_init();
 235              		.loc 1 138 0
 236 01a4 FEFFFFEB 		bl	dma_init
 139:board/pirelli_dpl10/init.c **** 
 140:board/pirelli_dpl10/init.c **** 	/* Initialize real time clock */
 141:board/pirelli_dpl10/init.c **** 	rtc_init();
 237              		.loc 1 141 0
 238 01a8 FEFFFFEB 		bl	rtc_init
 142:board/pirelli_dpl10/init.c **** 
 143:board/pirelli_dpl10/init.c **** 	/* Initialize system timers (uses hwtimer 2) */
 144:board/pirelli_dpl10/init.c **** 	timer_init();
 239              		.loc 1 144 0
 240 01ac FEFFFFEB 		bl	timer_init
 145:board/pirelli_dpl10/init.c **** 
 146:board/pirelli_dpl10/init.c **** 	/* Initialize LCD driver and backlight (0 is max, 255 min brightness) */
 147:board/pirelli_dpl10/init.c **** 	bl_mode_pwl(1);
 241              		.loc 1 147 0
 242 01b0 0600A0E1 		mov	r0, r6
 243 01b4 FEFFFFEB 		bl	bl_mode_pwl
 148:board/pirelli_dpl10/init.c **** 	bl_level(50);
 244              		.loc 1 148 0
 245 01b8 3200A0E3 		mov	r0, #50
 246 01bc FEFFFFEB 		bl	bl_level
 247              	.LBB6:
 248              	.LBB7:
 249              		.file 2 "include/fb/framebuffer.h"
   1:include/fb/framebuffer.h **** #ifndef _FB_FRAMEBUFFER_H
   2:include/fb/framebuffer.h **** #define _FB_FRAMEBUFFER_H
   3:include/fb/framebuffer.h **** 
   4:include/fb/framebuffer.h **** #include <fb/font.h>
   5:include/fb/framebuffer.h **** #include <stdint.h>
   6:include/fb/framebuffer.h **** 
   7:include/fb/framebuffer.h **** /* color is encoded as <special><red><green><blue> */
   8:include/fb/framebuffer.h **** /* if a color is "special", then the RGB components most likely
   9:include/fb/framebuffer.h ****    don't make sense. Use "special" colours when you have to
  10:include/fb/framebuffer.h ****    mask out bits with transparency or you have to encode
  11:include/fb/framebuffer.h ****    colours in a fixed color palette ... */
  12:include/fb/framebuffer.h **** 
  13:include/fb/framebuffer.h **** #define FB_COLOR_WHITE		0x00ffffffU
  14:include/fb/framebuffer.h **** #define FB_COLOR_BLACK		0x00000000U
  15:include/fb/framebuffer.h **** #define FB_COLOR_TRANSP		0x01ffffffU
  16:include/fb/framebuffer.h **** 
  17:include/fb/framebuffer.h **** #define FB_COLOR_RGB(r,g,b) ((((r) & 0xff)<<16)|(((g)&0xff)<<8)|((b)&0xff))
  18:include/fb/framebuffer.h **** #define FB_COLOR_RED		FB_COLOR_RGB(0xff,0x00,0x00)
  19:include/fb/framebuffer.h **** #define FB_COLOR_GREEN		FB_COLOR_RGB(0x00,0xff,0x00)
  20:include/fb/framebuffer.h **** #define FB_COLOR_BLUE		FB_COLOR_RGB(0x00,0x00,0xff)
  21:include/fb/framebuffer.h **** 
  22:include/fb/framebuffer.h **** /* encode */
  23:include/fb/framebuffer.h **** 
  24:include/fb/framebuffer.h **** /* decode */
  25:include/fb/framebuffer.h **** #define FB_COLOR_IS_SPECIAL(v)     (!!((v) & 0xff000000U))
  26:include/fb/framebuffer.h **** #define FB_COLOR_TO_R(v)		(((v)>>16) & 0xff)
  27:include/fb/framebuffer.h **** #define FB_COLOR_TO_G(v)		(((v)>> 8) & 0xff)
  28:include/fb/framebuffer.h **** #define FB_COLOR_TO_B(v)		( (v)      & 0xff)
  29:include/fb/framebuffer.h **** 
  30:include/fb/framebuffer.h **** struct framebuffer {
  31:include/fb/framebuffer.h **** 	char name[8];				// keep it short!
  32:include/fb/framebuffer.h **** 	void (*init)();				// (re)initialize
  33:include/fb/framebuffer.h **** 	void (*clear)();			// clear display
  34:include/fb/framebuffer.h **** 	void (*set_p)(uint16_t x,uint16_t y);	// set pixel to fg color
  35:include/fb/framebuffer.h **** 	void (*boxto)(uint16_t x,uint16_t y);	// draw box to xy
  36:include/fb/framebuffer.h **** 	void (*lineto)(uint16_t x,uint16_t y);	// draw line to xy
  37:include/fb/framebuffer.h **** 	int (*putstr)(char *c,int maxwidth);	// put text in current font to fb
  38:include/fb/framebuffer.h **** 	void (*flush)();			// flush changes
  39:include/fb/framebuffer.h **** 
  40:include/fb/framebuffer.h **** 	uint16_t width,height;			// width/height of fb
  41:include/fb/framebuffer.h **** 	uint16_t cursor_x,cursor_y;		// current cursor
  42:include/fb/framebuffer.h **** 	uint32_t fg_color,bg_color;		// current fg/bg color
  43:include/fb/framebuffer.h **** 	enum fb_font_id font;			// current font
  44:include/fb/framebuffer.h **** };
  45:include/fb/framebuffer.h **** 
  46:include/fb/framebuffer.h **** /* there is a single framebuffer, the specific driver defines
  47:include/fb/framebuffer.h ****    the "framebuffer" symbol */
  48:include/fb/framebuffer.h **** extern struct framebuffer *framebuffer;
  49:include/fb/framebuffer.h **** 
  50:include/fb/framebuffer.h **** static inline void
  51:include/fb/framebuffer.h **** fb_init(){
  52:include/fb/framebuffer.h **** 	framebuffer->init();
 250              		.loc 2 52 0
 251 01c0 60309FE5 		ldr	r3, .L5+36
 252 01c4 003093E5 		ldr	r3, [r3, #0]
 253 01c8 0FE0A0E1 		mov	lr, pc
 254 01cc 08F093E5 		ldr	pc, [r3, #8]
 255              	.LBE7:
 256              	.LBE6:
 149:board/pirelli_dpl10/init.c **** 
 150:board/pirelli_dpl10/init.c **** 	fb_init();
 151:board/pirelli_dpl10/init.c **** 
 152:board/pirelli_dpl10/init.c **** 	/* Initialize keypad driver */
 153:board/pirelli_dpl10/init.c **** 	keypad_init(keymap, with_irq);
 257              		.loc 1 153 0
 258 01d0 0410A0E1 		mov	r1, r4
 259 01d4 50009FE5 		ldr	r0, .L5+40
 260 01d8 FEFFFFEB 		bl	keypad_init
 154:board/pirelli_dpl10/init.c **** 
 155:board/pirelli_dpl10/init.c **** 	/* Initialize ABB driver (uses SPI) */
 156:board/pirelli_dpl10/init.c **** 	twl3025_init();
 261              		.loc 1 156 0
 262 01dc FEFFFFEB 		bl	twl3025_init
 157:board/pirelli_dpl10/init.c **** 
 158:board/pirelli_dpl10/init.c **** 	/* enable LEDB driver of Iota for keypad backlight */
 159:board/pirelli_dpl10/init.c **** 	twl3025_reg_write(AUXLED, 0x02);
 263              		.loc 1 159 0
 264 01e0 9800A0E3 		mov	r0, #152
 265 01e4 0210A0E3 		mov	r1, #2
 266 01e8 FEFFFFEB 		bl	twl3025_reg_write
 160:board/pirelli_dpl10/init.c **** 
 161:board/pirelli_dpl10/init.c **** 	/* Initialize TIFFS reader (18 sectors of 256 KiB each) */
 162:board/pirelli_dpl10/init.c **** 	tiffs_init(0x02000000, 0x40000, 18);
 267              		.loc 1 162 0
 268 01ec 0204A0E3 		mov	r0, #33554432
 269 01f0 0117A0E3 		mov	r1, #262144
 270 01f4 1220A0E3 		mov	r2, #18
 163:board/pirelli_dpl10/init.c **** }
 271              		.loc 1 163 0
 272 01f8 0CD08DE2 		add	sp, sp, #12
 273 01fc 7040BDE8 		ldmfd	sp!, {r4, r5, r6, lr}
 274              		.loc 1 162 0
 275 0200 FEFFFFEA 		b	tiffs_init
 276              	.L6:
 277              		.align	2
 278              	.L5:
 279 0204 08F0FEFF 		.word	-69624
 280 0208 FDFF0000 		.word	65533
 281 020c 0AF0FEFF 		.word	-69622
 282 0210 0448FEFF 		.word	-112636
 283 0214 6DFF0000 		.word	65389
 284 0218 0248FEFF 		.word	-112638
 285 021c 6FFF0000 		.word	65391
 286 0220 EFFF0000 		.word	65519
 287 0224 06F0FEFF 		.word	-69626
 288 0228 00000000 		.word	framebuffer
 289 022c 00000000 		.word	keymap
 290              	.LFE56:
 335              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 init.c
     /tmp/ccAHsRUt.s:13     .rodata:0000000000000000 keymap
     /tmp/ccAHsRUt.s:42     .text.board_init:0000000000000000 board_init
     /tmp/ccAHsRUt.s:49     .text.board_init:0000000000000000 $a
     /tmp/ccAHsRUt.s:279    .text.board_init:0000000000000204 $d

UNDEFINED SYMBOLS
calypso_mem_cfg
calypso_clock_set
calypso_rhea_cfg
calypso_bootrom
calypso_exceptions_install
irq_init
sercomm_bind_uart
cons_bind_uart
uart_init
uart_baudrate
hwtimer_init
dma_init
rtc_init
timer_init
bl_mode_pwl
bl_level
keypad_init
twl3025_init
twl3025_reg_write
tiffs_init
framebuffer
