   1              		.file	"init.c"
   9              	.Ltext0:
  10              		.section	.text.board_init,"ax",%progbits
  11              		.align	2
  12              		.global	board_init
  14              	board_init:
  15              	.LFB43:
  16              		.file 1 "board/fcdev3b/init.c"
   1:board/fcdev3b/init.c **** /* Initialization for the FreeCalypso FCDEV3B modem */
   2:board/fcdev3b/init.c **** 
   3:board/fcdev3b/init.c **** /* Based on board/gta0x/init.c with the following obnoxious legalese:
   4:board/fcdev3b/init.c ****  *
   5:board/fcdev3b/init.c ****  * (C) 2010 by Harald Welte <laforge@gnumonks.org>
   6:board/fcdev3b/init.c ****  *
   7:board/fcdev3b/init.c ****  * All Rights Reserved
   8:board/fcdev3b/init.c ****  *
   9:board/fcdev3b/init.c ****  * This program is free software; you can redistribute it and/or modify
  10:board/fcdev3b/init.c ****  * it under the terms of the GNU General Public License as published by
  11:board/fcdev3b/init.c ****  * the Free Software Foundation; either version 2 of the License, or
  12:board/fcdev3b/init.c ****  * (at your option) any later version.
  13:board/fcdev3b/init.c ****  *
  14:board/fcdev3b/init.c ****  * This program is distributed in the hope that it will be useful,
  15:board/fcdev3b/init.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:board/fcdev3b/init.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:board/fcdev3b/init.c ****  * GNU General Public License for more details.
  18:board/fcdev3b/init.c ****  *
  19:board/fcdev3b/init.c ****  * You should have received a copy of the GNU General Public License along
  20:board/fcdev3b/init.c ****  * with this program; if not, write to the Free Software Foundation, Inc.,
  21:board/fcdev3b/init.c ****  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  22:board/fcdev3b/init.c ****  *
  23:board/fcdev3b/init.c ****  */
  24:board/fcdev3b/init.c **** 
  25:board/fcdev3b/init.c **** #include <stdint.h>
  26:board/fcdev3b/init.c **** #include <stdio.h>
  27:board/fcdev3b/init.c **** 
  28:board/fcdev3b/init.c **** #include <debug.h>
  29:board/fcdev3b/init.c **** #include <ctors.h>
  30:board/fcdev3b/init.c **** #include <memory.h>
  31:board/fcdev3b/init.c **** #include <board.h>
  32:board/fcdev3b/init.c **** #include <keypad.h>
  33:board/fcdev3b/init.c **** #include <console.h>
  34:board/fcdev3b/init.c **** #include <flash/cfi_flash.h>
  35:board/fcdev3b/init.c **** #include <tiffs.h>
  36:board/fcdev3b/init.c **** 
  37:board/fcdev3b/init.c **** #include <calypso/irq.h>
  38:board/fcdev3b/init.c **** #include <calypso/clock.h>
  39:board/fcdev3b/init.c **** #include <calypso/dma.h>
  40:board/fcdev3b/init.c **** #include <calypso/rtc.h>
  41:board/fcdev3b/init.c **** #include <calypso/timer.h>
  42:board/fcdev3b/init.c **** #include <uart.h>
  43:board/fcdev3b/init.c **** 
  44:board/fcdev3b/init.c **** #include <comm/sercomm.h>
  45:board/fcdev3b/init.c **** #include <comm/timer.h>
  46:board/fcdev3b/init.c **** 
  47:board/fcdev3b/init.c **** #include <abb/twl3025.h>
  48:board/fcdev3b/init.c **** #include <rf/trf6151.h>
  49:board/fcdev3b/init.c **** 
  50:board/fcdev3b/init.c **** #define ARMIO_LATCH_OUT 0xfffe4802
  51:board/fcdev3b/init.c **** #define IO_CNTL_REG	0xfffe4804
  52:board/fcdev3b/init.c **** #define ARM_CONF_REG	0xfffef006
  53:board/fcdev3b/init.c **** #define ASIC_CONF_REG	0xfffef008
  54:board/fcdev3b/init.c **** #define IO_CONF_REG	0xfffef00a
  55:board/fcdev3b/init.c **** 
  56:board/fcdev3b/init.c **** static void board_io_init(void)
  57:board/fcdev3b/init.c **** {
  58:board/fcdev3b/init.c **** 	uint16_t reg;
  59:board/fcdev3b/init.c **** 
  60:board/fcdev3b/init.c **** 	reg = readw(ASIC_CONF_REG);
  61:board/fcdev3b/init.c **** 	/* TWL3025: Set SPI+RIF RX clock to rising edge */
  62:board/fcdev3b/init.c **** 	reg |= (1 << 13) | (1 << 14);
  63:board/fcdev3b/init.c **** 	writew(reg, ASIC_CONF_REG);
  64:board/fcdev3b/init.c **** 
  65:board/fcdev3b/init.c **** 	/*
  66:board/fcdev3b/init.c **** 	 * Most Calypso peripheral interface signals are unconnected
  67:board/fcdev3b/init.c **** 	 * on this modem.  We configure them to be GPIOs in IO_CONF_REG,
  68:board/fcdev3b/init.c **** 	 * then configure them to be outputs in IO_CNTL_REG, then set
  69:board/fcdev3b/init.c **** 	 * the outputs to 0 in ARMIO_LATCH_OUT.
  70:board/fcdev3b/init.c **** 	 *
  71:board/fcdev3b/init.c **** 	 * Differences from Openmoko GTA0x:
  72:board/fcdev3b/init.c **** 	 *
  73:board/fcdev3b/init.c **** 	 * GPIO1 output needs to be 1 to enable the loudspeaker amplifier
  74:board/fcdev3b/init.c **** 	 * GPIO3 needs to be configured as an input
  75:board/fcdev3b/init.c **** 	 * I/O 9-12 are MCSI rather than GPIOs
  76:board/fcdev3b/init.c **** 	 */
  77:board/fcdev3b/init.c **** 	writew(0x0215, IO_CONF_REG);
  78:board/fcdev3b/init.c **** 	writew(0xDC08, IO_CNTL_REG);
  79:board/fcdev3b/init.c **** 	writew(0x0002, ARMIO_LATCH_OUT);
  80:board/fcdev3b/init.c **** 
  81:board/fcdev3b/init.c **** 	/* configure ADD(22), needed for second half of flash */
  82:board/fcdev3b/init.c **** 	reg = readw(ARM_CONF_REG);
  83:board/fcdev3b/init.c **** 	reg |= (1 << 3);
  84:board/fcdev3b/init.c **** 	writew(reg, ARM_CONF_REG);
  85:board/fcdev3b/init.c **** }
  86:board/fcdev3b/init.c **** 
  87:board/fcdev3b/init.c **** void board_init(int with_irq)
  88:board/fcdev3b/init.c **** {
  17              		.loc 1 88 0
  18              		@ args = 0, pretend = 0, frame = 0
  19              		@ frame_needed = 0, uses_anonymous_args = 0
  20              	.LVL0:
  21 0000 F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
  22              	.LCFI0:
  89:board/fcdev3b/init.c **** 	/* Configure the memory interface */
  90:board/fcdev3b/init.c **** 	/* Using the same settings as the official FreeCalypso fw */
  91:board/fcdev3b/init.c **** 	calypso_mem_cfg(CALYPSO_nCS0, 4, CALYPSO_MEM_16bit, 1);
  23              		.loc 1 91 0
  24 0004 0120A0E3 		mov	r2, #1
  25              		.loc 1 88 0
  26 0008 0CD04DE2 		sub	sp, sp, #12
  27              	.LCFI1:
  28              	.LVL1:
  29              		.loc 1 88 0
  30 000c 0040A0E1 		mov	r4, r0
  31              		.loc 1 91 0
  32 0010 0230A0E1 		mov	r3, r2
  33 0014 0410A0E3 		mov	r1, #4
  92:board/fcdev3b/init.c **** 	calypso_mem_cfg(CALYPSO_nCS1, 4, CALYPSO_MEM_16bit, 1);
  93:board/fcdev3b/init.c **** 	calypso_mem_cfg(CALYPSO_nCS2, 4, CALYPSO_MEM_16bit, 1);
  94:board/fcdev3b/init.c **** 	calypso_mem_cfg(CALYPSO_nCS3, 4, CALYPSO_MEM_16bit, 1);
  95:board/fcdev3b/init.c **** 	calypso_mem_cfg(CALYPSO_CS4, 4, CALYPSO_MEM_16bit, 1);
  96:board/fcdev3b/init.c **** 	calypso_mem_cfg(CALYPSO_nCS6, 0, CALYPSO_MEM_32bit, 1);
  97:board/fcdev3b/init.c **** 	calypso_mem_cfg(CALYPSO_nCS7, 0, CALYPSO_MEM_32bit, 0);
  98:board/fcdev3b/init.c **** 
  99:board/fcdev3b/init.c **** 	/* Set VTCXO_DIV2 = 1, configure PLL for 104 MHz and give ARM half of that */
 100:board/fcdev3b/init.c **** 	calypso_clock_set(2, CALYPSO_PLL13_104_MHZ, ARM_MCLK_DIV_2);
 101:board/fcdev3b/init.c **** 
 102:board/fcdev3b/init.c **** 	/* Configure the RHEA bridge with some sane default values */
 103:board/fcdev3b/init.c **** 	calypso_rhea_cfg(0, 0, 0xff, 0, 1, 0, 0);
 104:board/fcdev3b/init.c **** 
 105:board/fcdev3b/init.c **** 	/* Initialize board-specific GPIO */
 106:board/fcdev3b/init.c **** 	board_io_init();
 107:board/fcdev3b/init.c **** 
 108:board/fcdev3b/init.c **** 	/* Enable bootrom mapping to route exception vectors to RAM */
 109:board/fcdev3b/init.c **** 	calypso_bootrom(with_irq);
 110:board/fcdev3b/init.c **** 	calypso_exceptions_install();
 111:board/fcdev3b/init.c **** 
 112:board/fcdev3b/init.c **** 	/* Initialize interrupt controller */
 113:board/fcdev3b/init.c **** 	if (with_irq)
 114:board/fcdev3b/init.c **** 		irq_init();
 115:board/fcdev3b/init.c **** 
 116:board/fcdev3b/init.c **** 	sercomm_bind_uart(UART_MODEM);
 117:board/fcdev3b/init.c **** 	cons_bind_uart(UART_IRDA);
 118:board/fcdev3b/init.c **** 
 119:board/fcdev3b/init.c **** 	/* initialize MODEM UART to be used for sercomm */
 120:board/fcdev3b/init.c **** 	uart_init(UART_MODEM, with_irq);
  34              		.loc 1 120 0
  35 0018 FF7000E2 		and	r7, r0, #255
  36              		.loc 1 91 0
  37 001c 0000A0E3 		mov	r0, #0
  38              	.LVL2:
  39 0020 FEFFFFEB 		bl	calypso_mem_cfg
  40              		.loc 1 92 0
  41 0024 0120A0E3 		mov	r2, #1
  42 0028 0230A0E1 		mov	r3, r2
  43 002c 0200A0E3 		mov	r0, #2
  44 0030 0410A0E3 		mov	r1, #4
  45 0034 FEFFFFEB 		bl	calypso_mem_cfg
  46              		.loc 1 93 0
  47 0038 0400A0E3 		mov	r0, #4
  48 003c 0120A0E3 		mov	r2, #1
  49 0040 0010A0E1 		mov	r1, r0
  50 0044 0230A0E1 		mov	r3, r2
  51 0048 FEFFFFEB 		bl	calypso_mem_cfg
  52              		.loc 1 94 0
  53 004c 0120A0E3 		mov	r2, #1
  54 0050 0230A0E1 		mov	r3, r2
  55 0054 0600A0E3 		mov	r0, #6
  56 0058 0410A0E3 		mov	r1, #4
  57 005c FEFFFFEB 		bl	calypso_mem_cfg
  58              		.loc 1 95 0
  59 0060 0120A0E3 		mov	r2, #1
  60 0064 0230A0E1 		mov	r3, r2
  61 0068 0A00A0E3 		mov	r0, #10
  62 006c 0410A0E3 		mov	r1, #4
  63 0070 FEFFFFEB 		bl	calypso_mem_cfg
  64              		.loc 1 96 0
  65 0074 0C00A0E3 		mov	r0, #12
  66 0078 0010A0E3 		mov	r1, #0
  67 007c 0220A0E3 		mov	r2, #2
  68 0080 0130A0E3 		mov	r3, #1
  69 0084 FEFFFFEB 		bl	calypso_mem_cfg
  70              		.loc 1 97 0
  71 0088 0010A0E3 		mov	r1, #0
  72 008c 0130A0E1 		mov	r3, r1
  73 0090 0800A0E3 		mov	r0, #8
  74 0094 0220A0E3 		mov	r2, #2
  75 0098 FEFFFFEB 		bl	calypso_mem_cfg
  76              		.loc 1 100 0
  77 009c 0200A0E3 		mov	r0, #2
  78              		.loc 1 103 0
  79 00a0 0050A0E3 		mov	r5, #0
  80              		.loc 1 100 0
  81 00a4 0020A0E1 		mov	r2, r0
  82 00a8 021BA0E3 		mov	r1, #2048
  83 00ac FEFFFFEB 		bl	calypso_clock_set
  84              		.loc 1 103 0
  85 00b0 0160A0E3 		mov	r6, #1
  86 00b4 FF20A0E3 		mov	r2, #255
  87 00b8 0530A0E1 		mov	r3, r5
  88 00bc 0510A0E1 		mov	r1, r5
  89 00c0 0500A0E1 		mov	r0, r5
  90 00c4 00608DE5 		str	r6, [sp, #0]
  91 00c8 04508DE5 		str	r5, [sp, #4]
  92 00cc 08508DE5 		str	r5, [sp, #8]
  93 00d0 FEFFFFEB 		bl	calypso_rhea_cfg
  94              	.LBB2:
  95              	.LBB3:
  96              		.loc 1 60 0
  97 00d4 BC209FE5 		ldr	r2, .L5
  98 00d8 B030D2E1 		ldrh	r3, [r2, #0]
  99              		.loc 1 62 0
 100 00dc 063A83E3 		orr	r3, r3, #24576
 101              	.LVL3:
 102              		.loc 1 63 0
 103 00e0 B030C2E1 		strh	r3, [r2, #0]	@ movhi
 104              		.loc 1 77 0
 105 00e4 B0209FE5 		ldr	r2, .L5+4
 106 00e8 B0309FE5 		ldr	r3, .L5+8
 107              	.LVL4:
 108 00ec B020C3E1 		strh	r2, [r3, #0]	@ movhi
 109              		.loc 1 78 0
 110 00f0 AC209FE5 		ldr	r2, .L5+12
 111 00f4 AC309FE5 		ldr	r3, .L5+16
 112              		.loc 1 79 0
 113 00f8 0210A0E3 		mov	r1, #2	@ movhi
 114              		.loc 1 78 0
 115 00fc B020C3E1 		strh	r2, [r3, #0]	@ movhi
 116              		.loc 1 79 0
 117 0100 023043E2 		sub	r3, r3, #2
 118              		.loc 1 82 0
 119 0104 A0209FE5 		ldr	r2, .L5+20
 120              		.loc 1 79 0
 121 0108 B010C3E1 		strh	r1, [r3, #0]	@ movhi
 122              		.loc 1 82 0
 123 010c B030D2E1 		ldrh	r3, [r2, #0]
 124              		.loc 1 83 0
 125 0110 083083E3 		orr	r3, r3, #8
 126              	.LVL5:
 127              	.LBE3:
 128              	.LBE2:
 129              		.loc 1 109 0
 130 0114 0400A0E1 		mov	r0, r4
 131              	.LBB4:
 132              	.LBB5:
 133              		.loc 1 84 0
 134 0118 B030C2E1 		strh	r3, [r2, #0]	@ movhi
 135              	.LBE5:
 136              	.LBE4:
 137              		.loc 1 109 0
 138 011c FEFFFFEB 		bl	calypso_bootrom
 139              	.LVL6:
 140              		.loc 1 110 0
 141 0120 FEFFFFEB 		bl	calypso_exceptions_install
 142              		.loc 1 113 0
 143 0124 050054E1 		cmp	r4, r5
 144              		.loc 1 114 0
 145 0128 FEFFFF1B 		blne	irq_init
 146              	.L2:
 147              		.loc 1 116 0
 148 012c 0600A0E1 		mov	r0, r6
 149 0130 FEFFFFEB 		bl	sercomm_bind_uart
 150              		.loc 1 117 0
 151 0134 0500A0E1 		mov	r0, r5
 152 0138 FEFFFFEB 		bl	cons_bind_uart
 153              		.loc 1 120 0
 154 013c 0710A0E1 		mov	r1, r7
 155 0140 0600A0E1 		mov	r0, r6
 156 0144 FEFFFFEB 		bl	uart_init
 121:board/fcdev3b/init.c **** 	uart_baudrate(UART_MODEM, UART_115200);
 157              		.loc 1 121 0
 158 0148 0600A0E1 		mov	r0, r6
 159 014c 0210A0E3 		mov	r1, #2
 160 0150 FEFFFFEB 		bl	uart_baudrate
 122:board/fcdev3b/init.c **** 
 123:board/fcdev3b/init.c **** 	/* Initialize IRDA UART to be used for old-school console code.
 124:board/fcdev3b/init.c **** 	 * note: IRDA uart only accessible on C115 and C117 PCB */
 125:board/fcdev3b/init.c **** 	uart_init(UART_IRDA, with_irq);
 161              		.loc 1 125 0
 162 0154 0500A0E1 		mov	r0, r5
 163 0158 0710A0E1 		mov	r1, r7
 164 015c FEFFFFEB 		bl	uart_init
 126:board/fcdev3b/init.c **** 	uart_baudrate(UART_IRDA, UART_115200);
 165              		.loc 1 126 0
 166 0160 0210A0E3 		mov	r1, #2
 167 0164 0500A0E1 		mov	r0, r5
 168 0168 FEFFFFEB 		bl	uart_baudrate
 127:board/fcdev3b/init.c **** 
 128:board/fcdev3b/init.c **** 	/* Initialize hardware timers */
 129:board/fcdev3b/init.c **** 	hwtimer_init();
 169              		.loc 1 129 0
 170 016c FEFFFFEB 		bl	hwtimer_init
 130:board/fcdev3b/init.c **** 
 131:board/fcdev3b/init.c **** 	/* Initialize DMA controller */
 132:board/fcdev3b/init.c **** 	dma_init();
 171              		.loc 1 132 0
 172 0170 FEFFFFEB 		bl	dma_init
 133:board/fcdev3b/init.c **** 
 134:board/fcdev3b/init.c **** 	/* Initialize real time clock */
 135:board/fcdev3b/init.c **** 	rtc_init();
 173              		.loc 1 135 0
 174 0174 FEFFFFEB 		bl	rtc_init
 136:board/fcdev3b/init.c **** 
 137:board/fcdev3b/init.c **** 	/* Initialize system timers (uses hwtimer 2) */
 138:board/fcdev3b/init.c **** 	timer_init();
 175              		.loc 1 138 0
 176 0178 FEFFFFEB 		bl	timer_init
 139:board/fcdev3b/init.c **** 
 140:board/fcdev3b/init.c **** 	/* Initialize ABB driver (uses SPI) */
 141:board/fcdev3b/init.c **** 	twl3025_init();
 177              		.loc 1 141 0
 178 017c FEFFFFEB 		bl	twl3025_init
 142:board/fcdev3b/init.c **** 
 143:board/fcdev3b/init.c **** 	/* Initialize TIFFS reader (8 sectors of 256 KiB each) */
 144:board/fcdev3b/init.c **** 	tiffs_init(0x01800000, 0x40000, 8);
 179              		.loc 1 144 0
 180 0180 0605A0E3 		mov	r0, #25165824
 181 0184 0117A0E3 		mov	r1, #262144
 182 0188 0820A0E3 		mov	r2, #8
 145:board/fcdev3b/init.c **** }
 183              		.loc 1 145 0
 184 018c 0CD08DE2 		add	sp, sp, #12
 185 0190 F040BDE8 		ldmfd	sp!, {r4, r5, r6, r7, lr}
 186              		.loc 1 144 0
 187 0194 FEFFFFEA 		b	tiffs_init
 188              	.L6:
 189              		.align	2
 190              	.L5:
 191 0198 08F0FEFF 		.word	-69624
 192 019c 15020000 		.word	533
 193 01a0 0AF0FEFF 		.word	-69622
 194 01a4 08DCFFFF 		.word	-9208
 195 01a8 0448FEFF 		.word	-112636
 196 01ac 06F0FEFF 		.word	-69626
 197              	.LFE43:
 242              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 init.c
     /tmp/ccELKfcq.s:14     .text.board_init:0000000000000000 board_init
     /tmp/ccELKfcq.s:21     .text.board_init:0000000000000000 $a
     /tmp/ccELKfcq.s:191    .text.board_init:0000000000000198 $d

UNDEFINED SYMBOLS
calypso_mem_cfg
calypso_clock_set
calypso_rhea_cfg
calypso_bootrom
calypso_exceptions_install
irq_init
sercomm_bind_uart
cons_bind_uart
uart_init
uart_baudrate
hwtimer_init
dma_init
rtc_init
timer_init
twl3025_init
tiffs_init
