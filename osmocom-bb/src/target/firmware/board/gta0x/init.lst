   1              		.file	"init.c"
   9              	.Ltext0:
  10              		.section	.rodata
  13              	keymap:
  14 0000 0D       		.byte	13
  15 0001 0F       		.byte	15
  16 0002 0A       		.byte	10
  17 0003 05       		.byte	5
  18 0004 10       		.byte	16
  19 0005 0B       		.byte	11
  20 0006 06       		.byte	6
  21 0007 11       		.byte	17
  22 0008 0C       		.byte	12
  23 0009 07       		.byte	7
  24 000a 12       		.byte	18
  25 000b 08       		.byte	8
  26 000c 0E       		.byte	14
  27 000d 13       		.byte	19
  28 000e 09       		.byte	9
  29 000f 01       		.byte	1
  30 0010 02       		.byte	2
  31 0011 03       		.byte	3
  32 0012 04       		.byte	4
  33 0013 00       		.byte	0
  34 0014 18       		.byte	24
  35 0015 1E       		.byte	30
  36 0016 1E       		.byte	30
  37 0017 1E       		.byte	30
  38              		.section	.text.board_init,"ax",%progbits
  39              		.align	2
  40              		.global	board_init
  42              	board_init:
  43              	.LFB43:
  44              		.file 1 "board/gta0x/init.c"
   1:board/gta0x/init.c **** /* Initialization for the Openmoko Freerunner modem */
   2:board/gta0x/init.c **** 
   3:board/gta0x/init.c **** /* (C) 2010 by Harald Welte <laforge@gnumonks.org>
   4:board/gta0x/init.c ****  *
   5:board/gta0x/init.c ****  * All Rights Reserved
   6:board/gta0x/init.c ****  *
   7:board/gta0x/init.c ****  * This program is free software; you can redistribute it and/or modify
   8:board/gta0x/init.c ****  * it under the terms of the GNU General Public License as published by
   9:board/gta0x/init.c ****  * the Free Software Foundation; either version 2 of the License, or
  10:board/gta0x/init.c ****  * (at your option) any later version.
  11:board/gta0x/init.c ****  *
  12:board/gta0x/init.c ****  * This program is distributed in the hope that it will be useful,
  13:board/gta0x/init.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:board/gta0x/init.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:board/gta0x/init.c ****  * GNU General Public License for more details.
  16:board/gta0x/init.c ****  *
  17:board/gta0x/init.c ****  * You should have received a copy of the GNU General Public License along
  18:board/gta0x/init.c ****  * with this program; if not, write to the Free Software Foundation, Inc.,
  19:board/gta0x/init.c ****  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  20:board/gta0x/init.c ****  *
  21:board/gta0x/init.c ****  */
  22:board/gta0x/init.c **** 
  23:board/gta0x/init.c **** #include <stdint.h>
  24:board/gta0x/init.c **** #include <stdio.h>
  25:board/gta0x/init.c **** 
  26:board/gta0x/init.c **** #include <debug.h>
  27:board/gta0x/init.c **** #include <ctors.h>
  28:board/gta0x/init.c **** #include <memory.h>
  29:board/gta0x/init.c **** #include <board.h>
  30:board/gta0x/init.c **** #include <keypad.h>
  31:board/gta0x/init.c **** #include <console.h>
  32:board/gta0x/init.c **** #include <flash/cfi_flash.h>
  33:board/gta0x/init.c **** #include <tiffs.h>
  34:board/gta0x/init.c **** 
  35:board/gta0x/init.c **** #include <calypso/irq.h>
  36:board/gta0x/init.c **** #include <calypso/clock.h>
  37:board/gta0x/init.c **** #include <calypso/dma.h>
  38:board/gta0x/init.c **** #include <calypso/rtc.h>
  39:board/gta0x/init.c **** #include <calypso/timer.h>
  40:board/gta0x/init.c **** #include <uart.h>
  41:board/gta0x/init.c **** #include <calypso/backlight.h>
  42:board/gta0x/init.c **** 
  43:board/gta0x/init.c **** #include <comm/sercomm.h>
  44:board/gta0x/init.c **** #include <comm/timer.h>
  45:board/gta0x/init.c **** 
  46:board/gta0x/init.c **** #include <abb/twl3025.h>
  47:board/gta0x/init.c **** #include <rf/trf6151.h>
  48:board/gta0x/init.c **** #include "../compal/keymap.h"
  49:board/gta0x/init.c **** 
  50:board/gta0x/init.c **** #define ARMIO_LATCH_OUT 0xfffe4802
  51:board/gta0x/init.c **** #define IO_CNTL_REG	0xfffe4804
  52:board/gta0x/init.c **** #define ASIC_CONF_REG	0xfffef008
  53:board/gta0x/init.c **** #define IO_CONF_REG	0xfffef00a
  54:board/gta0x/init.c **** 
  55:board/gta0x/init.c **** static void board_io_init(void)
  56:board/gta0x/init.c **** {
  57:board/gta0x/init.c **** 	uint16_t reg;
  58:board/gta0x/init.c **** 
  59:board/gta0x/init.c **** 	reg = readw(ASIC_CONF_REG);
  60:board/gta0x/init.c **** 	/* TWL3025: Set SPI+RIF RX clock to rising edge */
  61:board/gta0x/init.c **** 	reg |= (1 << 13) | (1 << 14);
  62:board/gta0x/init.c **** 	writew(reg, ASIC_CONF_REG);
  63:board/gta0x/init.c **** 
  64:board/gta0x/init.c **** 	/*
  65:board/gta0x/init.c **** 	 * Most Calypso peripheral interface signals are unconnected
  66:board/gta0x/init.c **** 	 * on this modem.  We configure them to be GPIOs in IO_CONF_REG,
  67:board/gta0x/init.c **** 	 * then configure them to be outputs in IO_CNTL_REG, then set
  68:board/gta0x/init.c **** 	 * the outputs to 0 in ARMIO_LATCH_OUT.
  69:board/gta0x/init.c **** 	 */
  70:board/gta0x/init.c **** 	writew(0x03F5, IO_CONF_REG);
  71:board/gta0x/init.c **** 	writew(0xC000, IO_CNTL_REG);
  72:board/gta0x/init.c **** 	writew(0x0000, ARMIO_LATCH_OUT);
  73:board/gta0x/init.c **** }
  74:board/gta0x/init.c **** 
  75:board/gta0x/init.c **** void board_init(int with_irq)
  76:board/gta0x/init.c **** {
  45              		.loc 1 76 0
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 0, uses_anonymous_args = 0
  48              	.LVL0:
  49 0000 F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
  50              	.LCFI0:
  77:board/gta0x/init.c **** 	/* Configure the memory interface */
  78:board/gta0x/init.c **** 	calypso_mem_cfg(CALYPSO_nCS0, 3, CALYPSO_MEM_16bit, 1);
  51              		.loc 1 78 0
  52 0004 0120A0E3 		mov	r2, #1
  53              		.loc 1 76 0
  54 0008 0CD04DE2 		sub	sp, sp, #12
  55              	.LCFI1:
  56              	.LVL1:
  57              		.loc 1 76 0
  58 000c 0040A0E1 		mov	r4, r0
  59              		.loc 1 78 0
  60 0010 0230A0E1 		mov	r3, r2
  61 0014 0310A0E3 		mov	r1, #3
  79:board/gta0x/init.c **** 	calypso_mem_cfg(CALYPSO_nCS1, 3, CALYPSO_MEM_16bit, 1);
  80:board/gta0x/init.c **** 	calypso_mem_cfg(CALYPSO_nCS2, 5, CALYPSO_MEM_16bit, 1);
  81:board/gta0x/init.c **** 	calypso_mem_cfg(CALYPSO_nCS3, 5, CALYPSO_MEM_16bit, 1);
  82:board/gta0x/init.c **** 	calypso_mem_cfg(CALYPSO_CS4, 0, CALYPSO_MEM_8bit, 1);
  83:board/gta0x/init.c **** 	calypso_mem_cfg(CALYPSO_nCS6, 0, CALYPSO_MEM_32bit, 1);
  84:board/gta0x/init.c **** 	calypso_mem_cfg(CALYPSO_nCS7, 0, CALYPSO_MEM_32bit, 0);
  85:board/gta0x/init.c **** 
  86:board/gta0x/init.c **** 	/* Set VTCXO_DIV2 = 1, configure PLL for 104 MHz and give ARM half of that */
  87:board/gta0x/init.c **** 	calypso_clock_set(2, CALYPSO_PLL13_104_MHZ, ARM_MCLK_DIV_2);
  88:board/gta0x/init.c **** 
  89:board/gta0x/init.c **** 	/* Configure the RHEA bridge with some sane default values */
  90:board/gta0x/init.c **** 	calypso_rhea_cfg(0, 0, 0xff, 0, 1, 0, 0);
  91:board/gta0x/init.c **** 
  92:board/gta0x/init.c **** 	/* Initialize board-specific GPIO */
  93:board/gta0x/init.c **** 	board_io_init();
  94:board/gta0x/init.c **** 
  95:board/gta0x/init.c **** 	/* Enable bootrom mapping to route exception vectors to RAM */
  96:board/gta0x/init.c **** 	calypso_bootrom(with_irq);
  97:board/gta0x/init.c **** 	calypso_exceptions_install();
  98:board/gta0x/init.c **** 
  99:board/gta0x/init.c **** 	/* Initialize interrupt controller */
 100:board/gta0x/init.c **** 	if (with_irq)
 101:board/gta0x/init.c **** 		irq_init();
 102:board/gta0x/init.c **** 
 103:board/gta0x/init.c **** 	sercomm_bind_uart(UART_MODEM);
 104:board/gta0x/init.c **** 	cons_bind_uart(UART_IRDA);
 105:board/gta0x/init.c **** 
 106:board/gta0x/init.c **** 	/* initialize MODEM UART to be used for sercomm */
 107:board/gta0x/init.c **** 	uart_init(UART_MODEM, with_irq);
  62              		.loc 1 107 0
  63 0018 FF7000E2 		and	r7, r0, #255
  64              		.loc 1 78 0
  65 001c 0000A0E3 		mov	r0, #0
  66              	.LVL2:
  67 0020 FEFFFFEB 		bl	calypso_mem_cfg
  68              		.loc 1 79 0
  69 0024 0120A0E3 		mov	r2, #1
  70 0028 0230A0E1 		mov	r3, r2
  71 002c 0200A0E3 		mov	r0, #2
  72 0030 0310A0E3 		mov	r1, #3
  73 0034 FEFFFFEB 		bl	calypso_mem_cfg
  74              		.loc 1 80 0
  75 0038 0120A0E3 		mov	r2, #1
  76 003c 0230A0E1 		mov	r3, r2
  77 0040 0400A0E3 		mov	r0, #4
  78 0044 0510A0E3 		mov	r1, #5
  79 0048 FEFFFFEB 		bl	calypso_mem_cfg
  80              		.loc 1 81 0
  81 004c 0120A0E3 		mov	r2, #1
  82 0050 0230A0E1 		mov	r3, r2
  83 0054 0600A0E3 		mov	r0, #6
  84 0058 0510A0E3 		mov	r1, #5
  85 005c FEFFFFEB 		bl	calypso_mem_cfg
  86              		.loc 1 82 0
  87 0060 0010A0E3 		mov	r1, #0
  88 0064 0120A0E1 		mov	r2, r1
  89 0068 0A00A0E3 		mov	r0, #10
  90 006c 0130A0E3 		mov	r3, #1
  91 0070 FEFFFFEB 		bl	calypso_mem_cfg
  92              		.loc 1 83 0
  93 0074 0C00A0E3 		mov	r0, #12
  94 0078 0010A0E3 		mov	r1, #0
  95 007c 0220A0E3 		mov	r2, #2
  96 0080 0130A0E3 		mov	r3, #1
  97 0084 FEFFFFEB 		bl	calypso_mem_cfg
  98              		.loc 1 84 0
  99 0088 0010A0E3 		mov	r1, #0
 100 008c 0130A0E1 		mov	r3, r1
 101 0090 0800A0E3 		mov	r0, #8
 102 0094 0220A0E3 		mov	r2, #2
 103 0098 FEFFFFEB 		bl	calypso_mem_cfg
 104              		.loc 1 87 0
 105 009c 0200A0E3 		mov	r0, #2
 106              		.loc 1 90 0
 107 00a0 0050A0E3 		mov	r5, #0
 108              		.loc 1 87 0
 109 00a4 0020A0E1 		mov	r2, r0
 110 00a8 021BA0E3 		mov	r1, #2048
 111 00ac FEFFFFEB 		bl	calypso_clock_set
 112              		.loc 1 90 0
 113 00b0 0160A0E3 		mov	r6, #1
 114 00b4 0510A0E1 		mov	r1, r5
 115 00b8 FF20A0E3 		mov	r2, #255
 116 00bc 0530A0E1 		mov	r3, r5
 117 00c0 0500A0E1 		mov	r0, r5
 118 00c4 00608DE5 		str	r6, [sp, #0]
 119 00c8 04508DE5 		str	r5, [sp, #4]
 120 00cc 08508DE5 		str	r5, [sp, #8]
 121 00d0 FEFFFFEB 		bl	calypso_rhea_cfg
 122              	.LBB2:
 123              	.LBB3:
 124              		.loc 1 59 0
 125 00d4 C4209FE5 		ldr	r2, .L5
 126 00d8 B030D2E1 		ldrh	r3, [r2, #0]
 127              		.loc 1 61 0
 128 00dc 063A83E3 		orr	r3, r3, #24576
 129              	.LVL3:
 130              		.loc 1 62 0
 131 00e0 B030C2E1 		strh	r3, [r2, #0]	@ movhi
 132              		.loc 1 70 0
 133 00e4 B8209FE5 		ldr	r2, .L5+4
 134 00e8 B8309FE5 		ldr	r3, .L5+8
 135              	.LVL4:
 136 00ec B020C3E1 		strh	r2, [r3, #0]	@ movhi
 137              		.loc 1 71 0
 138 00f0 B4309FE5 		ldr	r3, .L5+12
 139 00f4 0329A0E3 		mov	r2, #49152
 140 00f8 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 141              		.loc 1 72 0
 142 00fc 023043E2 		sub	r3, r3, #2
 143              	.LBE3:
 144              	.LBE2:
 145              		.loc 1 96 0
 146 0100 0400A0E1 		mov	r0, r4
 147              	.LBB4:
 148              	.LBB5:
 149              		.loc 1 72 0
 150 0104 B050C3E1 		strh	r5, [r3, #0]	@ movhi
 151              	.LBE5:
 152              	.LBE4:
 153              		.loc 1 96 0
 154 0108 FEFFFFEB 		bl	calypso_bootrom
 155              		.loc 1 97 0
 156 010c FEFFFFEB 		bl	calypso_exceptions_install
 157              		.loc 1 100 0
 158 0110 050054E1 		cmp	r4, r5
 159              		.loc 1 101 0
 160 0114 FEFFFF1B 		blne	irq_init
 161              	.L2:
 162              		.loc 1 103 0
 163 0118 0600A0E1 		mov	r0, r6
 164 011c FEFFFFEB 		bl	sercomm_bind_uart
 165              		.loc 1 104 0
 166 0120 0500A0E1 		mov	r0, r5
 167 0124 FEFFFFEB 		bl	cons_bind_uart
 168              		.loc 1 107 0
 169 0128 0710A0E1 		mov	r1, r7
 170 012c 0600A0E1 		mov	r0, r6
 171 0130 FEFFFFEB 		bl	uart_init
 108:board/gta0x/init.c **** 	uart_baudrate(UART_MODEM, UART_115200);
 172              		.loc 1 108 0
 173 0134 0600A0E1 		mov	r0, r6
 174 0138 0210A0E3 		mov	r1, #2
 175 013c FEFFFFEB 		bl	uart_baudrate
 109:board/gta0x/init.c **** 
 110:board/gta0x/init.c **** 	/* Initialize IRDA UART to be used for old-school console code.
 111:board/gta0x/init.c **** 	 * note: IRDA uart only accessible on C115 and C117 PCB */
 112:board/gta0x/init.c **** 	uart_init(UART_IRDA, with_irq);
 176              		.loc 1 112 0
 177 0140 0500A0E1 		mov	r0, r5
 178 0144 0710A0E1 		mov	r1, r7
 179 0148 FEFFFFEB 		bl	uart_init
 113:board/gta0x/init.c **** 	uart_baudrate(UART_IRDA, UART_115200);
 180              		.loc 1 113 0
 181 014c 0210A0E3 		mov	r1, #2
 182 0150 0500A0E1 		mov	r0, r5
 183 0154 FEFFFFEB 		bl	uart_baudrate
 114:board/gta0x/init.c **** 
 115:board/gta0x/init.c **** 	/* Initialize hardware timers */
 116:board/gta0x/init.c **** 	hwtimer_init();
 184              		.loc 1 116 0
 185 0158 FEFFFFEB 		bl	hwtimer_init
 117:board/gta0x/init.c **** 
 118:board/gta0x/init.c **** 	/* Initialize DMA controller */
 119:board/gta0x/init.c **** 	dma_init();
 186              		.loc 1 119 0
 187 015c FEFFFFEB 		bl	dma_init
 120:board/gta0x/init.c **** 
 121:board/gta0x/init.c **** 	/* Initialize real time clock */
 122:board/gta0x/init.c **** 	rtc_init();
 188              		.loc 1 122 0
 189 0160 FEFFFFEB 		bl	rtc_init
 123:board/gta0x/init.c **** 
 124:board/gta0x/init.c **** 	/* Initialize system timers (uses hwtimer 2) */
 125:board/gta0x/init.c **** 	timer_init();
 190              		.loc 1 125 0
 191 0164 FEFFFFEB 		bl	timer_init
 126:board/gta0x/init.c **** 
 127:board/gta0x/init.c **** 	/* Initialize LCD driver (uses I2C) and backlight */
 128:board/gta0x/init.c **** 	bl_mode_pwl(1);
 192              		.loc 1 128 0
 193 0168 0600A0E1 		mov	r0, r6
 194 016c FEFFFFEB 		bl	bl_mode_pwl
 129:board/gta0x/init.c **** 	bl_level(50);
 195              		.loc 1 129 0
 196 0170 3200A0E3 		mov	r0, #50
 197 0174 FEFFFFEB 		bl	bl_level
 130:board/gta0x/init.c **** 
 131:board/gta0x/init.c **** 	/* Initialize keypad driver */
 132:board/gta0x/init.c **** 	keypad_init(keymap, with_irq);
 198              		.loc 1 132 0
 199 0178 0710A0E1 		mov	r1, r7
 200 017c 2C009FE5 		ldr	r0, .L5+16
 201 0180 FEFFFFEB 		bl	keypad_init
 133:board/gta0x/init.c **** 
 134:board/gta0x/init.c **** 	/* Initialize ABB driver (uses SPI) */
 135:board/gta0x/init.c **** 	twl3025_init();
 202              		.loc 1 135 0
 203 0184 FEFFFFEB 		bl	twl3025_init
 136:board/gta0x/init.c **** 
 137:board/gta0x/init.c **** 	/* Initialize TIFFS reader (7 sectors of 64 KiB each) */
 138:board/gta0x/init.c **** 	tiffs_init(0x380000, 0x10000, 7);
 204              		.loc 1 138 0
 205 0188 0E07A0E3 		mov	r0, #3670016
 206 018c 0118A0E3 		mov	r1, #65536
 207 0190 0720A0E3 		mov	r2, #7
 139:board/gta0x/init.c **** }
 208              		.loc 1 139 0
 209 0194 0CD08DE2 		add	sp, sp, #12
 210 0198 F040BDE8 		ldmfd	sp!, {r4, r5, r6, r7, lr}
 211              		.loc 1 138 0
 212 019c FEFFFFEA 		b	tiffs_init
 213              	.L6:
 214              		.align	2
 215              	.L5:
 216 01a0 08F0FEFF 		.word	-69624
 217 01a4 F5030000 		.word	1013
 218 01a8 0AF0FEFF 		.word	-69622
 219 01ac 0448FEFF 		.word	-112636
 220 01b0 00000000 		.word	keymap
 221              	.LFE43:
 267              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 init.c
     /tmp/ccbO4Ls2.s:13     .rodata:0000000000000000 keymap
     /tmp/ccbO4Ls2.s:42     .text.board_init:0000000000000000 board_init
     /tmp/ccbO4Ls2.s:49     .text.board_init:0000000000000000 $a
     /tmp/ccbO4Ls2.s:216    .text.board_init:00000000000001a0 $d

UNDEFINED SYMBOLS
calypso_mem_cfg
calypso_clock_set
calypso_rhea_cfg
calypso_bootrom
calypso_exceptions_install
irq_init
sercomm_bind_uart
cons_bind_uart
uart_init
uart_baudrate
hwtimer_init
dma_init
rtc_init
timer_init
bl_mode_pwl
bl_level
keypad_init
twl3025_init
tiffs_init
